/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {Chrono} from 'std/time';

export class DecimalA2a {

    totalTime: number = 0;
    runsLeft: number = 10000;
    strNumber: string = '';
    result: string = '';
    seed: number = 123;

    generateNumber(seed: number): number {
        const modulus = Math.pow(2, 32);
        const a = 1664525;
        const c = 1013904223;
      
        seed = (a * seed + c) % modulus;
        
        return Math.floor((seed / modulus) * 100); 
      }


    decimalStringToNumberToString(str:string):string {
        const res = Number(str);
        return String(res);
    }

    public setup(): void {
        const data: Number = this.generateNumber(this.seed);
        this.strNumber = data.toString(10);
    }

    test(): number {
        this.setup();
        while (this.runsLeft > 0) {
            const start = Chrono.nanoNow();
            this.result = this.decimalStringToNumberToString(this.strNumber);
            const end = Chrono.nanoNow();
            this.runsLeft = this.runsLeft - 1;
            this.totalTime = this.totalTime + (end - start);
        }
        return this.totalTime;
    }
}
