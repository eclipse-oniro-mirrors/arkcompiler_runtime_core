/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 5");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with toExpNeg and toExpPos is 0", testLnWithToExpNegAndToExpPosIsZero001);
    suite.addTest("Decimal ln with toExpNeg and toExpPos is 0", testLnWithToExpNegAndToExpPosIsZero002);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: -9e15, toExpPos: 9e15, minE: -9e15, maxE: 9e15 });
    checkLnResult('383519031.802423', '19.7648998041', 12, 3);
    checkLnResult('495413774.3180056262693', '20.02090387906982718762754628426', 31, 0);
    checkLnResult('103272854.9147823146420226558', '18.4528851204168398068299228814439335', 36, 2);
    checkLnResult('1255876919.801289301817086', '20.9510999', 9, 4);
    checkLnResult('892565379.904099781', '20.6096103237295763729453899449191', 33, 5);
    checkLnResult('714436577.20394836', '20.38700479', 10, 2);
    checkLnResult('114209899', '18.5535', 6, 6);
    checkLnResult('11138070.731145', '16.225879593546584', 17, 1);
    checkLnResult('173982352.98970322915408', '18.9744644324360810729339336092249432', 36, 0);
    checkLnResult('601898865.418395208648', '20.2155999915160485142287883', 27, 2);
    checkLnResult('1737398240.940989286501485', '21.3', 3, 5);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('1223195313.271302839406', '20.93', 4, 2);
    checkLnResult('483960664.70757792519406292', '19.9975141901128827175535702', 27, 0);
    checkLnResult('254561643.88559655966887725', '19.35505359', 10, 0);
    checkLnResult('230901371.26208883297662', '19.25750121307751', 16, 2);
    checkLnResult('39049637.3708272077470901', '17.480344148', 11, 5);
    checkLnResult('605727.08861135233', '13.314184814787811646051719561794', 32, 5);
    checkLnResult('110166953.414692391364862', '18.51750753144102983720945609400314449', 37, 3);
    checkLnResult('341161100.758980208051', '19.6478653599282687781757344218', 31, 4);
    checkLnResult('316912316.269705411968295', '19.57413568875', 13, 1);
    checkLnResult('1471705773.129049604979506', '21.1096879548887928212', 21, 2);
    checkLnResult('43608215.24072301429834', '17.6', 4, 0);
    checkLnResult('692035632.3', '20.3551480040192941281921918635691', 33, 4);
    checkLnResult('437966495.9954174972446009', '19.9', 3, 2);
    checkLnResult('1021072161.39012', '20.74411905080098544439092', 25, 0);
    checkLnResult('420919239.137', '19.85795154221623', 16, 2);
    checkLnResult('1478634317.69367498567837', '21.114384740403810652547', 23, 3);
}

function testLnWithToExpNegAndToExpPosIsZero001() {
    Decimal.toExpNeg = Decimal.toExpPos = 0;
    checkLnResult('5.84975137363E+67993', '1.565614346271e+5', 13, 6);
    checkLnResult('86581147739152189809997746256.485303', '6.6630879609165666865732779356483110831e+1', 39, 1);
    checkLnResult('2.12911330891919120203E+120504404889', '2.774716463382859039792244911807807628997e+11', 40, 2);
    checkLnResult('7.73433077472591367533265625623113999102E+390676254432750', '8.9956531964360115679915101731401388487e+14', 38, 6);
    checkLnResult('6.6826213753466680887906226588379005611546E-372991246306821', '-8.58844083563354531569986979442855776105e+14', 39, 5);
    checkLnResult('6.3492829903214E+3226', '7.42998785189041059280107543537699949138759874551e+3', 48, 0);
    checkLnResult('5.6620362147525246713E+777935299', '1.79126222452504931719151086e+9', 27, 0);
    checkLnResult('3.534154532190555885356307279594067464756994468E+36066880', '8.3047061501279186616689782347665205e+7', 35, 5);
    checkLnResult('3.5985126E+813569', '1.87331313204266617163386909806087492179897e+6', 42, 4);
    checkLnResult('8.02230502097885864396312997120584356127409109053488632E+57250', '1.3182507879969879935820551962408658e+5', 35, 3);
    checkLnResult('3.2733347380805773227156921973744955625117401773271E+7057864470', '1.625133351818013021763445401573927815324e+10', 40, 3);
    checkLnResult('3.200965011955166876210847170951991936E+25194197', '5.801178360560763736986182698175e+7', 31, 0);
}

function testLnWithToExpNegAndToExpPosIsZero002() {
    checkLnResult('2.49662549037205161930152513676222984332E-1769526964968889', '-4.074486411188359782e+15', 19, 1);
    checkLnResult('8.933353606087814264271069533725820479127E+94', '2.1863279060963e+2', 14, 2);
    checkLnResult('7.8520496399200949742657682831082508285588236E+751160063', '1.729609965577042813e+9', 20, 6);
    checkLnResult('9.8629670476255586848298885792269963362202371766864992350515E+76670756', '1.76540942122970827049200662319103105281075e+8', 42, 2);
    checkLnResult('7.164E+232', '5.36168810058817064037155119131349345287989327560924493423e+2', 57, 2);
    checkLnResult('7.0140848964616709789085128982324775586720562136938322979723E+94920694282961', '2.18562975672593082614e+14', 21, 0);
    checkLnResult('5.15295798111342379029337279689740749964293074731042E+75391', '1.73595832316829153955358568211169000080658e+5', 42, 3);
    checkLnResult('4.75511906567739510224E+9281276469', '2.1370928843035034699971447557867150369194e+10', 41, 1);
    checkLnResult('9.3428582919353239756E+9473', '2.1814623198164992616236995269818e+4', 32, 2);
    checkLnResult('8.69428902381899286125995853877646262336481547649342271017E+28073656389526', '6.464198270836177218138049860623405271087114955052778e+13', 52, 1);
    checkLnResult('3.736323028448724390151054937514728816501552616248E-859672555164790', '-1.979469210378545532338977821722936e+15', 34, 0);
    checkLnResult('2.824917408520510981566548810161099E-652378', '-1.502154819318141286164e+6', 22, 2);
}
