/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal log10 API tests");
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: 0, toExpPos: 0, minE: -9e15, maxE: 9e15 });
    suite.addTest("Decimal log10 with toExpNeg and toExpPos is 0", testLog10WithSpecificConfigPart001);
    suite.addTest("Decimal log10 with toExpNeg and toExpPos is 0", testLog10WithSpecificConfigPart002);
    suite.addTest("Decimal log10 with toExpNeg and toExpPos is 0", testLog10WithSpecificConfigPart003);
    suite.addTest("Decimal log10 with toExpNeg and toExpPos is 0", testLog10WithSpecificConfigPart004);
    return suite.run();
}

function checkLog10Result(n: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(Decimal.log10(n).valueOf(), expected);
}

function testLog10WithSpecificConfigPart001() {
    checkLog10Result('2.36333459535347419E+18828941140', '1.882894114037352521237663e+10', 25, 0);
    checkLog10Result('3.85857292671500073837429E+902683316', '9.026833165864267128e+8', 19, 6);
    checkLog10Result('9.6016490111491709821226489279E+51808023', '5.1808e+7', 6, 4);
    checkLog10Result('5.17351178517133458351944997054985443108308070481852782E+72447629057', '7.2447629057713785442739598355e+10', 29, 4);
    checkLog10Result('1.110105859069230266011E-30284901880', '-3.0284902e+10', 8, 5);
    checkLog10Result('9.048827409E+7267517760358', '7.267517760358956592304863221501460291e+12', 39, 1);
    checkLog10Result('1.088912795176892276835248776534961914045425466464600675903E+31952', '3.1952036994e+4', 11, 2);
    checkLog10Result('970.687987526534321426239801143994613178912', '2.9870796551693774977726248e+0', 26, 0);
    checkLog10Result('1.96809E+340418195', '3.4041819529404495466933301447841666e+8', 35, 0);
    checkLog10Result('6.86872871627264284462705542579681663626E-9', '-8.1631e+0', 5, 2);
    checkLog10Result('9.67348055315179509539189364657869462004005689059E-35611', '-3.561001441723707953133e+4', 22, 5);
    checkLog10Result('1.8744707925587479720553595210808247818401843056803276529372E+810679', '8.1067927e+5', 8, 1);
}

function testLog10WithSpecificConfigPart002() {
    checkLog10Result('8.942329972495772937474882956276E-40155184557896', '-4.015518455789504854931e+13', 22, 5);
    checkLog10Result('5.012575871519977416116054585544633184998370041087525008E+73424', '7.34247e+4', 6, 5);
    checkLog10Result('7.683518340090388031524844343382673720835893274744999E+2054546124012473', '2.05454612401247388556013e+15', 24, 5);
    checkLog10Result('3.815810146227322026775444113884081509750E+36773121563', '3.67731215635815867584594686290771255e+10', 36, 5);
    checkLog10Result('7.4861378005232013255069E+1485805', '1.485806e+6', 7, 0);
    checkLog10Result('9.07761360146935072886298392797676264735146941104416705855E+5852', '5.85295797169258163209871826529944651947e+3', 39, 4);
    checkLog10Result('3.4888777700553647252456603687651697829004766607593E+790861779850044', '7.9086177985004454268575e+14', 23, 4);
    checkLog10Result('7.6776640508986078666E-160824', '-1.6e+5', 3, 1);
    checkLog10Result('6.0310855923559920575167841704099767E+220096231795', '2.20096231796e+11', 12, 0);
    checkLog10Result('5.354591927609993818150377979653E+206804676737', '2.06804676737728726e+11', 18, 1);
    checkLog10Result('6.635487235E+6294451574004', '6.29445157400482187e+12', 18, 3);
    checkLog10Result('8.8584E-7247204157652366', '-7.2472041576523650526447131e+15', 27, 3);
    checkLog10Result('3.565918492306569022483822438092572617805207953592E+730255', '7.302555521714121e+5', 16, 4);
}

function testLog10WithSpecificConfigPart003() {
    checkLog10Result('354539328516823449672.983298997050733493', '2.054966441782787142944577776331757526e+1', 37, 4);
    checkLog10Result('5.1031831539356080897895506E-82341', '-8.2340292158844500189385823717987586e+4', 35, 0);
    checkLog10Result('9.3648851529395696724E+3631', '3.63197150245573683604e+3', 21, 6);
    checkLog10Result('9.353521E+1822', '1.822970975e+3', 10, 5);
    checkLog10Result('7.93249517949211819801840221693753800779017848E-53570', '-5.356910059018314442492287309e+4', 28, 3);
    checkLog10Result('51.59851352524098568099996391240738929', '1.712637190443409949195148634e+0', 28, 5);
    checkLog10Result('8.69810649237836206E+4576415322', '4.57641532293942472050213e+9', 24, 1);
    checkLog10Result('5.743720268213722512570210325542067E+58', '5.8759193280654602219732387e+1', 26, 3);
    checkLog10Result('8.619379022453270498382221769546056490709529450344410959315E+47788560', '4.77885609354759784887019304047e+7', 30, 5);
    checkLog10Result('6.544820735E+43543', '4.35438158977555672160892806801649648482e+4', 39, 6);
    checkLog10Result('9.7140458707335387296463547584212801920234541874110852E+56136', '5.613699e+4', 7, 0);
    checkLog10Result('670.08557647535', '2.8261302698e+0', 11, 1);
}

function testLog10WithSpecificConfigPart004() {
    checkLog10Result('8.3343821492312863357729036128803472E+20716943608421', '2.0716943609e+13', 11, 2);
    checkLog10Result('8.0445178773508301187593293762052E-5077691', '-5.077690094499978846538805108623135e+6', 34, 3);
    checkLog10Result('22.767730836345951349056967', '1.3573198e+0', 8, 2);
    checkLog10Result('7.457764361860907275E+83607531272', '8.360753127287260865712126e+10', 25, 6);
    checkLog10Result('3.415842397810612774258963557343915245829E-783248777', '-7.8324877646650217526059645247e+8', 29, 5);
    checkLog10Result('6.781552710927048827039026094701379639485822363E-63935527', '-6.39355261686708582592412650368413182e+7', 36, 5);
    checkLog10Result('6.18215839966859296918377E-95603', '-9.560220885987160841432001e+4', 25, 1);
    checkLog10Result('9.4568E-890882', '-8.90881024255795675e+5', 18, 5);
    checkLog10Result('5.1258099656456511679058622861734211977997669237E-5298117838', '-5.298e+9', 4, 1);
    checkLog10Result('6.29591891528059956655696230115941216487334752792035E-1099146', '-1.0991452009408738626139726375999e+6', 32, 3);
    checkLog10Result('8.0754743E-772876752955', '-7.7287675295409283196066e+11', 23, 0);
    checkLog10Result('1.469473602473045923603275116E-3456356954867', '-3.4563569548668328382111587476011e+12', 34, 6);
    checkLog10Result('5.275444573067300813303017433E+1246343974825', '1.246343974826e+12', 13, 0);
}
