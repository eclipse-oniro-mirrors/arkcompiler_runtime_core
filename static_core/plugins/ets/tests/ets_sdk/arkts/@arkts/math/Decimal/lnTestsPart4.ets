/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 4");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfig001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfig002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfig003);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfig004);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfig001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: 0, toExpPos: 0, minE: -9e15, maxE: 9e15 });
    checkLnResult('6.9114234023582240731E+5055056421210478', '1.16396975597230781881412937544250850646634588400335279264924e+16', 60, 2);
    checkLnResult('4.961229890606203486886459941941277127027E+604148', '1.39110378041583852706104753424975e+6', 33, 1);
    checkLnResult('1.2295412035299050272723E+2703096359889097', '6.224109383e+15', 10, 4);
    checkLnResult('9.657371691296E+308989382', '7.1147434715436423514160983064473799366383290739381572967375e+8', 59, 2);
    checkLnResult('1.4128908712960608623688853001789149213438E+2145', '4.93939066234102715130453498008430346620462153038006e+3', 51, 6);
    checkLnResult('26144210329259503349147403065.297086', '6.54334252745142805327741060175e+1', 30, 6);
    checkLnResult('8.33725972357462126144877718036E-640752', '-1.47538388278e+6', 12, 0);
    checkLnResult('4.1590152196231371771711659246E+403232512853795', '9.284771731076797069605043792598349156233286259e+14', 46, 1);
    checkLnResult('9.82E+13', '3.22180273312889684123493284e+1', 27, 3);
    checkLnResult('7.82843348542643E+46', '1.079766767019947895265445329067662e+2', 34, 5);
    checkLnResult('8.811680861027610685596511333077922481897E+767481402198272', '1.7671912358519e+15', 14, 6);
}

function testLnWithSpecificConfig002() {
    checkLnResult('1.2646988103492E-98338836657', '-2.264335393485497795949962419719976584598e+11', 40, 2);
    checkLnResult('1.540214958114481019557937E+59181121', '1.3626956743319885978e+8', 20, 6);
    checkLnResult('2.2618706725559597340E-80442266991491', '-1.85225164821253339576e+14', 21, 3);
    checkLnResult('2.25864914751234848775875033898256307911050778157110133811791E-309527450036735', '-7.127132923270444743819e+14', 22, 3);
    checkLnResult('2.330814534885802362082745596145962939767778133925858E+3904036936174', '8.989377251733e+12', 13, 4);
    checkLnResult('3.0420074653830109395743228528E+921305605563904', '2.121384553463298577109196723086986800668975639e+15', 46, 5);
    checkLnResult('1.0E+872', '2.0078542e+3', 8, 3);
    checkLnResult('1.323555869318702120137287477E-422', '-9.714105872883810124432881156687558071e+2', 37, 2);
    checkLnResult('4.84867115556496735086756738807727439043049075112985641565E+614778', '1.415580237005372281896918768840573147097e+6', 40, 2);
    checkLnResult('6833491.742', '1.57373463369279317127597002209e+1', 31, 4);
    checkLnResult('6.13048371442940275525618964841722738636998403233077810E-779320416', '-1.79445157073424472e+9', 18, 0);
    checkLnResult('6.0898902427122806E+4688', '1.07963255460151024248754967714575317203653e+4', 42, 2);
    checkLnResult('9.86452924549600460448324612453147245449268E+84761347812', '1.9517021593628361608673649350374236821833483200901459714e+11', 56, 0);
}

function testLnWithSpecificConfig003() {
    checkLnResult('3.9176116276489746389198699E+414', '9.54635710688990638428e+2', 21, 2);
    checkLnResult('4.095990639970856826151360589E+22632687948659', '5.2113689884969610573321058748008149098043826274e+13', 47, 2);
    checkLnResult('8.39387938871195E+763256545', '1.75746314477464181041383599861e+9', 30, 0);
    checkLnResult('7.800050366E+62060334923', '1.428992020619717061857733637740779046196932e+11', 43, 6);
    checkLnResult('8.089598709221611344683604575548820409668250E+87031175958679', '2.00396688388198128829e+14', 21, 4);
    checkLnResult('5.10635917896490647888E+3182', '7.3284562525678883986172066777758364471375155394546945442e+3', 56, 6);
    checkLnResult('0.0091575773634501050584', '-4.69317361524979007029379576e+0', 27, 3);
    checkLnResult('7.57895891043427E+89609785', '2.0633415715277728333795242903376837197944185472408033310945e+8', 59, 1);
    checkLnResult('3.52931879025497378514095E-394665', '-9.087484846216199820657414e+5', 25, 5);
    checkLnResult('9.25007957288654366172E+74427302675', '1.71375197653435e+11', 15, 5);
}

function testLnWithSpecificConfig004() {
    checkLnResult('9.689571004958528405688233E+6725552890171551', '1.54861578270520357492776037597261680823721e+16', 42, 5);
    checkLnResult('6.18835267180055712238377841454729349189226E+231771635055534', '5.3367391185773059667279852591e+14', 29, 2);
    checkLnResult('9.9940433950867406385462586629E+57', '1.33549339555687132737e+2', 21, 1);
    checkLnResult('5.2273640460183882551198285667311888762451852768642903877382E+86461', '1.99085e+5', 6, 1);
    checkLnResult('3.7574919683230201675805072575E+3940', '9.0735090181e+3', 12, 5);
    checkLnResult('0.3264874060', '-1.1193639037508e+0', 14, 5);
    checkLnResult('6.617722342369695540731E+87617', '2.01747487844113004556646596647711367404988980698550912078993e+5', 60, 2);
    checkLnResult('9.778534925839331822328485E+581875', '1.3398189811755800735983579926048573829203557e+6', 45, 0);
    checkLnResult('8.869065070E+6945', '1.599e+4', 4, 4);
    checkLnResult('3.13179778997337826067565187594790293739361810498E+22775780', '5.245e+7', 4, 0);
    checkLnResult('5.012E+3260', '7.50803923819762275176671578932335515919818e+3', 42, 0);
}
