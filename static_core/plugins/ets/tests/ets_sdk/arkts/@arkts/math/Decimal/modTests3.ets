/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal mod API tests");
    suite.addTest("Decimal mod with different precision and rounding", testModWithDiffPRandRM001);
    suite.addTest("Decimal mod with different precision and rounding", testModWithDiffPRandRM002);
    suite.addTest("Decimal mod with different precision and rounding", testModWithDiffPRandRM003);
    suite.addTest("Decimal mod with different precision and rounding", testModWithDiffPRandRM004);
    return suite.run();
}

function checkModResult(a: string, b: string, expected: string, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(a).mod(b).valueOf(), expected);
}

function testModWithDiffPRandRM001() {
    Decimal.toExpNeg = Decimal.toExpPos = 0;
    checkModResult('3.34143206113154599754e+6694', '-7.26959684903106538055444862542e+55', '3.3407965043731368445510652696e+54', 72, 6);
    checkModResult('7.01029485594801768569517050720798941155721968259835932500e+9422', '-7.0642669512907646431409065185107769129961433230267e+65', '2.2427484434740226146829404720536384416432051622105e+65', 95, 1);
    checkModResult('-4.33801305787072916172388791e+80', '5.22122485473591837565234669915e+391', '-4.33801305787072916172388791e+80', 27, 2);
    checkModResult('7.8492581941996654096258841e+325', '8.9130586564498055969723193446e+77', '6.957386304461095271086697014e+77', 33, 6);
    checkModResult('7.23792299537795282764181e+89', '84967.13729986244128821297358194722156577559385', '6.7621143544859443748328006466947263422e+4', 38, 0);
    checkModResult('5033998704.17776924377988587279152844', '8.08401900237472415884868065688485795856720872615446e+8410', '5.03399870417776924377988587279152e+9', 33, 3);
    checkModResult('-5.94302899773211952133552303e+187', '2.9972e+7', '-2.9248e+7', 64, 5);
    checkModResult('-9.708e+685', '9.19085856796459395e+9531', '-9.708e+685', 68, 0);
    checkModResult('-1.5465036868358516166872219595', '-6.6120784612856e+68', '-1.5465036868358516166872219595e+0', 35, 3);
    checkModResult('-3.3053551448370844845756700300850e+3913', '-8.3467925553134e+50', '-4.1896819159544e+50', 96, 1);
    checkModResult('9.09456645650818213193831463546071024679434471379e+666', '7.38724213405152e+6026', '9.09456645650818213193831463546071024679434471379e+666', 67, 5);
}

function testModWithDiffPRandRM002() {
    checkModResult('4.58641736178041090644887341275999994080950314188e+1696', '42578392.4318675275571079327730844188901162369235804917550975', '1.23791564353744632853300363493236151396949910992682155531775e+7', 65, 5);
    checkModResult('7.9961e+998', '-1.1820804651008895509998463408241199118086e+9578', '7.9961e+998', 63, 2);
    checkModResult('-6.072e+5252', '-7.18009312791883624836138815068459810882308438794417e+8712', '-6.072e+5252', 47, 4);
    checkModResult('-4.5600994941281230126894362369720165703108388452e+2403', '-622038.4747064194717182782274608403027399105469860723330', '-5.4141438904500328e+5', 17, 6);
    checkModResult('-3.25278868174882601881e+2959', '7.8431549098046872891828825565737588458734074284671853699539e+633', '-2.3794416114981559662e+633', 20, 1);
    checkModResult('3.6343105960435681326882097841415419173146739156748857909293e+163', '-21', '1.5e+1', 34, 0);
    checkModResult('-8.518623612127699770931777976e+45', '2646604900335022323292722367397273217264.57291', '-1.71262916408899413908e+39', 21, 3);
    checkModResult('4174055292995644.9880231577567977226789530659873674', '8.360559715199137928831459829758326270411708783897324911671e+6398', '4.174055293e+15', 12, 6);
    checkModResult('61974599899119.9534242842171966733601323', '-5.453e+1783', '6.197e+13', 4, 3);
    checkModResult('6543503.0162949178948038773968906145153443230268592', '-7125491.922', '6.5435030162949178948038773968906145153443e+6', 41, 6);
    checkModResult('-29924.33147502565764364098940606', '-1592929.777384719554672688705249208524154144674784435883721', '-2.99243314750256576e+4', 18, 1);
    checkModResult('-4311819637633458353446934226481969087340.175', '3e+888', '-4.311819637633458353446934226481969087340175e+39', 69, 6);
    checkModResult('-701325358.8507151963018486', '5.02485985784225975e+2516', '-7.013253588507151963018486e+8', 69, 1);
}

function testModWithDiffPRandRM003() {
    checkModResult('-6.3336349419868999600556396454550393580710353e+559', '30.032145617405641584200167823777472745177252592857', '-1.804780266424170907995664538747e+1', 31, 5);
    checkModResult('8208171.29438957568235282192379149634710643516674459', '5.526518296200919451845144699586071213e+56', '8.20817129438957568235282192379149634710643516674459e+6', 74, 6);
    checkModResult('-7026771.991488141635713537245992635089330556307', '-5.78495686345608787896765252e+87', '-7.026771991488141635713537245992635089330556307e+6', 78, 3);
    checkModResult('-682825', '-9.58106140947497715953494e+7650', '-6.82825e+5', 53, 1);
    checkModResult('1.0432667917954743913105334020914075684681873553141e+53', '-363639573.56541900063559754', '8.8041122284741437367e+6', 20, 2);
    checkModResult('9.294092190225380807622716e+554', '82510153.549550000881266062462945', '5.7307479561359672028887521773435e+7', 37, 0);
    checkModResult('-8.61826021489505921628320081423912946310238785369120278845e+4535', '4413386685.26795493710228068839622996984174618', '-3.38270650710585646963860751526981526607567182e+9', 85, 3);
    checkModResult('-2.672585214604e+621', '-9.578201948955624059202e+62', '-5.08879650726473396428e+61', 35, 4);
    checkModResult('6.9128357540377177371762216197787022755536508992068094e+523', '-3.2577610725568034259555913702314301e+502', '3.2025889458822105348276677851579185e+502', 94, 4);
    checkModResult('-5.441086784380795770829212', '671.1382228580292151191915154358159424235725030704', '-5.4410867843808e+0', 14, 6);
    checkModResult('8.151289172051252728e+49', '-288.51320484667811368085314331', '2e+2', 1, 5);
    checkModResult('8.075e+8', '-2.3439742423603951162113459', '1.5484257243982081068293252e+0', 98, 6);
    checkModResult('-5.8040872885301e+27', '-756632.178760425828115651424792498655635088327', '-6.7838751e+5', 8, 5);
}

function testModWithDiffPRandRM004() {
    checkModResult('-6.30185023912358362453739e+43', '-5.8291686913947145494292529837761538164089993367780968996309e+182', '-6.301e+43', 4, 2);
    checkModResult('-2.3168408598819483038286410534187220e+54', '5.76821013360839181791090764e+895', '-2.316840859881948303828641053418722e+54', 64, 5);
    checkModResult('4.73433879920597402830e+517', '7.19935223140121316154319557870953e+83', '6.276715240828e+83', 13, 4);
    checkModResult('-2.81509e+6', '1.812e+246', '-2.81509e+6', 83, 3);
    checkModResult('-3.7125440302535164287920458084935906', '9.4056833e+407', '-3.7125440302535164287920458084935906e+0', 100, 0);
    checkModResult('3.8089600875379985918666854598970946009387586848198798601e+64', '-9.842428987583196816730893684990759478255192322e+172', '3.808960087537998592e+64', 19, 2);
    checkModResult('-6.49308611559837353028439424226724e+681', '-6.9279627338450039699162972e+5038', '-6.49308611559837353028439424226724e+681', 52, 1);
    checkModResult('-3.283e+8', '1.59267743467980e+46', '-3.283e+8', 74, 5);
    checkModResult('8.69757929965438373165362773612974e+192', '-73.79436307426341549232457077000482745011', '5.145179803297395e+1', 16, 0);
    checkModResult('-8.2373007776535315311267037638881860091e+40', '-5.757730498009786912193794e+37', '-3.7461654995362466895783438881860091e+37', 89, 1);
    checkModResult('8.2753743577733496649229415e+370', '-88797.16162', '5.492178204e+4', 93, 4);
    checkModResult('1.48581817545381241776887741933992917284785358529', '5903622466634088045894004.22718934', '1.48581817545381241776887741933992917284785358529e+0', 71, 6);
    checkModResult('5.129086074208008222351499810040746978958761126e+293', '496793381949653476385416592315281192971751225.09020825', '4e+44', 1, 1);
}
