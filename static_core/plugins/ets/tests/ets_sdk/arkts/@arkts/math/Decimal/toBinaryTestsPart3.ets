/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal toBinary API tests");
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM001);
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM002);
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM003);
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM004);
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM005);
    suite.addTest("Decimal toBinary with different precision and rounding", testToBinaryWithDiffPRAndRM006);
    return suite.run();
}

function checkToBinaryResult(expected: string, n: string | double, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).toBinary(), expected);
}

function testToBinaryWithDiffPRAndRM001() {
    Decimal.set({ toExpNeg: -9e15, toExpPos: 9e15, minE: -9e15, maxE: 9e15 });
    checkToBinaryResult('0b11101111111000111000010010011101000110101000100101100010', '67522678144797026', 56, 4);
    checkToBinaryResult('0b11100000110000100010000100100100000010001111011000011001101101101101001000010011101010011110110010101111010000001100000100100100000', '2390040390567048642966647388057001920800', 131, 4);
    checkToBinaryResult('0b1010000110010110100110111100111101001001101101011001111001110010000110100010000000000101100011101100010011011000000010111111000110000001', '54985654283950555052147243853162465718657', 136, 4);
    checkToBinaryResult('0b11000011100011000100111110110111001010010101000011001010010011101111010011110001101100110110001111011110100110010011', '63458983779334095341636694071699859', 116, 4);
    checkToBinaryResult('0b101111100010001011001011101011100010010111010000111100101000010011100010100001001111001100010000111111', '3766029900593721359372665013311', 102, 4);
    checkToBinaryResult('0b101111011000101011011011001000010010011111001001111010000111011111010010010100111011110010011100010011000111110011110110001010101100010110010110001111011100', '67630990462245519904689419770374213484683027420', 156, 4);
    checkToBinaryResult('0b1000101000001110001001001111100000001100000100', '37948338602756', 46, 4);
    checkToBinaryResult('0b1110100101100011001000000000001010011000110001010101101010010', '2102165078632082258', 61, 4);
    checkToBinaryResult('0b11', '3', 2, 4);
}

function testToBinaryWithDiffPRAndRM002() {
    checkToBinaryResult('0b11000000101111101111010110110101001110011010001011001011', '54253158045164235', 56, 4);
    checkToBinaryResult('0b1011101000010110000100000100111001010100101101011011101001001011001111001100101110010100100011101011', '921454163161847327849553938667', 100, 4);
    checkToBinaryResult('0b11011110010110101000111111000110101111000110111001001011111', '500696147126612575', 59, 4);
    checkToBinaryResult('0b1010101001110010100011100110011111001011001010011010000110001101', '12282035710234042765', 64, 4);
    checkToBinaryResult('0b1001101010011101000101110010011010001010101111001000000101010010100001100000110010100001000001111011011110001100110111101011111011000011001011000100000000011110001011111011', '3615489279593509708772217418002107077942788107657979', 172, 4);
    checkToBinaryResult('0b1010010111011001111100100000011001101110111101110011101010110000011011001110010010111000000110101001101000001110', '3363864999018073552305148875414030', 112, 4);
    checkToBinaryResult('0b10110111000011100000100001000111101011000010011100010111111001001110011000000111100110101111111111111011110110111010111011010000101010100111011000100110010111001', '2090116485561415533220743961894899901833660878009', 161, 4);
    checkToBinaryResult('0b101001101001001011010001100010111111010000001111110100110010110011101000000011010111111110011100001011100011111101100100010110000001100111000010001111110', '7429426803493479456828449389493437652073153662', 153, 4);
    checkToBinaryResult('0b10101101101111010111001110101001101001100', '1492415632204', 41, 4);
}

function testToBinaryWithDiffPRAndRM003() {
    checkToBinaryResult('0b100011011100100000101110001000011111111010011010011001101001010010000011110000111011010001101011000010010000110110001', '92021749248802288107686447118623153', 117, 4);
    checkToBinaryResult('0b10110001100100001110111010111001010011000110010100011010110010010100110100111111101111010110100110100', '1758529900728895870358045306164', 101, 4);
    checkToBinaryResult('0b1001111000000', '5056', 13, 4);
    checkToBinaryResult('0b110000111100010100101000011111110101000011110011111100111010010010001111001101100000001000111111100010010101100', '1985345177021823592895244450907308', 111, 4);
    checkToBinaryResult('0b1001110000100000000000110110100010010101111110010100011100010101101010', '719999719481543869802', 70, 4);
    checkToBinaryResult('0b111100100100001100100101001110001101011010010100011010011100101000000101011011', '286012825709225924788571', 78, 4);
    checkToBinaryResult('0b11010111100100111111110100111001010000011101110110100000001100001100001011011000110100010110110001110101100111100111000110010100011', '2292419381743847793952323533642807872675', 131, 4);
    checkToBinaryResult('0b100110100001101001001110101010000101110100000100000010100110001010101111110100110101001001001011011101000111001101100001101100010011000010011010', '13424243929007150060864059623182269932449946', 144, 4);
}

function testToBinaryWithDiffPRAndRM004() {
    checkToBinaryResult('0b101101010011001101010001010001010000110000011111', '199232011439135', 48, 4);
    checkToBinaryResult('0b100101010000010110110111111000101111000110000101010010001001101001101000', '2748976914400602004072', 72, 4);
    checkToBinaryResult('0b1100010100011100010100101000101110001101001001010111100010', '221926845064713698', 58, 4);
    checkToBinaryResult('0b111010011101110111001010101110100000001011000', '32142349779032', 45, 4);
    checkToBinaryResult('0b1011000111100001011000110110010011101101', '763990598893', 40, 4);
    checkToBinaryResult('0b111110001111011010110111001010100111111101111001001011010101110110110011010001110010101101000011', '77050543164333814857060526915', 96, 4);
    checkToBinaryResult('0b110111110010111101111000100111010010001110001111111100001101100010001101000100100100011100100011011011010111010111001001001110100001100', '37973033900975016780110288277302266862860', 135, 4);
    checkToBinaryResult('0b101000111010110010000111111000011000001001011001111000001100001001110001101100001111001000000000010111111101110011100011011001111111110100100010001110000000101101001110100', '1913677948341929506841492066019813618520908835609204', 171, 4);
    checkToBinaryResult('0b1111101001100110010101010000001000100000101001101110110100011', '2255400303091572131', 61, 4);
    checkToBinaryResult('0b110100010100001101111110100010100001100101110001100011111001010001101001100010011011001110110011000010100001001011101100001011101001011010000011001010001100', '74667765260706149423652281266282011954894090892', 156, 4);
    checkToBinaryResult('0b1000000010111101', '32957', 16, 4);
}

function testToBinaryWithDiffPRAndRM005() {
    checkToBinaryResult('0b1111110100011101111101100011', '265412451', 28, 4);
    checkToBinaryResult('0b11110010', '242', 8, 4);
    checkToBinaryResult('0b1001111110110111001001000000111011110010101101011001000011110110000001000000001101110010100000110111011000101111000100101111111001100001001100011111010100101100100', '7294509680489473516157489095568130945736908974436', 163, 4);
    checkToBinaryResult('0b111101001100101010011001111111100101100011110011110', '2153208033232798', 51, 4);
    checkToBinaryResult('0b101111100110101010011111110100000001110001010101110001000001101101101011111010100110011011011', '7366381587271251372942380251', 93, 4);
    checkToBinaryResult('0b11100', '28', 5, 4);
    checkToBinaryResult('0b10011100111001101100', '642668', 20, 4);
    checkToBinaryResult('0b10100010111000011011100101000111000010110010000101111001111001111011101110110110100101001110100100111010101010111100100001001110110100100100100', '7094500064780213519639611108740313788148004', 143, 4);
    checkToBinaryResult('0b111110111101010100110000011010010100100111110001111001101110110001011110001111011000011001000100110101101100001010000011000001000111010100', '342777004104073921541803082899350493073876', 138, 4);
    checkToBinaryResult('0b11100011110111111101111100110111111000010011000000101100001100000100000011111110011001110100000111001011111111010110100111111011010101110011011011101000', '5081771157073840975382845753680003415619876584', 152, 4);
    checkToBinaryResult('0b1110101100001100111010010101011010001101111001100101110110011101111101110111000011101001010011110110000100011010011001001100100010111', '9997939815383461009512050917690963695895', 133, 4);
}

function testToBinaryWithDiffPRAndRM006() {
    checkToBinaryResult('0b10001010010011111111100001110010110100110011101', '76038037662109', 47, 4);
    checkToBinaryResult('0b1101000011101001000100110101000110011011110000001000010010000011111000010000111011101001000010011111010011111111011111101101101110110110001011010111000000100001001000', '76330741559420840213970134181579220885370404866120', 166, 4);
    checkToBinaryResult('0b101110101011111101011000011101001100011100000100001000110011101011011101110001101110110011010110010111100', '29591313602933764036329127652540', 105, 4);
    checkToBinaryResult('0b110011101001000110010011100', '108301468', 27, 4);
    checkToBinaryResult('0b10111010011000101111000011000000111000011100011010000010011000011101011011111000001100000001110001', '230735293932368005478672810097', 98, 4);
    checkToBinaryResult('0b101110001011101011001000111000101100110110001010110111110010110111000101000010110100000010010011101000111001010010011011010', '7673368527850305306860702856736711898', 123, 4);
    checkToBinaryResult('0b11000010011011000010100001001011111110000001111000101100100011011100000', '1793230956491923932896', 71, 4);
    checkToBinaryResult('0b10101110101001011001101100000100111110111010000110100110110', '393269849358142774', 59, 4);
    checkToBinaryResult('0b11100010011101010', '115946', 17, 4);
    checkToBinaryResult('0b11110001000100001110011001100100', '4044416612', 32, 4);
}
