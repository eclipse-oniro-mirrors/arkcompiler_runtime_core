/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal mul API tests");
    suite.addTest("Decimal mul with specific config", testMulWithSpecificConfig001);
    suite.addTest("Decimal mul with specific config", testMulWithSpecificConfig002);
    suite.addTest("Decimal mul with specific config", testMulWithSpecificConfig003);
    suite.addTest("Decimal mul with specific config", testMulWithSpecificConfig004);
    suite.addTest("Decimal mul with specific config", testMulWithSpecificConfig005);
    suite.addTest("Decimal mul with different precision and rounding", testMulWithDiffPRandRM001);
    suite.addTest("Decimal mul with different precision and rounding", testMulWithDiffPRandRM002);
    suite.addTest("Decimal mul with different precision and rounding", testMulWithDiffPRandRM003);
    return suite.run();
}

function checkMulResult(multiplicand: string, multiplier: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm; 
    Decimal.toExpNeg = Decimal.toExpPos = 0;
    arktest.assertEQ(new Decimal(multiplicand).mul(multiplier).valueOf(), expected);
}

function testMulWithSpecificConfig001() {
    Decimal.set({ precision: 300, rounding: 4, toExpNeg: -7, toExpPos: 21, minE: -9e15, maxE: 9e15 });
    arktest.assertEQ(new Decimal(1).mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-1).mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(1).mul(Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(1).mul(-Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-1).mul(Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-1).mul(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(0).mul('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-0).mul('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(0).mul('Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(0).mul('-Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-0).mul('Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-0).mul('-Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(1).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(-1).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(-0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(Infinity).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(-Infinity).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('Infinity').mul(1).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').mul(-1).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('-Infinity').mul(1).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('-Infinity').mul(-1).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').mul(0).valueOf(), 'NaN');
}

function testMulWithSpecificConfig002() {
    arktest.assertEQ(new Decimal('Infinity').mul(-0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('-Infinity').mul(0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('-Infinity').mul(-0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('Infinity').mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('-Infinity').mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('Infinity').mul(Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').mul(-Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('-Infinity').mul(Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('-Infinity').mul(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(1).mul(0).valueOf(), '0');
    arktest.assertEQ(new Decimal(-1).mul(-0).valueOf(), '0');
    arktest.assertEQ(new Decimal(0).mul(1).valueOf(), '0');
    arktest.assertEQ(new Decimal(-0).mul(-1).valueOf(), '0');
    arktest.assertEQ(new Decimal(0).mul(0).valueOf(), '0');
    arktest.assertEQ(new Decimal(-0).mul(-0).valueOf(), '0');
    arktest.assertEQ(new Decimal(1).mul('1').valueOf(),'1')
    arktest.assertEQ(new Decimal(1).mul('-45').valueOf(), '-45');
    arktest.assertEQ(new Decimal(1).mul('22').valueOf(), '22');
    arktest.assertEQ(new Decimal(1).mul(0o144).valueOf(), '100');
    arktest.assertEQ(new Decimal(1).mul('0144').valueOf(), '144');
    arktest.assertEQ(new Decimal(1).mul('6.1915').valueOf(), '6.1915');
    arktest.assertEQ(new Decimal(1).mul('-1.02').valueOf(), '-1.02');
    arktest.assertEQ(new Decimal(1).mul('0.09').valueOf(), '0.09');
}

function testMulWithSpecificConfig003() {
    arktest.assertEQ(new Decimal(1).mul('-0.0001').valueOf(), '-0.0001');
    arktest.assertEQ(new Decimal(1).mul('8e5').valueOf(), '800000');
    arktest.assertEQ(new Decimal(1).mul('9E12').valueOf(), '9000000000000');
    arktest.assertEQ(new Decimal(1).mul('1e-14').valueOf(), '1e-14');
    arktest.assertEQ(new Decimal(1).mul('3.345E-9').valueOf(), '3.345e-9');
    arktest.assertEQ(new Decimal(1).mul('-345.43e+4').valueOf(), '-3454300');
    arktest.assertEQ(new Decimal(1).mul('-94.12E+0').valueOf(), '-94.12');
    arktest.assertEQ(new Decimal(1).mul(Number.POSITIVE_INFINITY).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(1).mul(Number.NEGATIVE_INFINITY).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('0').mul(0).valueOf(), '0');
    arktest.assertEQ(new Decimal('0').mul('0').valueOf(), '0');
    arktest.assertEQ(new Decimal(9.654).mul(0).valueOf(), '0');
    arktest.assertEQ(new Decimal(0).mul('0.001').valueOf(), '0');
    arktest.assertEQ(new Decimal(0).mul('111.1111111110000').valueOf(), '0');
    arktest.assertEQ(new Decimal('NaN').mul('0').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-1).mul(1).valueOf(), '-1');
    arktest.assertEQ(new Decimal(-0.01).mul(0.01).valueOf(), '-0.0001');
    arktest.assertEQ(new Decimal(54).mul(-54).valueOf(), '-2916');
    arktest.assertEQ(new Decimal(9.99).mul('-9.99').valueOf(), '-99.8001');
    arktest.assertEQ(new Decimal('0.0000023432495704937').mul('-0.0000023432495704937').valueOf(), '-5.49081854961890952566173969e-12');
    arktest.assertEQ(new Decimal(NaN).mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(NaN).mul('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(4).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul('4534534.45435435').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').mul(99999.999).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(Infinity).mul('354.345341').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(3).mul('-Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-Infinity).mul('-Infinity').valueOf(), 'Infinity');
}

function testMulWithSpecificConfig004() {
    arktest.assertEQ(new Decimal('-Infinity').mul(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').mul('-999e999').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(1.21123e43).mul('-Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('-999.0').mul('Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('657.342e-45').mul('-Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('Infinity').mul(123).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-0).mul('Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(100).mul(100).valueOf(), '10000');
    arktest.assertEQ(new Decimal(-999.99).mul('0.01').valueOf(), '-9.9999');
    arktest.assertEQ(new Decimal('10').mul(4).valueOf(), '40');
    arktest.assertEQ(new Decimal('03.333').mul(-4).valueOf(), '-13.332');
    arktest.assertEQ(new Decimal(-1).mul(-0.1).valueOf(), '0.1');
    arktest.assertEQ(new Decimal(43534.5435).mul('0.054645').valueOf(), '2378.9451295575');
    arktest.assertEQ(new Decimal('99999').mul('1').valueOf(), '99999');
    arktest.assertEQ(new Decimal('-19.851').mul('69.11').valueOf(), '-1371.90261');
    arktest.assertEQ(new Decimal('-0.0251').mul('-1.09821').valueOf(), '0.027565071');
    arktest.assertEQ(new Decimal('-2.11').mul('-21').valueOf(), '44.31');
    arktest.assertEQ(new Decimal('-1').mul('7161').valueOf(), '-7161');
    arktest.assertEQ(new Decimal('-4.61').mul('1').valueOf(), '-4.61');
    arktest.assertEQ(new Decimal('11').mul('-0.0000271').valueOf(), '-0.0002981');
    arktest.assertEQ(new Decimal('-1').mul('0.0000224801').valueOf(), '-0.0000224801');
    arktest.assertEQ(new Decimal('-3.6').mul('-3336').valueOf(), '12009.6');
    arktest.assertEQ(new Decimal('0.000000219').mul('-110.42').valueOf(), '-0.00002418198');
    arktest.assertEQ(new Decimal('312').mul('22.87694').valueOf(), '7137.60528');
    arktest.assertEQ(new Decimal('0.29976').mul('-5').valueOf(), '-1.4988');
}

function testMulWithSpecificConfig005() {
    arktest.assertEQ(new Decimal('0.00000000000000000010018').mul('-74.6').valueOf(), '-7.473428e-18');
    arktest.assertEQ(new Decimal('138.583905').mul('9.73380').valueOf(), '1348.948014489');
    arktest.assertEQ(new Decimal('5360260.6').mul('-12.12').valueOf(), '-64966358.472');
    arktest.assertEQ(new Decimal('-7.01').mul('-0.0000000988077').valueOf(), '6.92641977e-7');
    arktest.assertEQ(new Decimal('0.0000202').mul('-56583117802').valueOf(), '-1142978.9796004');
    arktest.assertEQ(new Decimal('116727.96').mul('0.0000000000000019308').valueOf(), '2.25378345168e-10');
    arktest.assertEQ(new Decimal('-136636.46').mul('6.5636554051').valueOf(), '-896834.639212729946');
    arktest.assertEQ(new Decimal('12.1712598149').mul('53.270389').valueOf(), '648.3677449597909961');
    arktest.assertEQ(new Decimal('76').mul('76019.61784').valueOf(), '5777490.95584');
    arktest.assertEQ(new Decimal('0.0000714939').mul('1425786').valueOf(), '101.9350017054');
    arktest.assertEQ(new Decimal('-3221.71685').mul('-230').valueOf(), '740994.8755');
    arktest.assertEQ(new Decimal('0.00000000237457904').mul('-892315').valueOf(), '-0.0021188724960776');
    arktest.assertEQ(new Decimal('6511.4').mul('0.0000000000000186').valueOf(), '1.2111204e-10');
    arktest.assertEQ(new Decimal('0.000000011188562').mul('0').valueOf(), '0');
    arktest.assertEQ(new Decimal('-25379.8').mul('3').valueOf(), '-76139.4');
    arktest.assertEQ(new Decimal('41.9279').mul('23.4198661').valueOf(), '981.94580385419');
    arktest.assertEQ(new Decimal('0.0000010').mul('58236.222').valueOf(), '0.058236222');
    arktest.assertEQ(new Decimal('0.000000004846959').mul('1').valueOf(), '4.846959e-9');
    arktest.assertEQ(new Decimal('-8065.5').mul('-0.00000000058314173').valueOf(), '0.000004703329623315');
    arktest.assertEQ(new Decimal('-443850607').mul('-1').valueOf(), '443850607');
    arktest.assertEQ(new Decimal('-0.070884').mul('0.0000000000000000002106611401').valueOf(), '-1.49325042548484e-20');
    arktest.assertEQ(new Decimal('15510739.6998').mul('4.13').valueOf(), '64059354.960174');
    arktest.assertEQ(new Decimal('-1182.8').mul('0.00000000000006116702878').valueOf(), '-7.2348361640984e-11');
    arktest.assertEQ(new Decimal('0.000000000000000024429766').mul('1.492').valueOf(), '3.6449210872e-17');
    arktest.assertEQ(new Decimal('-521641.171').mul('0.000000044916564267').valueOf(), '-0.023430329181534636657');
    arktest.assertEQ(new Decimal('-1.4').mul('-50.3861389').valueOf(), '70.54059446');
    arktest.assertEQ(new Decimal('-906235823').mul('169450901242').valueOf(), '-153562476945135592166');
    arktest.assertEQ(new Decimal('818.5').mul('-0.0000000000000002572').valueOf(), '-2.105182e-13');
    arktest.assertEQ(new Decimal('0').mul('2').valueOf(), '0');
}

function testMulWithDiffPRandRM001() {
    checkMulResult('8.7640115353288983769636573243142380477', '98132771361613972783640738.8', '8.6003674020697822292e+26', 21, 1);
    checkMulResult('9883.35324545076423007', '11534864.85576058804', '1.140031440080173692239106128721010503628e+11', 96, 5);
    checkMulResult('783715483584289803764074.0162744727280534', '587170409.865560908036543', '4.60174541714173715664e+32', 21, 3);
    checkMulResult('31262.9696080945278832538654512053499', '1521666893653481239743.043288560492693823973095115099368', '4.75718258499323920319594724294097666996623614819732348e+25', 54, 2);
    checkMulResult('166409773943488.683641092651970053074130172697160981650', '29383374581263422.64023860404731207688485848306803', '4.8896807217648976193745354023928027035617334126548609476076571e+30', 62, 5);
    checkMulResult('99801119833708.031510783672287782392', '87030725026830312515179448.179673604958603757057054897072499933901', '8.6e+39', 2, 3);
    checkMulResult('69731726468060380.008754386406977183117439', '6507714968375561.33257030119935', '4.537942001068668490255113904663360975e+32', 37, 0);
    checkMulResult('826.39677733802082780060', '868237729898283157855076252483.31358937218256594842233795879804', '7.175088619512201756727486736e+32', 28, 0);
    checkMulResult('97217122196114863.76307918894', '364113335834514329508664304298161.52242179479054037', '3.5398050663058988634098095121967083071e+49', 38, 1);
    checkMulResult('694287.0306858418134468623', '447593578620913867261109598650200200326.4456503480625181364964224', '3.107584166547641764350683201983126563462027750463328256303247683293325772050963164554356e+44', 88, 0);
    checkMulResult('93531032436395964.711423', '6448227682408.97162274053113046870693355787761', '6.031093925206599020774031e+29', 25, 2);
    checkMulResult('59420641950920240756465.98423943966502979950309', '463601148613543697810692411885405.567307456576230992948033603539274944', '2.75474778598007436599867793211769930534477108061706131687471730901078e+55', 70, 0);
    checkMulResult('2277315731915149177050340.03547342356244316415202385200697752', '6094500.77365339', '1.3879e+31', 5, 3);
    checkMulResult('42499210185.324283508514337889872833', '6164109749819966303123685.0308732625627133229964813958076024', '2.61969795863005432962609968421706697692808308727433211318709180244255952739662715e+35', 81, 6);
    checkMulResult('50420118559072004.14730128780580482018515', '291795344982121444321307800114867269.98968', '1.471235588898387943301857933580557e+52', 34, 4);
    checkMulResult('539939290941744314049.4828453820231463558332989927861649996', '56.0', '3.0236600292737681586771e+22', 24, 5);
    checkMulResult('974009303998280915261274173.014298757403849048', '477646393839119546.9057', '4.652320316205296032282599543500856192917503854138162003909582907736e+44', 88, 4);
    checkMulResult('425036.71458946184', '828502.099774406', '3.5214381051858403971876e+11', 23, 1);
    checkMulResult('3.0394775192110017953283324', '179399012406133.674', '5.45279265177098e+14', 15, 3);
    checkMulResult('59591887481255758486.04419478394445992184038150', '4703540070912994338607753391.51553618', '2.8029283066942488985468816630836697194164252863314946121251268601762735534825267e+47', 80, 3);
    checkMulResult('95721039331714561128531.5388333857551', '55776353283228975465181218023408074000.0635473992531779', '5.338970506403567357128883289406493806727217099380238503907444806e+60', 64, 2);
    checkMulResult('526585509414392639783563978.124078638369185164439406399142823206590', '87507182704426188499191996302912.695351138484022', '4.608001438182859346468676488909777512497686963711987878e+58', 55, 4);
    checkMulResult('1329389548866606584.0219028742633681448', '82512404176983746737881954764.075223596979', '1.096911277647395278024698413191e+47', 31, 2);
    checkMulResult('9700740614644246975635351274850205744655.57062922663780504', '2272806307120089287441.2888975497068890265', '2.20479044526994561155551002188480195431e+61', 39, 2);
    checkMulResult('29511272033245325473630.9914233118168', '3652962711970478409731.7096578440', '1.078035763202623786222162267776426022008745922576294592360500109792e+44', 85, 2);
    checkMulResult('14296983312767601794907267485.024743090402168607', '9785251609055993162691824779826.478', '1.39899578965905859019321727491823760297927041482177805249500602271527916358976146e+59', 90, 1);
    checkMulResult('86375361639533439579498381796.1294234762451026', '906739120390293252717325255078545106.1444764334577910073347022', '7.83199194364240290638163189680542533845422404219e+64', 48, 2);
    checkMulResult('740414973164848.916954686179490899', '134168713446.24554435393694302876451603', '9.934052436586419877500774282012701064743967970168529777534242152461097e+25', 92, 0);
    checkMulResult('23606.18678792636558', '92428538816127859383.480160037586533528917526119290144', '2.1818853518286167136498581177678567e+24', 36, 2);
    checkMulResult('535842268080888.29369988', '5.264688269022545313985', '2.8210425028118864751215030126668946919568218e+15', 76, 2);
}

function testMulWithDiffPRandRM002() {
    checkMulResult('14658164987181989.82049386326834040499563407226202', '865918141679263984332567963156509.5151684', '1.2692770986128681e+49', 17, 6);
    checkMulResult('32538525661800629274238615.58854', '4221257960257328197334.99687127737124932626496743934439', '1.3735351046e+47', 11, 4);
    checkMulResult('9016577257202221469913.973970893892587089845961069', '717041984762.1704', '6.4652644522657274667472322240270365e+33', 35, 4);
    checkMulResult('636458802810705.0625167255453931606640198', '1025500890675450.780096456096656042394836946', '6.5268906916060913799615494531479109e+29', 35, 2);
    checkMulResult('79110380.399139564488282', '253618226821001.00507451769506062628335690320494776', '2.006383e+22', 7, 4);
    checkMulResult('376873444696269355299365.4531356', '291637790197265810665.5250538930136484438850490707423377654', '1.0991053859525146161055022709845243436052743435939690299036572244868802096241063972718824e+44', 91, 1);
    checkMulResult('736596301647821915390749553538601616524.5755259726118', '795142.3465487', '5.8569891175134317430817399167404057094937405736308106950045e+44', 59, 4);
    checkMulResult('1834131571267152475321650.70965445617470881921005618405', '968157051313385666904.75179596420634009857645265066', '1.775727413758793219327376503051947507155974684643899649e+45', 55, 4);
    checkMulResult('11467445190748986299.92690201609446082017', '523498237.024622524327463960286539476473502743517', '6.00318734053358048573196294397431136916711567368667712641480116428920771869736097033789e+27', 94, 2);
    checkMulResult('1740.0', '674329600699095.9235720144834769329772751', '1.173333505216426e+18', 16, 3);
    checkMulResult('2073608914815968480642598159487130353638.403507', '8202785661188.8837288359362245881395096', '1.70093694733658676908209396165038634317062656908141094441774e+52', 60, 0);
    checkMulResult('9408583565372039515608744.3684350485521856091581100947114429124279', '86796159427820718186657687754456418494.479528815877464198372228379', '8.16628919130005414007709894042072728383299297277052582630118037721442350956148223604782621526e+62', 93, 1);
    checkMulResult('9724576927702863.00514157261352484328', '4521791471398152.5408432324329596777062957089914679067692', '4.3972509014642054571320962124e+31', 29, 6);
    checkMulResult('150097.98671404890780338257994', '6793507639662.344499876512736846104161284', '1.01969181943982833972447444409226797605134869153468537641830978304296e+18', 88, 0);
    checkMulResult('65118175343527.476611386886747972', '1.60950590', '1.048080874126420004181e+14', 22, 6);
    checkMulResult('76805406.79668422897749934', '59816821233324078222364364762.2859557060466229096389', '4.59425528810999466160015772436770505992265745907144432659598870867010439e+36', 72, 2);
    checkMulResult('1469386976133686530916720194473533.439610543942924779731287', '9728007344019623222764920709573063.7390426', '1.429420729503528940651228166512782815270522737997255826171601930012314473272257e+67', 79, 2);
    checkMulResult('1884577993841445785992941888727.692681772714424110428791067182984298928', '71.215134629008945058285774463766', '1.3421047555028615218949107869049097752568550421115097800823629315e+32', 65, 0);
    checkMulResult('61128482.374', '60842716563.57307948576466459526793664258319', '3.7192229270426548398064662836238579088e+18', 38, 3);
    checkMulResult('135566228123986394372179852820663.73785657', '50104554646753293.82010', '6.792485485292499562041458065250227993920664022431740601183057e+48', 72, 6);
    checkMulResult('90.2842162098226193', '2945079612003223.425352321291', '2.658942044452395346683129106885849346127775163e+17', 64, 4);
    checkMulResult('724.3046165965260324', '9336761295608.4424681600303811056430668100247918', '6.76265931046895657939393076121022270844330653566993116239809005432e+15', 82, 6);
    checkMulResult('833948566289742156240.447936107644380531030033433244', '52191656593247958792015529.15', '4.35251571882257036361170975172568356720234605201463e+46', 51, 0);
    checkMulResult('1416602871768308518575661680760149688.0812273123382771087180501509778144371482', '8988960023614.936525007233865813885234186518687317', '1.2733786583663441439087447509752725556340548704454166581566848096781678967647462456892205237e+49', 93, 0);
    checkMulResult('9569593587222898608259132413.90668285543794', '657072004.304598929942955875345494864161946378604', '6.2879120387369867498747065845987464742501e+36', 41, 6);
    checkMulResult('804334215574564.25044091930742448256033235093982', '55688438273971108617042699218.90358138209948168910', '4.4792116315667092377278387277247989195238061393700184267551514519131272798066909360107266e+43', 90, 1);
    checkMulResult('9822620772475417727940129541187011947.820413104363741726', '6136578440346805045758.683005231', '6.02772828600753283057e+58', 21, 5);
    checkMulResult('44262415003768171285.79666967441127542455960075662622', '914422146623526378080312597381.446639551542695668166751149', '4.047453254248707258604102371217281613039726579222140035456583290394e+49', 67, 0);
    checkMulResult('6.5E-29531627805496', '-7.57040630422451705434881571160179759007104791141306E+4365358659', '-4.9207640977459360853267302125411684335461811424185e-29527262446836', 50, 6);
    checkMulResult('5.3E+21786', '-9.76622618786797236903307526753201665260894875109978140359393E+9182165', '-5.17609988e+9203952', 10, 5);
}

function testMulWithDiffPRandRM003() {
    checkMulResult('5.5297665250143884700019985961183449464816737E+936', '3.3796232965687616E+296384166834', '1.868852777252471286480617523122074247881936133470334630428992e+296384167771', 76, 4);
    checkMulResult('-7.215109376109932339E+2652105', '7.24526971652521943869742892785010739038924616963926462555E+8683476633', '-5.227541346414646235922676100980921283032916687496302068942616930332667066145e+8686128739', 79, 4);
    checkMulResult('-9.216143958548530311990439475093217294778682871E+582983187', '7.249053792737130562632580435185577983561593615E+942549691138547', '-6.68083233171276158556289735538540890585083e+942550274121735', 42, 3);
    checkMulResult('1.60E+202', '-6.407128785144E-1033137', '-1.02514060562304e-1032934', 77, 3);
    checkMulResult('2.205199208254798821474950998902191375631503824848921578E-31040239', '-3.3880545460122022299262396676563823061715925772E+85847945', '-7.471335202390180221185936884296420222859699405817191352101605427e+54807706', 64, 1);
    checkMulResult('1.6311190345265678763766E-58492573080', '6.121758534229122431000830E-83814471595', '9.985316869956583505381162042624971114851992578e-142307044675', 67, 5);
    checkMulResult('-2.84605178661532285450011432239310046E+54783459678', '4.6E+23843514', '-1.3091838218430485130700525883008262116e+54807303193', 70, 6);
    checkMulResult('8.5973457945E+50399024742915', '0.92286611262186515446807927209452702698', '8e+50399024742915', 1, 2);
    checkMulResult('-9.37175614356322301483264262858817450955115571074774280431816E+820', '-5.8990551313492234E+5043468', '5.52845061684402398929718264606605040162316531044852111077181139889284e+5044289', 69, 3);
    checkMulResult('4.9309172981597834254716114236938809737852E+622197935770', '-90388850037180804810300832311714283089697161065337.1762604', '-4.456999442091054136760545232185631743357676415045555277342448095504338e+622197935820', 70, 5);
    checkMulResult('-4.5318175283930901279E+257711762470', '-9.526792268847312998999055E-689170', '4.31736841933220293960040853567839111019291345e+257711073301', 46, 4);
    checkMulResult('-5.8485208434582231935912884487991260791234986391206618078774E+704265708232', '-3.97E+84344039281604', '2.32186277485291e+85048304989837', 15, 5);
    checkMulResult('8.948010032343111803060117863693331060830530240250993E+9216', '-4.295014E-23086885468', '-3.8431828361054117997708449066212948612901979009e-23086876251', 47, 4);
    checkMulResult('3.185756757125125107816323513488886171902174516738662E+42054157', '8.06908950729962831216038361716544465020833388684669454928E-96447250096', '2.57061564217272374136338781469713519e-96405195938', 36, 0);
    checkMulResult('5.2525916740929835502942298722584732448E+345', '4.71657145142231465197216614165779608834340065610E+79402', '2.4774224e+79748', 9, 2);
    checkMulResult('-3.89225344424E+408', '6.89051755046380019455784229458968806687E+300417053593', '-2.6819640668388894316706943776e+300417054002', 29, 0);
    checkMulResult('-2.62899171772083482619619847446355938432108410955548082905E+1194534854298247', '5.4889047121379790783170218428373272345901598058E+62770973956', '-1.44302850275696100321962196928350139526413e+1194597625272204', 42, 2);
    checkMulResult('5.147388379257214801014394E+145685', '-871451.36315899031142129000758349639107634751903849', '-4.4856986198124456473522012534585768386213060847482824297e+145691', 56, 3);
    checkMulResult('5.38114319975281081541720E+25890582551835', '-5.3746836395492276642812193294683520289555634332372353098E-8388', '-2.8921942317783013844648076943183991700501029553856777114332710316463890058e+25890582543448', 74, 5);
    checkMulResult('280871964076135618401817180457296.105266734468', '-7.887061633E+4000357553507', '-2.2152e+4000357553540', 5, 1);
    checkMulResult('-8.88835887E+968', '-4.342636646908781652776E+7024535543', '3.8598912959e+7024536512', 11, 3);
    checkMulResult('-8.049E-677401925027', '6.1906233944265068994375629680216267831565782872875620E-914837747587860', '-4.9828327701738954e-915515149512886', 17, 4);
    checkMulResult('8.8474201258056282592641810954E-3218', '6.734889818647060851595E+350385282', '5.95863997265814241e+350382065', 18, 2);
    checkMulResult('69.4226', '9.3E+8893414103', '6.4563018e+8893414105', 21, 2);
    checkMulResult('5.4496200747276662620115235573674567E+73497054', '6.1324122147419595938364630799329435142211E+9270', '3.34193167119629312060831661097219240448232664069e+73506325', 48, 6);
    checkMulResult('-6.40155938120572162197123643404406239443989352196681E-16271723479128', '-6.5302607079733794046998E+622547', '4.1803851696846104251167518538e-16271722856580', 29, 6);
    checkMulResult('-6.885314662857499063218876897969991960E+325601', '5.612724023214075E+86455290745927', '-3.86453710156084e+86455291071529', 16, 5);
    checkMulResult('3.0116477E+34906110890763', '-3.2736027840035761593873554881121013808939467419E+967771967043', '-9.85893829515796693219376256485518746593607864916562863e+35873882857806', 57, 6);
    checkMulResult('2.17214889901473709634572E+85', '-9.67073449015503646158535438556730E-6375241745195', '-2.1006275275454107335252775478289115070676115032739126956e-6375241745109', 69, 1);
    checkMulResult('3.05540807398194033E-3214459', '-261138589.704559597740507442041713439449886297801317961162239', '-7.978849554115685928e-3214451', 20, 4);
}
