/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 1");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart003);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: -9e15, toExpPos: 9e15, minE: -9e15, maxE: 9e15 });
    checkLnResult('0', '-Infinity', 40, 4);
    checkLnResult('0', String(Math.log(0)), 40, 4);
    checkLnResult('-0', String('-Infinity'), 40, 4);
    checkLnResult('-0', String(Math.log(-0)), 40, 4);
    checkLnResult('1', '0', 40, 4);
    checkLnResult('1', String(Math.log(1)), 40, 4);
    checkLnResult('-Infinity', 'NaN', 40, 4);
    checkLnResult('-Infinity', String(Math.log(-Infinity)), 40, 4);
    checkLnResult('Infinity', 'Infinity', 40, 4);
    checkLnResult('Infinity', String(Math.log(Infinity)), 40, 4);
    checkLnResult('NaN', 'NaN', 40, 4);
    checkLnResult('NaN', String(Math.log(NaN)), 40, 4);
    checkLnResult('2.7182818284590452353602874713526624977572', '1', 39, 4);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('91247532.65728', '18.3290865106890306', 19, 1);
    checkLnResult('727579403.9', '20.40523369730819818291393006', 28, 3);
    checkLnResult('419065154.52076499608', '19.8535369658470908', 19, 2);
    checkLnResult('130749452.494110812', '18.68879347348', 13, 6);
    checkLnResult('1185619573.5511384009507900359', '20.89353132177529891789', 22, 0);
    checkLnResult('530465273.44', '20.089265053819159', 17, 4);
    checkLnResult('93521824.19043496087', '18.353705380823595707150211318', 29, 3);
    checkLnResult('93587439.79738005953', '18.354406742245', 14, 0);
    checkLnResult('913009834.17782778193371741', '20.63225720978034314683755252', 29, 4);
    checkLnResult('96363417.9729392663575231665', '18.3836372059508935007674191717', 30, 0);
    checkLnResult('210401674.5643546532430157', '19.1645289977522148145584372801492541489626022147443118341', 57, 3);
    checkLnResult('952417276.8651321118737418', '20.67451381275802954644121920485653995422386303532469652920020456933991073071', 76, 3);
}

function testLnWithSpecificConfigPart003() {
    checkLnResult('142322563.253900033190831713543268828109981967888490291406527346535501984011990242137300064766425179727442507442591862989037644368590904104621357145575632132596634560836335843482822061685451360570260600926717066081883739008412790434377893984866700040372917562269733068809727985812968781985268403920729907489962116060023323078359102582924017315196797171078484331048743611378544575282691634826207', '18.77360661165643483904346', 25, 4);
    checkLnResult('371400293.53826507744653292410472631048281764405036030167939649508120465472946573115185753424640793913438158589233749086894500415028950753895660006551599374916249772634013307822672548085573611750200419176163913242813545244921337312493040312898991903677477383181667469789752847529551033664230833747974881304800992388176411266053764', '19.732790997238693', 17, 5);
    checkLnResult('308061625.88823978041274039804998186206865791141980152103127270513511076834989316028752984249313112128128502539231626511285494530858340408577571344790765131399576822101736125139886541136712372342853393859483419254236049454263746814598084065516321822244266672902276617353573868701264411419113453133557772924904083715036037838173144284202571542029689590647862395', '19.5', 3, 4);
    checkLnResult('56166207.244290436722984261495400654889250285124533321022981475832539124544579218170536475258779537248807554699941937121725987852537935501915601362', '17.8438258394282509999', 21, 6);
    checkLnResult('222624724.707607328646707303867967259139519139629423079746317622391060720425657380049896682204826804719116517331792375328854607227578421004813898208914187979742668659057386237112777304292626154363413399007128375956303978756008642562104282496678212208286912567720592497594790267585324990906417857716073248926170009724869749739256517', '19.2209980629988594846457575', 27, 0);
    checkLnResult('185258598.8193913934519764713459928878217005284578212999298749640634191497175066526732902777761314076480735321777689520905932035413871290869941575745986362030629539', '19.03726323844184819241728391212796712905475895', 46, 3);
    checkLnResult('269693209.738329262863103619932258583418154544819938948520850885129975757878155942909813913575593873613967345697983513739799036745044974770565058447912595936725318596664619637466457786273308379783363276858754429871221986504763671381169376146393662591214420480616860804709987497567541966840009610585879458456647716651843692095645431144825029791181857768800342074145503590855886070320931830102002860548331131946643428330049680453526744262227', '19.4128', 6, 2);
    checkLnResult('1023342793.682203550119853590855855440825349592189658219400017324862237829261909743084375742003621225707754353154890001299178609037775929182416', '20.7', 3, 4);
}

