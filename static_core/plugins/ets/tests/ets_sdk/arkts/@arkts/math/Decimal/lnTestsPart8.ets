/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 8");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart003);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart004);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: 0, toExpPos: 0, minE: -9e15, maxE: 9e15 });
    checkLnResult('3.85595703190443742440250277361605E+6091482618322', '1.40261570711819248808711059594479942105082367007e+13', 48, 2);
    checkLnResult('7.357095166801105623865E+549536691', '1.265354994745540324309072336890594e+9', 34, 5);
    checkLnResult('1.34533963650515436161701665448464441752127512E+350235747270701', '8.0644761e+14', 8, 4);
    checkLnResult('6.4170057575167730015652576742667741692190869016E+8059951144', '1.8558723356293656512085e+10', 23, 3);
    checkLnResult('2.4077049295833173373548E-25994301660937', '-5.98540915073e+13', 12, 6);
    checkLnResult('4.535541075E+20', '4.8e+1', 2, 5);
    checkLnResult('7.29846078607878771302050492452384424889888683E-537191033751', '-1.236928066403126e+12', 16, 1);
    checkLnResult('2.634898074241585E+90138333023', '2.0755118193e+11', 11, 2);
    checkLnResult('5.46374939035500947103431106687153167480402538E-73753665680', '-1.698240911467364203540944369371346431880400463389e+11', 49, 6);
    checkLnResult('2.94299515946637E+607707720', '1.3992987380488273006987151692498736952760425e+9', 44, 4);
    checkLnResult('3.668100638398885156015068016729087120382965349467E+84070728', '1.935800063496311111975e+8', 22, 1);
    checkLnResult('4.4E+2003110597803675', '4.6123326021e+15', 11, 5);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('1.91685802862500097138466392461E+49834', '1.1474767e+5', 8, 3);
    checkLnResult('7.8060858E-167062888423895', '-3.8467651647738609186703184862365050751052e+14', 41, 1);
    checkLnResult('1.978E+5', '1.219501169817074879173281038e+1', 28, 0);
    checkLnResult('5.77970666253418116761098030625E+223072047', '5.13642371840220060515235912414184521974662502e+8', 47, 1);
    checkLnResult('5.47649676344748751812140943259036448E-6697621', '-1.5421840572658253455977679095638082e+7', 35, 2);
    checkLnResult('5.89272783085181716889488732225953E-80979', '-1.8645926452654519628853278905466928e+5', 35, 0);
    checkLnResult('3.9142246447271235587364475518772E+6792548012', '1.56404197972421574013185426e+10', 27, 6);
    checkLnResult('1.03654E-8829328', '-2.03302789980666878287e+7', 21, 4);
    checkLnResult('2.966963898883723964406622179262104271E-40046044', '-9.22094228602444715139934346e+7', 27, 6);
    checkLnResult('2.17861809580860432485578624E+39', '9.05795094015633624269836517536636343e+1', 36, 4);
    checkLnResult('8.5860E+9131106', '2.10251507082814583119796429685249702465e+7', 39, 0);
    checkLnResult('1.5412779579669645484712783548614741E+4221134711453', '9.7195218621118328121695164047507959011952e+12', 41, 3);
    checkLnResult('54.944027854626073894087463822117107421615', '4e+0', 2, 1);
    checkLnResult('5.89E+4068309134235820', '9.36762796618291285378e+15', 21, 1);
    checkLnResult('1.7782332841915159444510812658618254919081488280E-473555786043', '-1.09040249364311393587934959869e+12', 31, 5);
    checkLnResult('5.856153556936941211324932376345E-5610591872515871', '-1.2918865208528592e+16', 18, 5);
    checkLnResult('8.5879657E+4990177546', '1.1490308e+10', 8, 3);
}

function testLnWithSpecificConfigPart003() {
    checkLnResult('6.806688317295882211444994250555E+7553266453', '1.73920387400077162987035162411978513704566862686e+10', 48, 1);
    checkLnResult('3.135921508105851703665460164485160881268374510455809E+807064325772890', '1.8583342856119478444383845e+15', 26, 0);
    checkLnResult('8.7301419368711031383740359E+35766359667870', '8.235508660190309563654957418152355352e+13', 37, 1);
    checkLnResult('152800352584718396.185354581216539422462692444', '3.956790857913206e+1', 16, 5);
    checkLnResult('2.61910077229511946E+546201856', '1.2576762523541114e+9', 17, 0);
    checkLnResult('7.448579204378498328767018243284618725336368289559954260E-217700846293938', '-5.0127472340860766741454583700554e+14', 33, 5);
    checkLnResult('7.2047727251858696241230866828095732184425269645695E+469327', '1.0807e+6', 5, 5);
    checkLnResult('6.218121194045431347809839E+4016425286', '9.25e+9', 3, 5);
    checkLnResult('3.96380380194329769560709701426464939552303967224636432913E+5456751169', '1.2564633899294436616578509015890963439260854e+10', 45, 6);
    checkLnResult('8.90161993871518743436E+9653801', '2.222870045956428697966183595567898564e+7', 37, 5);
    checkLnResult('5.87E-8679033343444315', '-1.998421279821315e+16', 17, 0);
    checkLnResult('7.22213E+9285', '2.1381479738372961297283e+4', 23, 4);
}

function testLnWithSpecificConfigPart004() {
    checkLnResult('4.35089061025101631586337334243547962566776053387632747687140E+45018821795390', '1.03659668e+14', 10, 2);
    checkLnResult('8.9507732063667418791057293120281614104087038631714939252E-8440914505', '-1.94359239e+10', 9, 6);
    checkLnResult('3.090280901682869634794313045175007461412804E+841576988836944', '1.9378026291027647750230631e+15', 26, 0);
    checkLnResult('7.7014162551739797973497506E+702559370030249', '1.61770273e+15', 9, 5);
    checkLnResult('4.0025445459842369782426336331309922717E+9723', '2.238942178947647308221847e+4', 25, 0);
    checkLnResult('2.2341E+313775048695', '7.224937496793916263102024244423062e+11', 34, 2);
    checkLnResult('7.926192471441099330397999580E-784167', '-1.80560917444508379549407756805599569268569223e+6', 45, 1);
    checkLnResult('4.16722E-49749952', '-1.145534964251201622427e+8', 23, 5);
    checkLnResult('7.359482014076842029356125469162217556349E+51298586184260', '1.181e+14', 4, 3);
    checkLnResult('72.7973', '4.287678866602e+0', 13, 1);
    checkLnResult('7.458369731089099586537743665754431425332815238574619459129E+851537468000449', '1.96073748e+15', 10, 6);
}
