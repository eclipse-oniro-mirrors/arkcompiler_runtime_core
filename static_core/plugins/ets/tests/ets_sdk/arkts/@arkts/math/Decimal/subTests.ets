/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal sub API tests");
    suite.addTest("Decimal sub with specific config", testSubWithSpecificConfig001);
    suite.addTest("Decimal sub with specific config", testSubWithSpecificConfig002);
    suite.addTest("Decimal sub with specific config", testSubWithSpecificConfig003);
    suite.addTest("Decimal sub with specific config", testSubWithSpecificConfig004);
    suite.addTest("Decimal sub with specific config", testSubWithSpecificConfig005);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRM001);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRM002);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRM003);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRM004);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRM005);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRMWithMoreDigitsOfDecimal001);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRMWithMoreDigitsOfDecimal002);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRMWithNegAndPosIsZero001);
    suite.addTest("Decimal sub with different precision and rounding", testSubWithDiffPRandRMWithNegAndPosIsZero002);
    return suite.run();
}

function checkSubResult(minuend: string, subtrahend: string, expected: string, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(minuend).sub(subtrahend).valueOf(), expected);
}

function testSubWithSpecificConfig001() {
    Decimal.set({ precision: 200, rounding: 4, toExpNeg: -9e9, toExpPos: 9e9, minE: -9e15, maxE: 9e15 });
    arktest.assertEQ(new Decimal(1).sub(0).valueOf(), '1');
    arktest.assertEQ(new Decimal(1).sub(-0).valueOf(), '1');
    arktest.assertEQ(new Decimal(-1).sub(0).valueOf(), '-1');
    arktest.assertEQ(new Decimal(-1).sub(-0).valueOf(), '-1');
    arktest.assertEQ(new Decimal(1).sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-1).sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(1).sub('Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(1).sub('-Infinity').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-1).sub('Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-1).sub('-Infinity').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(0).sub(1).valueOf(), '-1');
    arktest.assertEQ(new Decimal(0).sub(-1).valueOf(), '1');
    arktest.assertEQ(new Decimal(-0).sub(1).valueOf(), '-1');
    arktest.assertEQ(new Decimal(-0).sub(-1).valueOf(), '1');
}

function testSubWithSpecificConfig002() {
    Decimal.set({ precision: 200, rounding: 3, toExpNeg: -9e9, toExpPos: 9e9, minE: -9e15, maxE: 9e15 });
    arktest.assertEQ(new Decimal('0').sub('-0').valueOf(), '0');
    arktest.assertEQ(new Decimal('-0').sub('0').valueOf(), '-0');
}

function testSubWithSpecificConfig003() {
    Decimal.set({ precision: 200, rounding: 4, toExpNeg: -9e9, toExpPos: 9e9, minE: -9e15, maxE: 9e15 });
    arktest.assertEQ(new Decimal('0').sub('-0').valueOf(), '0');
    arktest.assertEQ(new Decimal('-0').sub('0').valueOf(), '-0');
    arktest.assertEQ(new Decimal('0').sub('0').valueOf(), '0');
    arktest.assertEQ(new Decimal('-0').sub('-0').valueOf(), '0');
    arktest.assertEQ(new Decimal('1').sub('1').valueOf(), '0');
    arktest.assertEQ(new Decimal('-1').sub('-1').valueOf(), '0');
    arktest.assertEQ(new Decimal(0).sub(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-0).sub(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(0).sub(Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(0).sub(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-0).sub(Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-0).sub(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('NaN').sub(1).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(-1).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(-0).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(Infinity).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(-Infinity).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(Infinity).sub(1).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(Infinity).sub(-1).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(1).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(-1).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(Infinity).sub(0).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(Infinity).sub(-0).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(0).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(-0).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(Infinity).sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(-Infinity).sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(Infinity).sub(Infinity).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(Infinity).sub(-Infinity).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(Infinity).valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(-Infinity).sub(-Infinity).valueOf(), 'NaN');
}

function testSubWithSpecificConfig004() {
    arktest.assertEQ(new Decimal(1).sub('0').valueOf(), '1');
    arktest.assertEQ(new Decimal(1).sub('1').valueOf(), '0');
    arktest.assertEQ(new Decimal(1).sub('-45').valueOf(), '46');
    arktest.assertEQ(new Decimal(1).sub('22').valueOf(), '-21');
    arktest.assertEQ(new Decimal(1).sub(0o144).valueOf(), '-99');
    arktest.assertEQ(new Decimal(1).sub('0144').valueOf(), '-143');
    arktest.assertEQ(new Decimal(1).sub('6.1915').valueOf(), '-5.1915');
    arktest.assertEQ(new Decimal(1).sub('-1.02').valueOf(), '2.02');
    arktest.assertEQ(new Decimal(1).sub('0.09').valueOf(), '0.91');
    arktest.assertEQ(new Decimal(1).sub('-0.0001').valueOf(), '1.0001');
    arktest.assertEQ(new Decimal(1).sub('8e5').valueOf(), '-799999');
    arktest.assertEQ(new Decimal(1).sub('9E12').valueOf(), '-8999999999999');
    arktest.assertEQ(new Decimal(1).sub('1e-14').valueOf(), '0.99999999999999');
    arktest.assertEQ(new Decimal(1).sub('3.345E-9').valueOf(), '0.999999996655');
    arktest.assertEQ(new Decimal(1).sub('-345.43e+4').valueOf(), '3454301');
    arktest.assertEQ(new Decimal(1).sub('-94.12E+0').valueOf(), '95.12');
    arktest.assertEQ(new Decimal('0').sub(0).valueOf(), '0');
    arktest.assertEQ(new Decimal('0').sub('0').valueOf(), '0');
    arktest.assertEQ(new Decimal(3).sub(-0).valueOf(), '3');
    arktest.assertEQ(new Decimal(9.654).sub(0).valueOf(), '9.654');
    arktest.assertEQ(new Decimal(0).sub('0.001').valueOf(), '-0.001');
    arktest.assertEQ(new Decimal(0).sub('111.1111111110000').valueOf(), '-111.111111111');
    arktest.assertEQ(new Decimal(-1).sub(1).valueOf(), '-2');
    arktest.assertEQ(new Decimal(-0.01).sub(0.01).valueOf(), '-0.02');
    arktest.assertEQ(new Decimal(54).sub(-54).valueOf(), '108');
    arktest.assertEQ(new Decimal(9.99).sub('-9.99').valueOf(), '19.98');
    arktest.assertEQ(new Decimal('0.0000023432495704937').sub('-0.0000023432495704937').valueOf(), '0.0000046864991409874');
}

function testSubWithSpecificConfig005() {
    arktest.assertEQ(new Decimal(NaN).sub(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal(NaN).sub('NaN').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(NaN).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(4).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub('4534534.45435435').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('NaN').sub(99999.999).valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('Infinity').sub('354.345341').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(3).sub('-Infinity').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').sub('Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('-Infinity').sub('-Infinity').valueOf(), 'NaN');
    arktest.assertEQ(new Decimal('Infinity').sub('-999e999').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('1.21123e43').sub('-Infinity').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('-999.0').sub('Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal('657.342e-45').sub('-Infinity').valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal('Infinity').sub(123).valueOf(), 'Infinity');
    arktest.assertEQ(new Decimal(-0).sub('Infinity').valueOf(), '-Infinity');
    arktest.assertEQ(new Decimal(100).sub(100).valueOf(), '0');
    arktest.assertEQ(new Decimal(-999.99).sub('0.01').valueOf(), '-1000');
    arktest.assertEQ(new Decimal('10').sub(4).valueOf(), '6');
    arktest.assertEQ(new Decimal('03.333').sub(-4).valueOf(), '7.333');
    arktest.assertEQ(new Decimal(-1).sub(-0.1).valueOf(), '-0.9');
    arktest.assertEQ(new Decimal(43534.5435).sub('0.054645').valueOf(), '43534.488855');
    arktest.assertEQ(new Decimal('99999').sub('1').valueOf(), '99998');
}

function testSubWithDiffPRandRM001() {
    checkSubResult('0.000001', '1E-13', '0.0000009999999', 12, 5);
    checkSubResult('1E-29', '0.1', '-0.09999999999999999999999999999', 30, 4);
    checkSubResult('1E-9', '1E-40', '0.0000000009999999999999999999999999999999', 72, 6);
    checkSubResult('1E-12', '1E-7', '-0.000000099999', 42, 3);
    checkSubResult('1E-14', '1E-13', '-0.00000000000009', 76, 0);
    checkSubResult('1E-21', '1E-32', '0.00000000000000000000099999999999', 77, 4);
    checkSubResult('1E-19', '1E-16', '-0.0000000000000000999', 43, 3);
    checkSubResult('1E-17', '1E-39', '0.000000000000000009999999999999999999999', 68, 2);
    checkSubResult('1E-17', '1E-16', '-0.00000000000000009', 67, 1);
    checkSubResult('1E-37', '1E-13', '-0.0000000000000999999999999999999999999', 52, 0);
    checkSubResult('1E-27', '0.1', '-0.1', 25, 5);
    checkSubResult('1E-28', '0.0001', '-0.0001', 6, 4);
    checkSubResult('1E-20', '1E-34', '0.0000000000000000000099999999999999', 26, 0);
    checkSubResult('1E-20', '0.1', '-0.1', 1, 6);
    checkSubResult('1E-21', '1E-35', '0.00000000000000000000099999999999999', 57, 3);
    checkSubResult('1E-30', '0.000001', '-0.000000999999999999999999999999', 81, 0);
    checkSubResult('0.001', '1E-37', '0.00099999999999', 11, 1);
    checkSubResult('1E-37', '1E-22', '-0.0000000000000000000000999999999999999', 73, 6);
    checkSubResult('1E-25', '1E-34', '0.0000000000000000000000000999999999', 77, 5);
    checkSubResult('1E-35', '1E-15', '-0.00000000000000099999999999999999999', 72, 1);
    checkSubResult('1E-21', '1E-18', '-0.000000000000000000999', 16, 3);
    checkSubResult('1E-31', '0.01', '-0.0099999999999999999999999999999', 36, 1);
    checkSubResult('1E-13', '1E-10', '-0.0000000000999', 47, 6);
    checkSubResult('1E-18', '0.001', '-0.000999999999999999', 91, 5);
    checkSubResult('1E-38', '1E-11', '-0.00000000000999999999999999999999999999', 35, 5);
    checkSubResult('0.001', '1E-23', '0.001', 17, 2);
    checkSubResult('1E-38', '1E-7', '-0.00000009999999999999999999999999999999', 80, 5);
    checkSubResult('0.000001', '1E-32', '0.000001', 21, 2);
    checkSubResult('1E-20', '1E-30', '0.000000000000000000009999999999', 99, 1);
    checkSubResult('1E-23', '1E-17', '-0.00000000000000000999999', 7, 0);
    checkSubResult('1E-27', '1E-13', '-0.000000000000099999999999999', 94, 4);
}

function testSubWithDiffPRandRM002() {
    checkSubResult('0.000001', '1E-39', '0.000000999999999999999999999999999999999', 77, 0);
    checkSubResult('1E-32', '1E-23', '-0.00000000000000000000000999999999', 26, 0);
    checkSubResult('1E-37', '1E-19', '-0.0000000000000000001', 17, 4);
    checkSubResult('1E-20', '1E-34', '0.0000000000000000000099999999999999', 41, 1);
    checkSubResult('1E-16', '1E-30', '0.000000000000000099999999999999', 37, 4);
    checkSubResult('1E-9', '1E-14', '0.00000000099999', 54, 2);
    checkSubResult('1E-33', '1E-12', '-0.000000000000999999999999999999999', 39, 6);
    checkSubResult('1E-26', '1E-40', '0.0000000000000000000000000099999999999999', 36, 3);
    checkSubResult('0.0001', '0.1', '-0.0999', 27, 5);
    checkSubResult('1E-39', '1E-26', '-0.000000000000000000000000009999999999999', 28, 5);
    checkSubResult('1E-37', '1E-14', '-0.0000000000000099999999999999999999999', 99, 1);
    checkSubResult('1E-21', '1E-14', '-0.000000000000009999999', 79, 6);
    checkSubResult('1E-30', '1E-33', '0.000000000000000000000000000000999', 5, 0);
    checkSubResult('1E-24', '1E-16', '-0.000000000000000099999999', 8, 4);
    checkSubResult('0.1', '1E-29', '0.09999999999999999999999999999', 53, 1);
    checkSubResult('1E-21', '1E-16', '-0.000000000000000099999', 69, 5);
    checkSubResult('1E-13', '1E-32', '0.00000000000009999999999999999999', 80, 3);
    checkSubResult('1E-27', '1E-27', '0', 14, 1);
    checkSubResult('1E-36', '1E-17', '-0.00000000000000001', 10, 5);
    checkSubResult('1E-20', '1E-39', '0.000000000000000000009999999999999999999', 39, 6);
    checkSubResult('1E-32', '1E-13', '-0.00000000000009999999999999999999', 69, 0);
    checkSubResult('1E-35', '1E-22', '-0.00000000000000000000009999999999999', 40, 0);
    checkSubResult('1E-17', '1E-37', '0.00000000000000001', 8, 2);
    checkSubResult('1E-19', '1E-9', '-0.0000000009999999999', 60, 5);
    checkSubResult('1E-33', '1E-28', '-0.000000000000000000000000000099999', 6, 1);
    checkSubResult('0.000001', '1E-27', '0.000001', 13, 2);
    checkSubResult('1E-34', '1E-12', '-0.0000000000009999999999999999999999', 66, 2);
    checkSubResult('1E-36', '1E-27', '-0.000000000000000000000000000999999999', 22, 3);
    checkSubResult('1E-40', '1E-20', '-0.0000000000000000000099999999999999999999', 91, 5);
    checkSubResult('1E-26', '1E-17', '-0.00000000000000001', 7, 0);
    checkSubResult('1E-25', '1E-34', '0.0000000000000000000000000999999999', 76, 5);
}

function testSubWithDiffPRandRM003() {
    checkSubResult('1E-37', '1E-29', '-0.0000000000000000000000000000099999999', 29, 0);
    checkSubResult('1E-16', '1E-9', '-0.0000000009999999', 74, 1);
    checkSubResult('1E-20', '1E-26', '0.00000000000000000000999999', 88, 1);
    checkSubResult('1E-35', '1E-22', '-0.00000000000000000000009999999999999', 84, 5);
    checkSubResult('1E-14', '1E-32', '0.00000000000000999999999999999999', 68, 1);
    checkSubResult('1E-9', '1E-38', '0.0000000009999999999999999999999999999', 28, 3);
    checkSubResult('1E-15', '1E-18', '0.000000000000000999', 46, 1);
    checkSubResult('1E-8', '1E-20', '0.00000001', 1, 5);
    checkSubResult('1E-33', '1E-33', '0', 98, 2);
    checkSubResult('1E-30', '1E-38', '0.00000000000000000000000000000099999999', 22, 3);
    checkSubResult('1E-19', '0.1', '-0.0999999999999999999', 53, 6);
    checkSubResult('0.000001', '1E-14', '0.00000099999999', 53, 2);
    checkSubResult('0.000001', '1E-25', '0.0000009999999999999999999', 96, 2);
    checkSubResult('1E-13', '1E-16', '0.0000000000000999', 89, 2);
    checkSubResult('1E-25', '1E-40', '0.0000000000000000000000000999999999999999', 74, 5);
    checkSubResult('1E-33', '1E-18', '-0.000000000000000000999999999999999', 86, 3);
    checkSubResult('1E-13', '1E-21', '0.000000000000099999999', 44, 5);
    checkSubResult('1E-29', '0.01', '-0.01', 17, 6);
    checkSubResult('0.1', '1E-29', '0.09999999999999999999999999999', 30, 5);
    checkSubResult('1E-9', '1E-18', '0.000000000999999999', 10, 0);
    checkSubResult('1E-34', '1E-31', '-0.0000000000000000000000000000000999', 90, 1);
    checkSubResult('1E-35', '0.1', '-0.099999', 5, 2);
    checkSubResult('1E-32', '1E-7', '-0.00000009999999999999999999999999', 27, 3);
    checkSubResult('1E-25', '0.00001', '-0.0000099999999999999999999', 45, 5);
    checkSubResult('1E-30', '1E-22', '-0.000000000000000000000099999999', 29, 6);
    checkSubResult('1E-21', '1E-23', '0.00000000000000000000099', 4, 4);
    checkSubResult('1E-23', '1E-36', '0.000000000000000000000009', 1, 3);
    checkSubResult('1E-31', '1E-37', '0.0000000000000000000000000000000999999', 73, 0);
    checkSubResult('1E-9', '1E-36', '0.000000000999999999999999999999999999', 90, 4);
    checkSubResult('1E-39', '1E-31', '-0.000000000000000000000000000000099999999', 45, 6);
    checkSubResult('0.0001', '0.000001', '0.000099', 7, 0);
}

function testSubWithDiffPRandRM004() {
    checkSubResult('1E-7', '1E-36', '0.000000099999999999999999999999999999', 60, 0);
    checkSubResult('1E-27', '1E-28', '0.0000000000000000000000000009', 95, 5);
    checkSubResult('0.01', '0.0001', '0.0099', 27, 1);
    checkSubResult('1E-9', '1E-30', '0.000000001', 6, 2);
    checkSubResult('0.1', '1E-23', '0.1', 17, 6);
    checkSubResult('1E-21', '1E-18', '-0.000000000000000000999', 46, 0);
    checkSubResult('1E-19', '1E-23', '0.00000000000000000009999', 27, 4);
    checkSubResult('1E-24', '1E-19', '-0.000000000000000000099999', 41, 0);
    checkSubResult('1E-26', '1E-20', '-0.00000000000000000000999999', 53, 0);
    checkSubResult('1E-19', '0.1', '-0.0999999999999999999', 80, 5);
    checkSubResult('1E-14', '1E-24', '0.000000000000009999999999', 12, 3);
    checkSubResult('1E-19', '1E-17', '-0.0000000000000000099', 59, 5);
    checkSubResult('1E-27', '1E-22', '-0.000000000000000000000099999', 72, 4);
    checkSubResult('1E-28', '1E-8', '-0.0000000099999999999999999999', 40, 2);
    checkSubResult('1E-32', '1E-34', '0.0000000000000000000000000000000099', 60, 3);
    checkSubResult('1E-23', '0.1', '-0.09999999999999999999999', 32, 5);
    checkSubResult('0.01', '1E-26', '0.00999999999999999999999999', 100, 4);
    checkSubResult('1E-22', '0.01', '-0.0099999999999999999999', 62, 1);
    checkSubResult('1E-15', '1E-7', '-0.000000099999999', 57, 3);
    checkSubResult('1E-11', '1E-7', '-0.00000009999', 51, 4);
    checkSubResult('0.001', '1E-17', '0.00099999999999999', 19, 0);
    checkSubResult('1E-12', '0.001', '-0.00099999', 5, 2);
    checkSubResult('1E-24', '1E-14', '-0.000000000000009999999999', 22, 2);
    checkSubResult('0.1', '1E-27', '0.099999999999999999999999999', 27, 3);
    checkSubResult('1E-18', '1E-33', '0.000000000000000000999999999999999', 98, 2);
    checkSubResult('0.1', '1E-17', '0.09999999999999999', 48, 6);
    checkSubResult('1E-30', '1E-33', '0.000000000000000000000000000000999', 34, 2);
    checkSubResult('1E-31', '1E-10', '-0.0000000000999999999999999999999', 37, 2);
    checkSubResult('1E-28', '1E-12', '-0.000000000001', 14, 3);
    checkSubResult('1E-23', '1E-19', '-0.00000000000000000009999', 41, 4);
    checkSubResult('1E-8', '1E-9', '0.000000009', 31, 2);
    checkSubResult('1E-17', '1E-8', '-0.00000000999999999', 67, 4);
}

function testSubWithDiffPRandRM005() {
    checkSubResult('1E-31', '1E-17', '-0.0000000000000000099999999999999', 67, 6);
    checkSubResult('0.000001', '1E-24', '0.000000999999999999999999', 93, 0);
    checkSubResult('1E-17', '1E-33', '0.000000000000000009999999999999999', 57, 2);
    checkSubResult('1E-28', '1E-10', '-0.0000000000999999999999999999', 71, 4);
    checkSubResult('1E-17', '1E-26', '0.00000000000000000999999999', 82, 0);
    checkSubResult('0.1', '0.00001', '0.09999', 67, 2);
    checkSubResult('1E-21', '1E-25', '0.0000000000000000000009999', 93, 3);
    checkSubResult('1E-19', '0.1', '-0.0999999999999999999', 64, 1);
    checkSubResult('1E-10', '1E-21', '0.000000000099999999999', 49, 0);
    checkSubResult('1E-37', '1E-16', '-0.0000000000000000999999999999999999999', 74, 0);
    checkSubResult('1E-31', '1E-33', '0.000000000000000000000000000000099', 2, 4);
    checkSubResult('1E-21', '1E-28', '0.0000000000000000000009999999', 54, 5);
    checkSubResult('1E-26', '1E-28', '0.0000000000000000000000000099', 5, 3);
    checkSubResult('1E-28', '1E-32', '0.00000000000000000000000000009999', 72, 5);
    checkSubResult('1E-9', '1E-26', '0.00000000099999999999999999', 34, 4);
    checkSubResult('1E-40', '1E-12', '-0.0000000000009999999999999999999999999999', 98, 1);
    checkSubResult('1E-30', '0.0001', '-0.000099999999999999999999999999', 59, 5);
    checkSubResult('1E-40', '1E-30', '-0.0000000000000000000000000000009999999999', 39, 0);
    checkSubResult('1E-33', '1E-17', '-0.000000000000000009999999999999999', 30, 0);
    checkSubResult('1E-37', '1E-16', '-0.0000000000000000999999999999999999999', 82, 1);
    checkSubResult('0.1', '1E-11', '0.09999999999', 88, 1);
    checkSubResult('1E-14', '0.1', '-0.09999999999999', 62, 6);
    checkSubResult('0.001', '1E-14', '0.00099999999999', 56, 1);
    checkSubResult('1E-20', '1E-9', '-0.00000000099999999999', 34, 0);
    checkSubResult('1E-39', '1E-34', '-0.000000000000000000000000000000000099999', 73, 4);
    checkSubResult('1E-14', '1E-31', '0.0000000000000099999999999999999', 42, 1);
    checkSubResult('1E-31', '1E-12', '-0.0000000000009999999999999999999', 34, 6);
    checkSubResult('0.01', '1E-30', '0.009999999999999999999999999999', 60, 6);
    checkSubResult('1E-30', '1E-14', '-0.000000000000009999999999999999', 70, 2);
    checkSubResult('0.01', '1E-17', '0.00999999999999999', 31, 5);
    checkSubResult('1E-22', '0.001', '-0.0009999999999999999999', 46, 4);
    checkSubResult('1E-35', '1E-31', '-0.00000000000000000000000000000009999', 10, 6);
    checkSubResult('0.1', '1E-28', '0.1', 23, 5);
}

function testSubWithDiffPRandRMWithMoreDigitsOfDecimal001() {
    checkSubResult('0.9999999999999999999876881224', '640033848998621900.19735', '-640033848998621899.1973500000000000000123118776', 49, 2);
    checkSubResult('1.000000000000000000000000119823914072125503157964', '3062705906358982193618.98485068689066024569704943195219', '-3062705906358982193617.984850686890660245697049312128275927874496842036', 94, 6);
    checkSubResult('0.9999999999999998265534546200191793251275036241640334423212917258444307775885354012967962729546', '258319.60193860385931337782', '-258318.60193860385931355126654537998082067487249637583596655767870827415556922241146459870320372705', 98, 4);
    checkSubResult('0.99999999999999999989761950386191857639251221379227189329555371776218724908031098142396778431218707', '726355355995140387099932991211229400.158448248205932318709', '-726355355995140387099932991211229399.1584482482059323188113804961380814236074877862077281067044463', 97, 5);
    checkSubResult('1.000000000000000000000000000000000000027702350484831926292132972134993320024115135851747430016246', '79385320209954140084685835.28094025821251260106069305881382567515', '-79385320209954000000000000', 14, 4);
    checkSubResult('0.99998712469413', '794547422607164224869232243086324.8360594446035869419718131828058', '-794547422607164224869232243086323.836072319909456942', 52, 3);
    checkSubResult('0.9999999999998534962024501557924401736482182589661527', '5698985430281057199751490373953345194.59621391632', '-5698985430281057199751490373953345193.596213916320146503797549844207559826351781741', 82, 2);
    checkSubResult('0.9999999999999999999999985533840413028010928652936714305576280330060940667532288645', '78657501050716794990357190861.70489425564556943595076975008', '-78657501050716794990357190000', 25, 5);
    checkSubResult('0.9999999961220652049373184', '914035313573641721959451176671.848582838348529711402806', '-914035314000000000000000000000', 9, 5);
    checkSubResult('1.11874482', '48840191373078238086640881533698465.717620778949', '-48840191373100000000000000000000000', 12, 5);
    checkSubResult('0.281969520841', '525591380542776020976261376042231280.99050263561330377859863953', '-525591380542776020976261376042231280.70853311477230377859863953', 97, 6);
    checkSubResult('0.9999999999999959369334762196188619130301649399733281630919124260101076514635673054327688686405515', '6892460359743232550483058284.326802388', '-6892460359743232550483058283.326802388000004063067', 49, 3);
    checkSubResult('1.000000000000000000000000138365204598651999681848', '4.585694782001886784351261812739727', '-3.585694782001886784351261674374522401348000318152', 93, 4);
    checkSubResult('1.00000000000000000001348089658161552137212593704802977308725958902187035801449881713928406671', '2599076526329799757363350602243099450.6957978861778433554878885203926487289', '-2599076526329800000000000000000000000', 14, 5);
    checkSubResult('1.0000000000000', '66366654979619144184658698072192.357935388883183470438181288188381307278', '-66366650000000000000000000000000', 7, 5);
    checkSubResult('1.000000', '18105728986041761640887595533283120477.2742082541073753474', '-18100000000000000000000000000000000000', 4, 1);
    checkSubResult('0.9999', '560937701245564854434830710385849233.169675002587006894673914472266909', '-560937701245564854434830710385849232.169775002587006894673914472266909', 79, 2);
    checkSubResult('0.9999998719213481023531897427716397778263888401893910733910220314504983682315253', '38792839790712300540097766016170179.72942773540650288197576877282', '-38792839790712300540097766016170178.72942786348515477', 52, 2);
    checkSubResult('1.000000000000000000000000000000011337132819044149107', '97753977764753722505638575181479019.579624307127638397405681', '-97753977764753722505638575181479018.579624307127638397405681', 60, 4);
    checkSubResult('1.01261395071914172725658272307075493652694434213346101402984', '1049710327243884264.3689519321', '-1049710327243884263.35633798138085827274341727692924506347305565786653898597016', 95, 6);
    checkSubResult('0.99999999998635625720009473958665342273155724466867056964747162778310004832306258429717336387169', '12.1520940727652904005353452973720184', '-11.1520940727789341433352505577853649772684427553313294303525283722168999516769374157', 84, 2);
    checkSubResult('0.999999999999999999999999999999999524622195377650474620654559769514364455807304047052', '7002515.6669052486740556972355374422866181829657', '-7002514.6669052486740556972355374', 32, 5);
    checkSubResult('0.99999998878183120416824285037203', '38327.8407', '-38326.8407000112181687958317', 27, 1);
    checkSubResult('0.999999999999999999999999999', '2.9094462300972', '-1.909446230097200000000000001', 55, 4);
    checkSubResult('0.9999999999999999999999999996779494408046302584202610482', '530770914537012205776892173.865394333047000705228144653463710904', '-530770914537012205776892172.8653943330470007052281446537857614631953697415797389518', 92, 1);
    checkSubResult('1.0000000000000000000000000000000000000211924266373601875662343025201383719314762448306414697', '33086682481347.6314289196308731545826716', '-33086682481346.63142891963087315458267159999999999997880757336264', 64, 6);
    checkSubResult('0.9999999999999999999999999999999999999995086077216389080791500865', '43010632125906095550264.572650474808124', '-43010632125906095550263.572650474808124', 51, 4);
    checkSubResult('0.999999999999999999999999999999392910865226086344321', '4584324554085375538027273692534240749302.742306700543168212764946899734664', '-4584324554085375538027273692534240749301.742306700543168212764946899735271089134773913655679', 91, 3);
    checkSubResult('0.9999999999999999999999999999999999999921018515820697887426805224100947352172147724109795779', '830076114723591620059141676694501404709.4930298672', '-830076114723591620059141676694501404708.4930298672', 70, 4);
    checkSubResult('1.000154688825648481267644205561160017273389804317525860318979525925354', '5590.1166644928260', '-5589.1165098040003515187323557944388', 35, 1);
    checkSubResult('0.99999999999006027143696724994249662', '88359515632902648.759516639917666812111537547', '-88359515632902600', 15, 1);
    checkSubResult('1.00000000000000', '95.33659318661235', '-94.33659318661235', 70, 4);
}

function testSubWithDiffPRandRMWithMoreDigitsOfDecimal002() {
    checkSubResult('0.9999999999999999999775634801237813332795738416510297362767757177787528', '10739394560873313157162707656670.252363942865247660125793434721595385', '-10739394560873313157163000000000', 23, 6);
    checkSubResult('0.99999998955431286156626', '4902.7915368894281469434', '-4901.79153689987383408183374', 80, 2);
    checkSubResult('0.99999999999999898259041082937473685908796752941185241324258874667581114315116781', '5517546011621870332399416576575.811785782758678907878062576', '-5517546011621870332399416576574.81178578275867992528765174662526314091203247058814758675741126', 93, 0);
    checkSubResult('1.13135445288218095176064019413277569648722343676398316921046471781497209018036761926374980678', '3619072849985061077293.9012666679115988775', '-3619072849985061077292.76991222', 30, 4);
    checkSubResult('0.999964371653162345075430201881', '168105725527169314379065790662916050221.475269915782886990770332731552414180376', '-168105725527169314379066000000000000000', 24, 5);
    checkSubResult('0.999999999998343581666045', '21225778421730442449952304083.507476189532490354504704824693390193', '-21225778422000000000000000000', 11, 4);
    checkSubResult('1.0000000000', '53.0721765572571058497526522442', '-52.0721765572571058497526522442', 68, 1);
    checkSubResult('1.0000000000000000010868737982065976552678875918917937663867883830744', '72274249298653961307161266.2429171261996071156986500328106121752', '-72274249298653961307161265.2429171261996071146117762346040145199321124081082062336132116', 87, 1);
    checkSubResult('1.00000000000000000000000000000000001026071005118758019147403591153361193415866494922695', '145.57075488191632841598918', '-144.57075', 8, 4);
    checkSubResult('1.0000000', '526650518510726171000913231536479079.037380846608', '-526650518510726171000913231536479078.037380846608', 75, 3);
    checkSubResult('0.999999999999999999999999999999999999997106197957371323499604358266134753009', '3584419408840321948825.676382768', '-3584419408840321948824.6763827680000000000000000000000000000028938020426286765003956', 83, 2);
    checkSubResult('0.99999999880681185203794773690375608443466417194000936368334849553283470358861975018', '5.0975685392156383162823410521', '-4.0975685404088264642443933152', 30, 3);
    checkSubResult('0.999999998177929451382948935869', '10103621840183015475172718.257', '-10103621840183015475172717.257000001822070548617051064131', 70, 4);
    checkSubResult('1.000000000000000000000000000000000000000144374259221118949564393862079', '99403923311484468697407136499693668.59308470138007980955', '-99403923311484468697407136499693667.5930847013800798095499999999999999999998556257407788811', 90, 5);
    checkSubResult('0.999999975691341207638223751903870453583011108741353767405960466759765078360050260758989020', '4.6084648305890876715', '-3.60846485489774646386177624809612954641698889125864623259403', 60, 2);
    checkSubResult('0.999999999999999999895045963233918813836521284190202155769449', '429720283413999973159.756715979', '-429720283413999973158.756715979000000000104954036766081186163478715809797', 72, 2);
    checkSubResult('0.999999999999999999998773564582848665317660249642891385732648080962811751', '59990316469528.036171429611687', '-59990316469527.036171429611687000001226435417151334682339750357108614267351919037188249', 100, 2);
    checkSubResult('1.000011075533608457976204143394074562732956861700803109887313366700147999338062991286462275342326012', '2792362408227880809678840930573.860305000', '-2792362408227880809678840930572.8602939244663915420237958566059254372670431382991968901126866333', 97, 6);
    checkSubResult('1.000000000000000000000000000000000000015973553865744063022762207811071071600821959910304633272757', '1809301547973844603902311.5654087887338690', '-1809301547973844603902310.56540878873386899999999999999999999998402644613425593697723779218893', 93, 3);
    checkSubResult('0.999999999999999999999999999999999999893329386351827298183253105991893674068332982263468835259', '2757167858879.682885', '-2757167858878.6828850000000000000000000000000000001066706136481727018167468940081063259317', 89, 4);
    checkSubResult('1.0000000000000000000000000000111360158322886005852576303546314011852429419271247', '93939314.46578658799426616', '-93939313.46578658799426615999999999998886398416771139941474236964536859881475705807', 82, 2);
    checkSubResult('0.9999999999999999999998770154790480869633545879631257941833370190599047521999789229', '199829413575720837193657766.733709709179385212202071225', '-199829413575720837193657765.734', 30, 5);
    checkSubResult('0.999999999999999999999999998135', '554606063.013454693418100772398897875014035248', '-554606062.01346', 14, 0);
    checkSubResult('0.98773519715148', '2549541405629529059884688169455754452231.105907313888980241014461140', '-2549541405629529059884688169455754452230.11817211673750024101446114', 74, 6);
    checkSubResult('0.99999999999999999999999999999999999999988230202698086139860756333417913240', '690065016931922.4085310572334', '-690065016931921', 15, 4);
    checkSubResult('1.00000000000000', '1289887282480591855765.347633806181', '-1289887282480591855764.347633806181', 51, 0);
    checkSubResult('0.999999999999999999999999999995658364099102648491089', '414085174968159470504048.51', '-414085174968159470504047.510000000000000000000000001', 51, 3);
    checkSubResult('0.999999999999999295252487060650057351383150516174879', '6306669915887513524394303183172309.934564178035290474234779480', '-6306669915887513524394303183172308.934564178035291178982292419349942648616849483825121', 99, 4);
    checkSubResult('1.00000000000000000000081253348145920781026085647520801897170982656182514222627649830571537940570097', '34180955261225283278.9546214472426960215969277072', '-34180955261225283277.954621447242696021596115173718540792189739143524791981028290173438174857773723', 98, 1);
    checkSubResult('0.99999999999999999999999856479373626889523595783214491795216121174762099354921379755267504653649134', '8233795130549636376322.3369072392151862574878', '-8233800000000000000000', 5, 0);
    checkSubResult('1.0001', '1607764700164263.45772807689415459406211472014192328', '-1607764700164262.45762807689415459406211472014192328', 65, 3);
}

function testSubWithDiffPRandRMWithNegAndPosIsZero001() {
    Decimal.toExpNeg = Decimal.toExpPos = 0;
    checkSubResult('1.792316612884487564311771281e-23932057', '5.69976456866047320412517423508310354728679470757328490000343592950016294088615989268093866e-32517', '-5.6997645686604732041251742351e-32517', 29, 5);
    checkSubResult('1.99169479851016450011043646901687400115512860504018833941164718920781076854216762430238626408343644e-9931933', '6.38526426739e+8626025', '-6.38526426739e+8626025', 22, 4);
    checkSubResult('-6.2542519003586694651026234e+87', '-6.5757404951359531828365479313153601424485747649226579274168996862092441994766035e-49849', '-6.2542519003586694651026234e+87', 53, 3);
    checkSubResult('-9.604772015363615559582304998733675e+5850', '8.1340843005908425924790547473450988769558068511930082393e+138332923', '-8.1340843005908425924790547473450988769558068511930082393e+138332923', 96, 2);
    checkSubResult('-4.228107205843224077015863084700000947581407920789023984663576639e+72', '-2.3646076187718393062198539736528060703203e-18947270', '-4.22810720584322407701586308470000094758140792078902398466357663899999e+72', 69, 2);
    checkSubResult('3.42164002916939306745661852229207679178670363e-739642191', '48413603180304870097616580848566368', '-4.8413603180304870097616580848566368e+34', 43, 5);
    checkSubResult('-2.7082067257439001248731034e+255', '1.463357067849197668312169937835142233343040728649218403546975321163316191984829045020133415427186882e-813', '-2.708207e+255', 7, 5);
    checkSubResult('1.80544723819507780400985933621596829e-23912898', '-6.8902351056372730055504911816243114779696717903217778350020023536206268396056597e+8117', '6.8902351056372730055504911816243114779696717903218e+8117', 50, 0);
    checkSubResult('-1.688322353309930289764085302393645579e-2061', '8.304874790464942866574379155442852235973389929444676317853978559698488e+320', '-8.304874790464942866574379155442852235973389929444676317853978559698488e+320', 80, 6);
    checkSubResult('5.323551831268452061208291787260167129e+3404403', '1.731761449136485742878138678929997425806089831701987933870812710697622052696577114307158491381462e+545', '5.32355183126845206e+3404403', 18, 5);
    checkSubResult('-478232737.497', '4.0462091688110303902787237905655428288294712510868875182578760417628600744075185622547055498e+3079062', '-4.04620916881103039027872379056554282882947125e+3079062', 45, 6);
    checkSubResult('3.0612417422416523917303965310500924897578e+6491', '7.827139363104333343854465329937791735830391528894758013298610462720743920', '3.0612417422416523917303965310500924897578e+6491', 54, 2);
    checkSubResult('-5.3813883054823380e+324', '-1.2369677988e-57833611', '-5.381388305482338e+324', 75, 5);
    checkSubResult('9.21805739519561831297761022643364049172592e-918', '-48895883124010996460744080319445610017323327196869255668.4572', '4.88958831240109964607440803194456100173233271968692556684572e+55', 66, 6);
    checkSubResult('-9.252715780068260418043e+72', '-12590139569136468029213593074424819654932792387400646295775156790571242103916622815884889.5892', '1.25901395691364587764978130061644016119e+88', 39, 6);
    checkSubResult('-5.71550608647635849585421199679478092798616968053825229082869453927359310584963054663809359831818000e+75134426', '-1e-353086', '-5.7155060864763584958542119968e+75134426', 30, 0);
    checkSubResult('-1.82078636582034050e-58370', '6.949920119724528258522072178e-45427578', '-1.8207863658203405e-58370', 71, 6);
    checkSubResult('-2.795864396006197633901037932062163941946590578075449507267908969758559434326789e+742563919', '-3.486025739887413584063563381470972389366187865215964884178573941676391907e-39238980', '-2.79586439600619763390103793206216394195e+742563919', 39, 5);
    checkSubResult('9.481503849304826928973950761062868210560506712428214283679344428199e+986553613', '-6.44018958804822470871191968385562129218994153583004246052413787928461266956e-183768', '9.4815038493048269289739507610628682105605067124282142836793e+986553613', 59, 5);
    checkSubResult('8.42058906940015718798e+23', '-5.12818647090105520279002851228627516477188332698656845964525170861373277e+77', '5.12818647091e+77', 12, 0);
    checkSubResult('-6.66867298424442973991017135004123e-6016', '1.122942426365938279781316944e-50646915', '-6.66867298424442973991017135004123e-6016', 89, 2);
    checkSubResult('-14434824877681671252494.50', '-4744180884604619155005023739354631157756385352850463825687419180.317893158', '4.744180884604619155005023739354631157756370918025586144016e+63', 58, 1);
    checkSubResult('3.021351757092074226662594776398163721367430180658722006837511458091887e+754145', '-7.7281874393523698296251147e-342', '3.021351757092074226662594776398163721367430180658722006837511e+754145', 61, 3);
    checkSubResult('-9.222486718751634618635052066622543e+36', '3.38442051790053e+18', '-9.22248672e+36', 9, 3);
    checkSubResult('7.09899984575865359734e+84', '7.78137675765375240317008124083145599412855878668147615343173099333e-778', '7.09899984575865359734e+84', 36, 0);
    checkSubResult('-7.731336555060253e+61', '-3.797617486236881717819332e+113', '3.79761748624e+113', 12, 6);
    checkSubResult('-3203091812097591345956128', '1.54e+804483', '-1.540000000000001e+804483', 16, 3);
}

function testSubWithDiffPRandRMWithNegAndPosIsZero002() {
    checkSubResult('-6.8790104211130242454991601642749891042049402313899949070009698688834394612168393565e-552', '-6.47132322792558510008703e+977', '6.4713232279255851000870299999999999999999999999999999999999999999999e+977', 68, 3);
    checkSubResult('5.11288463e+804121757', '-3.233654093376025263229529432009804011579062041719e-323', '5.1128846300000000000000000000000000000000000000000000000000000000000000000000000000000000001e+804121757', 92, 0);
    checkSubResult('2215721.822336', '1450572422564612919038700170868560596636485142539113457.847312756478875123323372035942316', '-1.450572422564612919038700170868561e+54', 34, 0);
    checkSubResult('3.856021532534216364576565205962498e-680406380', '4.0748021e+910929', '-4.0748020999999999999999999999999999999999999999999999999999999999999999999999999999e+910929', 83, 2);
    checkSubResult('587477294349.9128', '5.9009418178397792919787923374434637609777539615615913481542114343091e-601914', '5.874772943499128e+11', 53, 0);
    checkSubResult('63490679413147320151422267902664.025528745', '-1.1511e+1066189', '1.1511e+1066189', 57, 4);
    checkSubResult('4.339186830776212855076142e+864782108', '6.8227815138786859587759979265847699809e-704', '4.339186830776212855076141999999999999e+864782108', 37, 3);
    checkSubResult('-42.683', '-2.1402464208082777156219367044346794646671634131699440029334548496490648e+95393976', '2.140246420808278e+95393976', 16, 4);
    checkSubResult('-5.86269349525893423867699327633641571932e+53447445', '4.4471801597664471649566620984480e+70072792', '-4.447180159766447164956662098448e+70072792', 95, 6);
    checkSubResult('2.01368392850485088e-7530', '7.80493785717377845822211894268763294620830205670933641096287239110624600304801026405564172615080e+76373', '-7.8049378571737784582221189426876329462083020567093364109628723911062460030480102640556e+76373', 86, 2);
    checkSubResult('-9.443635658940048035845e-138325', '-1.35559639536973582525930597369597363666745264482626811e-35473', '1.355596395369735825259305973695973636667452644826268e-35473', 52, 5);
    checkSubResult('1.8616211493256324295274776609561325391953686920009343298139595509785385e-3501', '1.03012623565635246794472661292428160395721926954319341162059243941806e+69', '-1.0301262356563524679447266129242816039572192695431934116205924394e+69', 65, 4);
    checkSubResult('4.511087857625328082657257239895665113144003584405761127577260517484874613e+778771121', '1.8325842443473932072e-59442002', '4.511087857625328082657257239895665113144003584405761127577260517484874612999999999999999e+778771121', 88, 1);
    checkSubResult('-1.287219294194087073000916324326305e+96', '7.1699261108103554603864614680e-7547516', '-1.28721929419408707300091632432630500001e+96', 39, 0);
    checkSubResult('5.0461889643211e-8150', '-5.3418458279074099377871e+49476', '5.3418458279074099377871e+49476', 56, 4);
    checkSubResult('-6.71547813417393495728240002804006106537518734009661124726571518977786981532e+3318', '-7.2398883759082488170424e+75376', '7.2398883759082488170424e+75376', 56, 5);
    checkSubResult('1.44735793243277391262764608662589226432402931e+41712893', '-340885521769586478087899909642349839174961017948388220545761927469.281', '1e+41712893', 1, 6);
    checkSubResult('6.561512285692418871312354839741304442546111797417416511e+94599649', '-440795478877.624', '6.561512285692418871312354839741304442546111797417416511e+94599649', 66, 6);
    checkSubResult('-688837253042614877399.5', '-3.632441039346975825180266180783847897335359529888336884091855e+188507', '3.6324410393469758251802661807838478973353595298883368840918549999999999999999999999e+188507', 83, 1);
    checkSubResult('1.0360675995358536872163314493066410401378536425375038250374718871686217599980919432e+553425', '8.704062929984294713140931351834846849951498e-593673477', '1.0360675995358536872163314493066410401378536425375038250374718871686217599980919431e+553425', 83, 3);
    checkSubResult('7.43404688761493575549516036492094029880287e-26712037', '-7.9066293190521765772848055594328963843287417065639566213443958915377769052389889e+928963854', '7.90662931905217657728480555943289638432874170656395662134439e+928963854', 60, 1);
    checkSubResult('1686783212633289750026735931738732785983663746521931468526088783025141583828124.465', '8768590549.7241944309880627200749822214571362095236108237501203844509903955330291000151422', '1.686783212633289750026735931739e+78', 31, 4);
    checkSubResult('-1.30273886137268e+5289457', '-1.2899382417e+647330', '-1.30274e+5289457', 6, 4);
    checkSubResult('42050878099274497028907191938263035774766181789514211433098485981439.75', '1.43994506473742424499458038815027395361046188494352856430241622193144915292115196755951196e-5923', '4.2050878099274497028907191938e+67', 29, 5);
    checkSubResult('-4.320626740890915234398134986114517e+94658', '2.78894990560963181013521759e+8249', '-4.32062674089091523439813498e+94658', 27, 1);
    checkSubResult('4.01525027773499792223184009769672475650267777439e+2993', '-9.7541734788872345649674286932141725163703554472540789341298781328709290320275810e-6547602', '4.01525027773499792223184009769672475650267777439e+2993', 67, 4);
    checkSubResult('-3.95785198444775477048e-46', '-6.870396030942305e-7108', '-3.957851984447754770479999999999999999999999999999999999999999999999999999e-46', 73, 1);
    checkSubResult('-9711.6203836557758490544267', '9.188784153327143382542570876093e-23501', '-9.7116203836557758490544267e+3', 29, 4);
}
