/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 3");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart003);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart004);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: 0, toExpPos: 0, minE: -9e15, maxE: 9e15 });
    checkLnResult('8.3704021992314838607708728021923440173295401079057777619E+51053', '1.175560014545608380866313681e+5', 28, 0);
    checkLnResult('6.328946425890222657711855468334E+28226', '6.4994611968630829105921275070197989840133161484e+4', 47, 1);
    checkLnResult('581028.112757643064563527683530', '1.327255e+1', 7, 4);
    checkLnResult('5.044E+675213', '1.554737006595206671115965015e+6', 28, 2);
    checkLnResult('8.419E-4010970724', '-9.235601395387443688559191477601e+9', 31, 1);
    checkLnResult('51.2111719483', '3.9359577104e+0', 11, 2);
    checkLnResult('8.81634594656560180086916089974763812544168318286235E-824049757446', '-1.897444687e+12', 10, 4);
    checkLnResult('6.2212997114E-553559942', '-1.27461886869986969345097622349731651e+9', 36, 3);
    checkLnResult('235519025969854529810574120108993578243.19971', '8.8354855047659717507839540458e+1', 29, 3);
    checkLnResult('7.0258964578196427071536597563115415415640043575157590', '1.9e+0', 2, 3);
    checkLnResult('9.738596641858094986444163000772706367196726E+109229400188311', '2.52e+14', 3, 0);
    checkLnResult('8.62703833E+5568507422742', '1.28219621818345766335259463697135358656004154175e+13', 48, 0);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('8.41305546301539271737600098357065745E-7295979', '-1.67996103544128833514984735034663e+7', 33, 3);
    checkLnResult('2.5232060242873444092576213384933104665517329499810802952E+8132082', '1.872481171374e+7', 13, 2);
    checkLnResult('7.9297195306E+65', '1.5173864871148797849494244247043518353031307868144564e+2', 53, 0);
    checkLnResult('3.64689986228734945266932E+62', '1.44054153219522787090894392411068439321378481560180842e+2', 54, 5);
    checkLnResult('1.334192043174385742450630E-39646400', '-9.1289209342554e+7', 14, 0);
    checkLnResult('2.612654672780E+2075312996908189', '4.7785847699775949720482e+15', 23, 4);
    checkLnResult('2578000917.79692', '2.16702800974745614276078088977272042e+1', 36, 6);
    checkLnResult('6.596856211693040993166106964362605852614690053358144E-8062494978', '-1.85646e+10', 6, 3);
    checkLnResult('6.0879876921111929476500485212617470990636329749748587985E-601', '-1.382047323290527848037209499935e+3', 31, 2);
    checkLnResult('3.286699439E+4569470654914505', '1.052159501287987952020793970337e+16', 31, 0);
    checkLnResult('3.637336824738188102903230332461981310841753899084935587E+10761051833', '2.477823753689330253840044863e+10', 28, 2);
}

function testLnWithSpecificConfigPart003() {
    checkLnResult('3.7477430030903749357328391677904495853650E+20869', '4.8053969459485685179695549117734336870515492158e+4', 47, 2);
    checkLnResult('3.140337150756E-13712400984', '-3.1573970093770953376660919898558265466406669093e+10', 47, 2);
    checkLnResult('8.48368791870432056292625630300375084950237347894278E+624032870', '2e+9', 1, 0);
    checkLnResult('6.5815151328134220328E+98443649460178', '2.2667487974693907959622819142544911252715e+14', 41, 5);
    checkLnResult('1.7723561424140845E+247846099271', '5.7068673353869932302832431846669628468118839468307384e+11', 53, 1);
    checkLnResult('3.0949198435280859777489812648334758766940462500408883433646E+2469192456080', '5.68552574110429262534321058697983662070785392e+12', 45, 3);
    checkLnResult('0.85025805182099765686920489225574772214389', '-1.6221538519436441661125978316259087269126272e-1', 44, 4);
    checkLnResult('4.432834164971387041E-4507057882525783', '-1e+16', 2, 1);
    checkLnResult('3.988922913035675507988353278783407292371E+4694273500', '1.08089641849205055e+10', 18, 3);
    checkLnResult('3.01186469E+2545169058', '5.860468333203e+9', 13, 5);
    checkLnResult('9.0748866591646251314532E+47614', '1.096374921287092159e+5', 19, 2);
    checkLnResult('5.6180796113670596347965219927087524242601615E+3880377312075', '8.93489895397792489522883676797722624255e+12', 39, 1);
}

function testLnWithSpecificConfigPart004() {
    checkLnResult('8.098147787316401427624109754110153170688558350457541922717E+8910511', '2.05172118911948342992282908397e+7', 30, 4);
    checkLnResult('5.42868111005864502392394132989497156E+59059832747', '1.359902905e+11', 10, 4);
    checkLnResult('4.70991012341588450130232666320921407597912267207E+65217922', '1.5e+8', 2, 3);
    checkLnResult('7.6016818135485428149331576079477334360182454470810066E+628508014', '1.44719318589e+9', 12, 4);
    checkLnResult('8.76577418121734880922387712030769537853138823619109E+32845', '7.5630579e+4', 8, 2);
    checkLnResult('3.989639481915478229949501547E-3562148605', '-9e+9', 1, 0);
    checkLnResult('7.50095976711871808229778395340891745932E+459172412', '1.05728355300035123967283065534499540845423548025e+9', 48, 3);
    checkLnResult('1.094234101086547061145E+8105185598', '1.8662879534e+10', 11, 6);
    checkLnResult('8.6184097550403752866225958864653E-99458373', '-2.29011364889340897937584119444696367e+8', 36, 1);
    checkLnResult('8.370E+4643496155876', '1.0692045027897357766979173674e+13', 29, 2);
    checkLnResult('8.8260530736377112408404700113658970187344553009119498E+69', '1.6105607934074696962533009034085e+2', 32, 5);
    checkLnResult('7.21733459581750946992541376472150E+771894752', '1.7773533512920215e+9', 17, 1);
    checkLnResult('8.0398697796858068264510296618162080456174991956226525E-45122871', '-1.03899248033280440664832913861293e+8', 33, 3);
}
