/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 2");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart003);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: double, rm: int) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: -9e15, toExpPos: 9e15, minE: -9e15, maxE: 9e15 });
    checkLnResult('7030.0000000004', '8.8579419848047674873993819813049734644306', 41, 3);
    checkLnResult('14302.00090090005', '9.5681547295995328150820246661661705098', 38, 1);
    checkLnResult('31131.999969929999979999', '10.34599150711339159800792', 25, 2);
    checkLnResult('11604.0000000000070005080090000000805009', '9.35910514524129523926613596795448321965442856295', 48, 3);
    checkLnResult('31917.99991999999899997969', '10.37092539045270895006814258635431', 34, 2);
    checkLnResult('26753.94999', '10.194438', 8, 2);
    checkLnResult('29279.05000800090000700009000000000080004005030000097', '10.2846275224669583306543625537', 30, 3);
    checkLnResult('11553.00407000007000030000092', '9.3547007747724112152725332649758224586144889', 44, 4);
    checkLnResult('26807.0000000200007', '10.1964183264243228688799088559564488641428510584', 48, 2);
    checkLnResult('3714.999299999999899999999959999496999998995979949999999969399979', '8.2201337687265389341123277272836362405282053685', 47, 2);
    checkLnResult('11275.000001000060000080002000020000001000000000000005', '9.330343164459576214650017260944374', 34, 1);
    checkLnResult('18404.00107000000000000700701009003008000000000000700203', '9.820323369414893', 16, 0);
    checkLnResult('11735.00000000200002', '9.37033110828529432', 18, 3);
    checkLnResult('29285.9', '10.28486145051', 13, 2);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('24143.9999999999999599999999', '10.09179118100763013383', 22, 0);
    checkLnResult('1189.0000030020000000000000000080000006000030900907', '7.08086789921559259321173351103264209976', 39, 3);
    checkLnResult('27341.0000008', '10.2161426860830683625276502597036387295831', 42, 1);
    checkLnResult('21469.99999999999969', '9.9744118908728266982', 20, 2);
    checkLnResult('3243.000000900007000000305000060209000000004000000900600000600013', '8.0842542', 8, 0);
    checkLnResult('16240.999999', '9.695294188113030278102040381421186919123', 40, 1);
    checkLnResult('2258.999199', '7.72267716188626709813978452604048821542674214', 45, 3);
    checkLnResult('14805.999994993999999999994994999999999799999999999299999999999', '9.602787782664937484827890675974506248220680541057', 49, 1);
    checkLnResult('6159.00400302', '8.725670355633251921000813056', 29, 0);
    checkLnResult('22763.99999999996999998992999959999939899999', '10.03293561972301', 16, 4);
    checkLnResult('12087.000090000000900500000000020500000000002', '9.3998857813', 11, 4);
    checkLnResult('24056.00008007005', '10.0881397279968507', 18, 0);
    checkLnResult('1273.9', '7.14983834011574117903670501641161393434448327659', 48, 0);
}

function testLnWithSpecificConfigPart003() {
    checkLnResult('31641.0006006003000000000000000000050001', '10.36220904592643417978456213185992074668712', 43, 4);
    checkLnResult('28152.060004000000000000000007', '10.2453758104285329372599741260889658', 36, 3);
    checkLnResult('27680.00040003001010000500400000070000000000000050002', '10.228465424183556996128', 23, 2);
    checkLnResult('31218.00002030000000100090000050704010007079', '10.348750131168624384483033071', 29, 0);
    checkLnResult('11417.9', '9.342937578384608', 16, 4);
    checkLnResult('0.9999999999999999999199499999969999979699999999999999', '-0.00000000000000000008005000000300000203320400125024025016', 37, 4);
    checkLnResult('0.000010000000000000900406000400000060000021', '-11.51292546497013837', 19, 2);
    checkLnResult('0.999999999999939994989999999', '-0.000000000000060005010000002800300612550182023047506056', 41, 3);
    checkLnResult('0.979999999999999999', '-0.02020270731751944942845346428', 28, 1);
    checkLnResult('0.009009005050040300000400008', '-4.7095306407579573919326957858245838', 35, 4);
    checkLnResult('0.060080080020000000060000000000000080900000000000600000008087', '-2.81207693963633246203151', 24, 4);
}
