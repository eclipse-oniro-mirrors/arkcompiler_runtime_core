/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function testToNumber001() {
    arktest.assertEQ(new Decimal('0').toNumber(), 0);
    arktest.assertEQ(new Decimal('0.0').toNumber(), 0);
    arktest.assertEQ(new Decimal('0.000000000000').toNumber(), 0);
    arktest.assertEQ(new Decimal('0e+0').toNumber(), 0);
    arktest.assertEQ(new Decimal('0e-0').toNumber(), 0);
}

function testToNumber002() {
    arktest.assertEQ(new Decimal('-0').toNumber(), -0);
    arktest.assertEQ(new Decimal('-0.0').toNumber(), -0);
    arktest.assertEQ(new Decimal('-0.000000000000').toNumber(), -0);
    arktest.assertEQ(new Decimal('-0e+0').toNumber(), -0);
    arktest.assertEQ(new Decimal('-0e-0').toNumber(), -0);
}

function testToNumber003() {
    arktest.assertEQ(new Decimal(Infinity).toNumber(), Infinity);
    arktest.assertEQ(new Decimal('Infinity').toNumber(), Infinity);
    arktest.assertEQ(new Decimal(-Infinity).toNumber(), -Infinity);
    arktest.assertEQ(new Decimal('-Infinity').toNumber(), -Infinity);
}

function testToNumber004() {
    arktest.assertEQ(new Decimal(1).toNumber(), 1);
    arktest.assertEQ(new Decimal('1').toNumber(), 1);
    arktest.assertEQ(new Decimal('1.0').toNumber(), 1);
    arktest.assertEQ(new Decimal('1e+0').toNumber(), 1);
    arktest.assertEQ(new Decimal('1e-0').toNumber(), 1);
}

function testToNumber005() {
    arktest.assertEQ(new Decimal(-1).toNumber(), -1);
    arktest.assertEQ(new Decimal('-1').toNumber(), -1);
    arktest.assertEQ(new Decimal('-1.0').toNumber(), -1);
    arktest.assertEQ(new Decimal('-1e+0').toNumber(), -1);
    arktest.assertEQ(new Decimal('-1e-0').toNumber(), -1);
}

function testToNumber006() {
    arktest.assertEQ(new Decimal('123.456789876543').toNumber(), 123.456789876543);
    arktest.assertEQ(new Decimal('-123.456789876543').toNumber(), -123.456789876543);
    arktest.assertEQ(new Decimal('9007199254740991').toNumber(), 9007199254740991);
    arktest.assertEQ(new Decimal('-9007199254740991').toNumber(), -9007199254740991);
    arktest.assertEQ(new Decimal('1.7976931348623157e+308').toNumber(), 1.7976931348623157e+308);
}

function config() {
    Decimal.precision = 20;
    Decimal.rounding = 4;
    Decimal.toExpNeg = -7;
    Decimal.toExpPos = 21;
    Decimal.minE = -9e15;
    Decimal.maxE = 9e15;
}

function main() {
    const suite = new arktest.ArkTestsuite("Decimal toNumber API tests");
    suite.addTest("Decimal toNumber", testToNumber001);
    suite.addTest("Decimal toNumber", testToNumber002);
    suite.addTest("Decimal toNumber", testToNumber003);
    suite.addTest("Decimal toNumber", testToNumber004);
    suite.addTest("Decimal toNumber", testToNumber005);
    suite.addTest("Decimal toNumber", testToNumber006);
    config();
    return suite.run();
}