/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Decimal } from "@arkts.math.Decimal";

function main(): int {
    const suite = new arktest.ArkTestsuite("Decimal ln API tests part 10");
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart001);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart002);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart003);
    suite.addTest("Decimal ln with specific config", testLnWithSpecificConfigPart004);
    return suite.run();
}

function checkLnResult(n: string, expected: string, sd: number, rm: number) {
    Decimal.precision = sd;
    Decimal.rounding = rm;
    arktest.assertEQ(new Decimal(n).ln().valueOf(), expected);
}

function testLnWithSpecificConfigPart001() {
    Decimal.set({ precision: 40, rounding: 4, toExpNeg: -9e15, toExpPos: 9e15, minE: -9e15, maxE: 9e15 });
    checkLnResult('412184042.8896878204667114461794718285421610397268782502943123737616921059160330553262782457035088179494074564563410048773731594742762676033110116212190491442443442166045598309788282584460671280467345157657971668722189192696185094311918310776057781011454221034130478455744396828404806478740586228712397995429199362271635020780002483852222338852479130612370279841990621710882872848128725669571603659740938524254161291050199148884609411958653228755273145468', '19.83698051361329059', 19, 5);
    checkLnResult('54177615.4161615199898039376707204324649188748836298320352749128620609118474310429998270745885186642610341190928928278585051565238331611651463560104044550438095405103019768593446391808685915870067181972775276870790595322163624212767962894314519491376965719216779872096909267426650844863008221945010966830813924747797605343830807190598639058151734866383440974952571052161557282681608575287009214045591019', '17.807779', 8, 0);
    checkLnResult('202208538.0186996731425487962109425863325508616918249176043925148428750848485730129706779656165064759679330957399949664528408543769938770452288279928848232018815279096218064756460984277961961770343996043873166572208624824439463192886927974622714849727874835303030139509530094904609301858682577824229369378223655885781140501472159022060380707281531318049222808388638845419183185', '19.124810089270938003831849629', 29, 4);
    checkLnResult('419077532.2448607619101987942607612824719743129742324423040412531483957695007192401517535342220366141599584852033167948744863351374575147495928944631030285526934314990168106650729902570735596692781194661598925404746581114061618262181809902436423306258562179673075380899236033671', '19.85356650192559415566417', 25, 3);
    checkLnResult('146708483.32674399300686866605976073019721421720619119889933263331964327217855614280622971093931911986466782717253122036096979367739887439449073138969919020714899901453823470883487750734885842377270384469297548135028684586032301609167142204835412029755367943305773471371240556395996807312138338709086180854612022228560209117316657640810924077420852085218504347155816788970471703339876', '18.803958069162751518238485267', 29, 5);
    checkLnResult('0.999', '-0.001000500333583533500142983', 25, 0);
    checkLnResult('0.99', '-0.0100503358536', 12, 3);
    checkLnResult('1.0000000000001', '0.00000000000009999999999999501', 16, 2);
    checkLnResult('1.0000000000001', '0.0000000000000999999999999951', 15, 2);
    checkLnResult('1.0000000000001', '0.000000000000099999999999996', 14, 2);
}

function testLnWithSpecificConfigPart002() {
    checkLnResult('1.00000000000001', '0.00000000000000999999999999996', 15, 2);
    checkLnResult('1.000000000000000000000000000000000000001', '0.0000000000000000000000000000000000000009999999999999999999999999999999999999995000001', 46, 0);
    checkLnResult('8.1', '2.09186', 6, 1);
    checkLnResult('39.6', '3.67883', 7, 2);
    checkLnResult('13.83', '2.62684015', 9, 4);
    checkLnResult('46.7', '4', 1, 0);
    checkLnResult('47.9', '4', 1, 4);
    checkLnResult('98.9', '4.59410924', 9, 4);
    checkLnResult('28.1', '3.33576957', 9, 3);
}

function testLnWithSpecificConfigPart003() {
    checkLnResult('19.4', '2.9652731', 8, 0);
    checkLnResult('1.8', '0.587786665', 9, 4);
    checkLnResult('63.8', '4', 1, 4);
    checkLnResult('3.5', '1.25276296', 9, 3);
    checkLnResult('72.91', '5', 1, 2);
    checkLnResult('7.54', '2.020223', 7, 0);
    checkLnResult('61.1', '4.11251186', 9, 3);
    checkLnResult('64.3', '4.16', 3, 4);
    checkLnResult('70.4', '4.26', 3, 0);
    checkLnResult('40.34', '3.6973435', 8, 1);
    checkLnResult('97.56', '4.580468', 7, 0);
    checkLnResult('4.2', '1.4350845', 8, 1);
    checkLnResult('14.23', '2.65535', 6, 1);
    checkLnResult('21.41', '3.06', 3, 1);
}

function testLnWithSpecificConfigPart004() {
    checkLnResult('86.5', '4.46014', 6, 3);
    checkLnResult('53.5', '3.97968', 6, 4);
    checkLnResult('41.2', '4', 1, 4);
    checkLnResult('22.67', '3.121', 4, 1);
    checkLnResult('39.1', '3.666122466', 10, 1);
    checkLnResult('20.8', '3.035', 4, 0);
    checkLnResult('27.72', '3.3221541743', 11, 3);
    checkLnResult('484260633.26', '19.9981', 6, 1);
    checkLnResult('739084458.57', '20.420922760027607325270794371574372', 35, 3);
    checkLnResult('173897238.6257338023989', '18.9739751001054747115892', 24, 0);
    checkLnResult('234294644.588885865140275679', '19.2720900461484484624992', 24, 6);
    checkLnResult('663446355.03930603', '20.312', 5, 3);
    checkLnResult('236924096.650141980105861288', '19.2832503', 9, 1);
}
