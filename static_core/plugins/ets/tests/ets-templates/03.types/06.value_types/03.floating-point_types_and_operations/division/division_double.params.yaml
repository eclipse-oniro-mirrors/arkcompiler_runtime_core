# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # list of values
values:
- { left: 0.0, right: 0.0, result: Double.NaN }
- { left: 1.0, right: 0.0, result: Double.POSITIVE_INFINITY }
- { left: -1.0, right: -0.0, result: Double.POSITIVE_INFINITY }
- { left: 1.0, right: -0.0, result: Double.NEGATIVE_INFINITY }
- { left: -1.0, right: 0.0, result: Double.NEGATIVE_INFINITY }
- { left: 0.0, right: 1.0, result: 0.0 }
- { left: 0.0, right: -1.0, result: -0.0 }
- { left: Double.NaN, right: 0.0, result: Double.NaN }
- { left: Double.NaN, right: Double.NaN, result: Double.NaN }
- { left: Double.NaN, right: 1.0, result: Double.NaN }
- { left: Double.POSITIVE_INFINITY, right: 0.0, result: Double.POSITIVE_INFINITY }
- { left: Double.POSITIVE_INFINITY, right: -0.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.NEGATIVE_INFINITY, right: 0.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.NEGATIVE_INFINITY, right: -0.0, result: Double.POSITIVE_INFINITY }
- { left: Double.POSITIVE_INFINITY, right: 1.0, result: Double.POSITIVE_INFINITY }
- { left: Double.POSITIVE_INFINITY, right: -1.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.NEGATIVE_INFINITY, right: 1.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.NEGATIVE_INFINITY, right: -1.0, result: Double.POSITIVE_INFINITY }
- { left: Double.POSITIVE_INFINITY, right: Double.POSITIVE_INFINITY, result: Double.NaN }
- { left: Double.POSITIVE_INFINITY, right: Double.NEGATIVE_INFINITY, result: Double.NaN }
- { left: Double.NEGATIVE_INFINITY, right: Double.POSITIVE_INFINITY, result: Double.NaN }
- { left: Double.NEGATIVE_INFINITY, right: Double.NEGATIVE_INFINITY, result: Double.NaN }
- { left: 2.2250738585072014e-308, right: 0.0, result: Double.POSITIVE_INFINITY } # min normal
- { left: 2.2250738585072014e-308, right: 1.0, result: 2.2250738585072014e-308 } # min normal
- { left: 2.2250738585072014e-308, right: -1.0, result: -2.2250738585072014e-308 } # min normal
- { left: Double.MIN_VALUE, right: +0.0, result: Double.POSITIVE_INFINITY }
- { left: Double.MIN_VALUE, right: -0.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.MIN_VALUE, right: 1.0, result: Double.MIN_VALUE }
- { left: Double.MIN_VALUE, right: -1.0, result: -Double.MIN_VALUE }
- { left: Double.MIN_VALUE, right: Double.MIN_VALUE, result: 1.0 }
- { left: Double.MIN_VALUE, right: -Double.MIN_VALUE, result: -1.0 }
- { left: Double.MIN_VALUE, right: Double.MAX_VALUE, result: 0.0 }
- { left: Double.MIN_VALUE, right: -Double.MAX_VALUE, result: 0.0 }
- { left: Double.MAX_VALUE, right: 0.0, result: Double.POSITIVE_INFINITY }
- { left: Double.MAX_VALUE, right: -0.0, result: Double.NEGATIVE_INFINITY }
- { left: Double.MAX_VALUE, right: +1.0, result: Double.MAX_VALUE }
- { left: Double.MAX_VALUE, right: -1.0, result: -Double.MAX_VALUE }
- { left: Double.MAX_VALUE, right: Double.MAX_VALUE, result: 1.0 }
- { left: Double.MAX_VALUE, right: -Double.MAX_VALUE, result: -1.0 }
- { left: Double.MAX_VALUE, right: Double.MIN_VALUE, result: Double.POSITIVE_INFINITY }
- { left: Double.MAX_VALUE, right: -Double.MIN_VALUE, result: Double.NEGATIVE_INFINITY }
- { left: 3.1415927, right: 0.0, result: Double.POSITIVE_INFINITY }
- { left: 3.1415927, right: 1.0, result: 3.1415927 }
- { left: 3.1415927, right: -1.0, result: -3.1415927 }
- { left: 3.1415927, right: 3.1415927, result: 1.0 }
- { left: 9.869605, right: 3.1415927, result: 3.1415927978187623 }
- { left: -9.869605, right: 3.1415927, result: -3.1415927978187623 }
- { left: 4.6875, right: 1.25, result: 3.75 } # no rounding errors
- { left: 4.6875, right: -1.25, result: -3.75 } # no rounding errors
- { left: -4.6875, right: -3.75, result: 1.25 } # no rounding errors
- { left: -4.6875, right: 3.75, result: -1.25 } # no rounding errors
- { left: 1.0e0, right: 1.0e1, result: 0.1 }
- { left: 1.0e0, right: '1.0e-1', result: 10 }
- { left: 0.0000000001e10, right: 0.00000000000000000001e20, result: 1.0 }
- { left: 7.389055, right: 2.7182817e15, result: 2.718281552644084e-15 }
- { left: 7.389055, right: '.27182817e16', result: '.2718281552644084e-14' }
- { left: 7.389055, right: '27_182_817e8', result: 2.718281552644084e-15 }
- { left: 0e38, right: 1.0, result: 0.0 }
- { left: '0.0e2_147_483_647', right: 1.0, result: 0.0 }
- { left: '-0.0e2_147_483_647', right: 1.0, result: -0.0 }
- { left: 9.1552734e-5, right: '.01171875', result: '.007812499968' }
- { left: -9.1552734e-5, right: -0.01171875, result: '.007812499968' }
- { left: 9.1552734e-5, right: -0.01171875, result: -0.007812499968 }
- { left: 2.225073858507201e-308, right: 2.225073858507201e-308, result: 1.0 }
