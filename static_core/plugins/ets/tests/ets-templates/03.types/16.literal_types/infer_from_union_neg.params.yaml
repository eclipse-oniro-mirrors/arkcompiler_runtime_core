# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - test_type: 'a: FixedArray<string>'
    rh_value: '["a"]'
    retrieve: a[0]
    literal: '"a"'
  - test_type: 'a: FixedArray<"a">'
    rh_value: '["a"]'
    retrieve: a[0]
    literal: '"a"'
  - test_type: 'a: "a"[]'
    rh_value: '["a"]'
    retrieve: a[0]
    literal: '"a"'
  - decl: type tuple = ["a", int]
    test_type: 'a: tuple'
    rh_value: '["a", 1]'
    retrieve: a[0]
    literal: '"a"'
  - decl: type tuple = ["a", int]
    test_type: 'a: FixedArray<tuple>'
    rh_value: '[["a", 1]]'
    retrieve: a[0][0]
    literal: '"a"'
  - decl: type tuple = ["a", int]
    test_type: 'a: tuple[]'
    rh_value: '[["a", 1]]'
    retrieve: a[0][0]
    literal: '"a"'
  - decl: |-
      type faa = FixedArray<"a">
      type tuple = [faa, int]
      const faa_value: faa = ["a"]
    test_type: 'a: tuple'
    rh_value: '[faa_value, 1]'
    retrieve: a[0][0]
    literal: '"a"'
  - decl: |-
      type arr_a = "a"[]
      type tuple = [arr_a, int]
      const arr_a_value: arr_a = ["a"]
    test_type: 'a: tuple'
    rh_value: '[arr_a_value, 1]'
    retrieve: a[0][0]
    literal: '"a"'

# which type to use in union. Note #29681 extend this with "Array<int>", "FixedArray<int>", "int[]", "number_tuple
union_with_type:
  - def: "int"
  - def: "double"
  - def: "SomeClass"
  - def: "fooType"
