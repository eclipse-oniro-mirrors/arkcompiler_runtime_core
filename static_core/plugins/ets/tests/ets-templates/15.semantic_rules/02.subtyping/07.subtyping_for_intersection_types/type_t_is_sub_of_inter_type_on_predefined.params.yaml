# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - desc: |-
      >-
        Checking that type T is a subtype of intersection type (I1 & I2)
        if T is a subtype of each Ii in case of usage instanceof
        on predefined types
    check_variants:
      - check_data:
          check_type_I1: "Object | undefined"
          check_type_I2: "Object"
        check_values_groups:
          - check_values_group_data:
            - { check_type_T:  "Object",
                is_subtype_of_inter_type: "true",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "123",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "string",
                is_subtype_of_inter_type: "true",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "\"defg\"",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "int",
                is_subtype_of_inter_type: "true",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "456",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "undefined",
                is_subtype_of_inter_type: "false",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "undefined",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "string | undefined",
                is_subtype_of_inter_type: "false",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "\"abc\"",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "Any",
                is_subtype_of_inter_type: "false",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "\"abc\"",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "Any",
                is_subtype_of_inter_type: "false",
                check_value_1: "null",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "123",
                check_value_2_is_subtype_of_inter_type: "true" }
      - check_data:
          check_type_I1: "Any"
          check_type_I2: "undefined | string | bigint"
        check_values_groups:
          - check_values_group_data:
            - { check_type_T:  "Object",
                is_subtype_of_inter_type: "false",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "123",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "string",
                is_subtype_of_inter_type: "true",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "\"defg\"",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "int",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "456",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "null",
                is_subtype_of_inter_type: "false",
                check_value_1: "null",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "null",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "undefined",
                is_subtype_of_inter_type: "true",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "undefined",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "string | bigint",
                is_subtype_of_inter_type: "true",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "5n",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "undefined | bigint",
                is_subtype_of_inter_type: "true",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "5n",
                check_value_2_is_subtype_of_inter_type: "true" }
      - check_data:
          check_type_I1: "undefined | string | null | bigint"
          check_type_I2: "bigint | int | null"
        check_values_groups:
          - check_values_group_data:
            - { check_type_T:  "int",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "456",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "long",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "456",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "byte",
                is_subtype_of_inter_type: "false",
                check_value_1: "4",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "5",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "short",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "456",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "double",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "45.6",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "number",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "45.6",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "float",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "45.6",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "boolean",
                is_subtype_of_inter_type: "false",
                check_value_1: "false",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "true",
                check_value_2_is_subtype_of_inter_type: "false" }
          - check_values_group_data:
            - { check_type_T:  "bigint",
                is_subtype_of_inter_type: "true",
                check_value_1: "123n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "456n",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "string",
                is_subtype_of_inter_type: "false",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "\"defg\"",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "char",
                is_subtype_of_inter_type: "false",
                check_value_1: "c'a'",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "c'b'",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "Object",
                is_subtype_of_inter_type: "false",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "123",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "Object | undefined",
                is_subtype_of_inter_type: "false",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "undefined",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "Object | undefined | null",
                is_subtype_of_inter_type: "false",
                check_value_1: "null",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "c'a'",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "undefined",
                is_subtype_of_inter_type: "false",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "undefined",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "bigint | null",
                is_subtype_of_inter_type: "true",
                check_value_1: "null",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "5n",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "Any",
                is_subtype_of_inter_type: "false",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "\"abc\"",
                check_value_2_is_subtype_of_inter_type: "false" }
      - check_data:
          check_type_I1: "undefined | number | null | bigint"
          check_type_I2: "bigint | string | undefined"
        check_values_groups:
          - check_values_group_data:
            - { check_type_T:  "Object",
                is_subtype_of_inter_type: "false",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "123",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "string",
                is_subtype_of_inter_type: "false",
                check_value_1: "\"abc\"",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "\"defg\"",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "number",
                is_subtype_of_inter_type: "false",
                check_value_1: "123",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "45.6",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "undefined",
                is_subtype_of_inter_type: "true",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "undefined",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "string | undefined",
                is_subtype_of_inter_type: "false",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "\"abc\"",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "Any",
                is_subtype_of_inter_type: "false",
                check_value_1: "5n",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "null",
                check_value_2_is_subtype_of_inter_type: "false" }
            - { check_type_T:  "bigint | null",
                is_subtype_of_inter_type: "false",
                check_value_1: "null",
                check_value_1_is_subtype_of_inter_type: "false",
                check_value_2: "5n",
                check_value_2_is_subtype_of_inter_type: "true" }
            - { check_type_T:  "bigint | undefined",
                is_subtype_of_inter_type: "true",
                check_value_1: "undefined",
                check_value_1_is_subtype_of_inter_type: "true",
                check_value_2: "5n",
                check_value_2_is_subtype_of_inter_type: "true" }
    decl_variants:
      - |-
        function check_value(v: Any,
                            is_subtype_of_inter_type: boolean,
                            v_id: int): void {
          arktest.assertTrue(v instanceof [check_type_T])
          if (v_id == 1) {
            arktest.assertEQ(v as [check_type_T], [check_value_1])
            if (is_subtype_of_inter_type) {
              arktest.assertTrue(v instanceof [check_type_I1] &&
                                v instanceof [check_type_I2])
              arktest.assertEQ(v as [check_type_I1], [check_value_1])
              arktest.assertEQ(v as [check_type_I2], [check_value_1])
            }
          }
          else {
            arktest.assertEQ(v as [check_type_T], [check_value_2])
            if (is_subtype_of_inter_type) {
              arktest.assertTrue(v instanceof [check_type_I1] &&
                                v instanceof [check_type_I2])
              arktest.assertEQ(v as [check_type_I1], [check_value_2])
              arktest.assertEQ(v as [check_type_I2], [check_value_2])
            }
          }
        }
        function check(v: [check_type_T],
                      is_subtype_of_inter_type: boolean,
                      v_id: int): boolean {
          let res: boolean = false
          arktest.assertEQ(v instanceof [check_type_I1] &&
                          v instanceof [check_type_I2],
                          is_subtype_of_inter_type)
          check_value(v, is_subtype_of_inter_type, v_id)
          if (v instanceof [check_type_I1]) {
            check_value(v, is_subtype_of_inter_type, v_id)
            if (v_id == 1) {
              arktest.assertEQ(v as [check_type_I1], [check_value_1])
            }
            else {
              arktest.assertEQ(v as [check_type_I1], [check_value_2])
            }
            res = check_is_in_inter_type(v, is_subtype_of_inter_type, v_id)
            if (!res) {
              arktest.assertFalse(v instanceof [check_type_I2])
              check_is_not_in_I2_type(v, is_subtype_of_inter_type, v_id)
            }
          }
          return res
        }
        function check_is_in_inter_type(v: [check_type_I1],
                                      is_subtype_of_inter_type: boolean,
                                      v_id: int): boolean {
          check_value(v, is_subtype_of_inter_type, v_id)
          if (v_id == 1) {
            arktest.assertEQ(v as [check_type_I1], [check_value_1])
          }
          else {
            arktest.assertEQ(v as [check_type_I1], [check_value_2])
          }
          if (v instanceof [check_type_I2]) {
            arktest.assertTrue(is_subtype_of_inter_type)
            check_value(v, is_subtype_of_inter_type, v_id)
            if (v_id == 1) {
              arktest.assertEQ(v as [check_type_I2], [check_value_1])
            }
            else {
              arktest.assertEQ(v as [check_type_I2], [check_value_2])
            }
            let b: [check_type_I2] = v as [check_type_I2]
            check_value(b, is_subtype_of_inter_type, v_id)
            return true
          }
          else {
            return false
          }
        }
        function check_is_not_in_I2_type(v: Any,
                                        is_subtype_of_inter_type: boolean,
                                        v_id: int): void {
          check_value(v, is_subtype_of_inter_type, v_id)
          arktest.assertFalse(v instanceof [check_type_I2])
          let expectedError = (e: Error): boolean => {
              return (e instanceof Error)
          }
          arktest.expectThrow(() => {
            let b: [check_type_I2] = v as [check_type_I2]
          }, expectedError)
        }
    sub_cases_logic:
      - |-
        let v1: [check_type_T] = [check_value_1]
        let v2: [check_type_T] = [check_value_2]
        let res: boolean =
          check(v1, [check_value_1_is_subtype_of_inter_type], 1) &
          check(v2, [check_value_2_is_subtype_of_inter_type], 2)
        arktest.assertEQ(res, [is_subtype_of_inter_type])
