# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - decl: |-
        let i: I|undefined

        function foo(v: B) {
            if (v instanceof I1 && v instanceof I2) {
                i = v  // I :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(i, c)

    - decl: |-
        let i: I|undefined

        function foo(v: I1) {
            if (v instanceof B && v instanceof I2) {
                i = v  // I :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(i, c)

    - decl: |-
        let i: I|undefined

        function foo(v: I2) {
            if (v instanceof B && v instanceof I1) {
                i = v  // I :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(i, c)

    - decl: |-
        let a: A|undefined

        function foo(v: B) {
            if (v instanceof I1 && v instanceof I2) {
                a = v  // A :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(a, c)

    - decl: |-
        let a: A|undefined

        function foo(v: I1) {
            if (v instanceof B && v instanceof I2) {
                a = v  // A :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(a, c)

    - decl: |-
        let a: A|undefined

        function foo(v: I2) {
            if (v instanceof B && v instanceof I1) {
                a = v  // A :> (B & I1 & I2)
            }
        }
      use: |-
        let c = new C
        foo(c)
        arktest.assertEQ(a, c)
