# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
function_decls:
    # signature identical to the implementation signature
    - decl: |-
          function foo(...p: Any[]): Any // identical to implementation signature
          function foo(...p: Any[]): Any {
              return p.length > 0 ? p.length : null
          }
      call: |-
          arktest.assertTrue(foo() === null)
          arktest.assertEQ(foo(1, 2, 3, 4, 5), 5)
          arktest.assertEQ(foo("", 0, [1, 2], new Object, null, () => {}, foo(), foo("")), 8)

    - decl: |-
          function foo(...p: Any[]): Any // identical to implementation signature
          function foo(...p: Any[]): Any // Duplicate signatures not disallowed
          function foo(...p: Any[]): Any {
              return p.length > 0 ? p.length : null
          }
      call: |-
          arktest.assertTrue(foo() === null)
          arktest.assertEQ(foo(1, 2, 3, 4, 5), 5)
          arktest.assertEQ(foo("", 0, [1, 2], new Object, null, () => {}, foo(), foo("")), 8)

    - decl: |-
          function foo(): string|null
          function foo(...p: Any[]): Any // identical to implementation signature
          function foo(...p: Any[]): Any {
              return p.length > 0 ? p.length : null
          }
      call: |-
          arktest.assertTrue(foo() === null)
          arktest.assertEQ(foo(1, 2, 3, 4, 5), 5)
          arktest.assertEQ(foo("", 0, [1, 2], new Object, null, () => {}, foo(), foo("")), 8)

    - decl: |-
          function foo(...p: Any[]): Any // identical to implementation signature
          function foo(): number|null
          function foo(p: string): never
          function foo(...p: Any[]): Any {
              return p.length > 0 ? p.length : null
          }
      call: |-
          arktest.assertTrue(foo() === null)
          arktest.assertEQ(foo(1, 2, 3, 4, 5), 5)
          arktest.assertEQ(foo("", 0, [1, 2], new Object, null, () => {}, foo(), foo("")), 8)
