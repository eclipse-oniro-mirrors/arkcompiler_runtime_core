# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - call: |-
        arktest.assertEQ(x.foo(vb, 0), "127")
        arktest.assertEQ(x.foo(vs, 0, 0), "32767")
        arktest.assertEQ(x.foo(vi, 0, 0, 0), "42")
        arktest.assertEQ(x.foo(vl, 0, 0, 0, 0), "1000000")
        arktest.assertEQ(x.foo(vf, 0, 0, 0, 0, 0), "1.5")
        arktest.assertEQ(x.foo(vd, 0, 0, 0, 0, 0, 0), "2.5")

        arktest.assertEQ(x.foo(vb, 0, 0), "127")
        arktest.assertEQ(x.foo(vs, 0, 0, 0), "32767")
        arktest.assertEQ(x.foo(vi, 0, 0, 0, 0), "42")
        arktest.assertEQ(x.foo(vl, 0, 0, 0, 0, 0), "1000000")
        arktest.assertEQ(x.foo(vf, 0, 0, 0, 0, 0, 0), "1.5")

        arktest.assertEQ(x.foo(vb, 0, 0, 0), "127")
        arktest.assertEQ(x.foo(vs, 0, 0, 0, 0), "32767")
        arktest.assertEQ(x.foo(vi, 0, 0, 0, 0, 0), "42")
        arktest.assertEQ(x.foo(vl, 0, 0, 0, 0, 0, 0), "1000000")

        arktest.assertEQ(x.foo(vb, 0, 0, 0, 0), "127")
        arktest.assertEQ(x.foo(vs, 0, 0, 0, 0, 0), "32767")
        arktest.assertEQ(x.foo(vi, 0, 0, 0, 0, 0, 0), "42")

        arktest.assertEQ(x.foo(vb, 0, 0, 0, 0, 0), "127")
        arktest.assertEQ(x.foo(vs, 0, 0, 0, 0, 0, 0), "32767")

        arktest.assertEQ(x.foo(vb, 0, 0, 0, 0, 0, 0), "127")

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vs, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vi, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vl, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vf, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vd, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vi, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vl, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vf, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vd, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vl, 0, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vf, 0, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vd, 0, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vf, 0, 0, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vd, 0, 0, 0, 0)

    - tags: 'compile-only, negative'
      call: |-
        x.foo(vd, 0, 0, 0, 0, 0)
