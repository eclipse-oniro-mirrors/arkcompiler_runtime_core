# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF Any KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - decl: |-
          // Signature must be selected from top to bottom
          function foo(p: string): string
          function foo(p: string|number): number
          function foo(p: string|number|boolean): boolean
          function foo(...p: Any[]): Any {
              return p[0]
          }
      call: |-
          let x: string = foo("abc")
          let y: number = foo(42.0)
          let z: boolean = foo(false)
          arktest.assertEQ(x, "abc")
          arktest.assertEQ(y, 42.0)
          arktest.assertEQ(z, false)

    - tags: 'compile-only, negative'
      decl: |-
          function foo(p: string|number): number
          function foo(p: string): string
          function foo(p: string|number|boolean): boolean
          function foo(...p: Any[]): Any {
              return p[0]
          }
      call: |-
          let x: string = foo("abc") // CTE: Cannot assign number to string

    - tags: 'compile-only, negative'
      decl: |-
          function foo(p: string|number|boolean): boolean
          function foo(p: string|number): number
          function foo(p: string): string
          function foo(...p: Any[]): Any {
              return p[0]
          }
      call: |-
          let x: number = foo(42.0) // CTE: Cannot assign boolean to number

    - decl: |-
          function foo(p: string): string
          function foo(p: string, q?: number): number
          function foo(p: string, q?: number, w?: boolean): boolean
          function foo(...p: Any[]): Any {
              return p[p.length - 1] ?? null
          }
      call: |-
          let x: string = foo("abc")
          let y: number = foo("abc", 42.0)
          let z: boolean = foo("abc", 42.0, true)
          arktest.assertEQ(x, "abc")
          arktest.assertEQ(y, 42.0)
          arktest.assertEQ(z, true)

    - tags: 'compile-only, negative'
      decl: |-
          function foo(p: string, q?: number, w?: boolean): boolean
          function foo(p: string, q?: number): number
          function foo(p: string): string
          function foo(...p: Any[]): Any {
              return p[p.length - 1] ?? null
          }
      call: |-
          let x: string = foo("abc") // CTE: Cannot assign boolean to string
