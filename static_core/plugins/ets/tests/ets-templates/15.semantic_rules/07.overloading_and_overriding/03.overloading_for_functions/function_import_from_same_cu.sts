/*---
Copyright (c) 2024 Huawei Device Co., Ltd.
Licensed under the Apache License, Version 2.0 (the "License" );
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
---*/

/*---
desc: >-
    A function can be declared in, or imported to a scope. To prevent uncontrolled overloading, mixing functions that
    are declared and imported, or imported from different compilation units, is not allowed. In particular, a compile-time
    error occurs to same-name functions if:
    • Functions are imported from different compilation units;
    • Some functions are imported, while others are declared.
    It means that only the functions declared in the scope can be overloaded. The semantic check for these functions is as
    follows:
    • If signatures of functions are overload-equivalent, then a compile-time error occurs.
    • Otherwise, overloading is valid.
files:
- ./modules/function_export_all.sts
---*/

import {foo} from "./modules/function_export_all.sts"

function main(): void {
    assertEQ( foo(), 1 );
    assertEQ( foo(true), 2 );
    assertEQ( foo(new Boolean()), 3 );
    assertEQ( foo(c'A'), 4 );
    assertEQ( foo(new Char()), 5 );
    assertEQ( foo(1 as short), 6 );
    assertEQ( foo(new Short()), 7 );
    assertEQ( foo(1 as int), 8 );
    assertEQ( foo(new Int()), 9 );
    assertEQ( foo(1 as long), 10 );
    assertEQ( foo(new Long()), 11 );
    assertEQ( foo(1.1 as float), 12 );
    assertEQ( foo(new Float()), 13 );
}
