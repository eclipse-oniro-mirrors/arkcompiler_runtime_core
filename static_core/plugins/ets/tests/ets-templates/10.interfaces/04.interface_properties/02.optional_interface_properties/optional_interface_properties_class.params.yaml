# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of invalid interface members
cases:
  - doc: Get, no getter/setter identified
    decl: |-
      interface I {
        a?: number
      }

      class A implements I {}

      function main() {
        let i: A = new A()
        arktest.assertEQ(i.a, undefined)
      }

  - doc: Set, no getter/setter identified
    decl: |-
      interface I {
        a?: number
      }

      class A implements I {}

      function main() {
        let res = false
        let i: A = new A()
        try {
          i.a = 2
        } catch (e) {
          arktest.assertEQ(i.a, undefined)
          arktest.assertTrue(e instanceof InvalidStoreAccessError)
          res = true
        }
        arktest.assertTrue(res)
      }

  - doc: Get, getter is configured
    decl: |-
      interface I {
        a?: number
      }

      class A implements I {
        get a(): number | undefined { return 4 }
      }

      function main() {
        let i: A = new A()
        arktest.assertEQ(i.a, 4)
      }

  - doc: Set, getter is configured
    decl: |-
      interface I {
        a?: number
      }

      class A implements I {
        get a(): number | undefined { return 4 }
      }

      function main() {
        let res = false
        let i: A = new A()
        try {
          i.a = 2
        } catch (e) {
          arktest.assertTrue(e instanceof InvalidStoreAccessError)
          res = true
        }
        arktest.assertTrue(res)
      }
