# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
tests:
  - doc: access protected field
    decl: |-
      class A {
        protected x: int = 7
      }
      class B extends A {
        foo(): int {
          return this.x
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(), 7)

  - doc: access protected static field
    decl: |-
      class A {
        protected static x: int = 7
      }
      class B extends A {
        foo(): int {
          return A.x
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(), 7)

  - doc: access protected method
    decl: |-
      class A {
        protected getValue(): int {
          return 1
        }
      }
      class B extends A {
        foo(): int {
          return this.getValue()
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(), 1)

  - doc: access protected static method
    decl: |-
      class A {
        protected static getValue(): int {
          return 1
        }
      }
      class B extends A {
        foo(): int {
          return A.getValue()
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(), 1)

  - doc: access protected getter
    decl: |-
      class A {
        protected _val: int = 0
        protected get val(): int {
          return this._val
        }
      }
      class B extends A {
        foo(i: int): int {
          this._val = i
          return this.val
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(7), 7)

  - doc: access protected static getter
    decl: |-
      class A {
        protected static _val: int = 0
        protected static get val(): int {
          return A._val
        }
        static set val(i: int) {
          A._val = i
        }
      }
      class B extends A {
        foo(): int {
          return A.val
        }
      }
    check: |-
      A.val = 5
      arktest.assertEQ(new B().foo(), 5)

  - doc: access protected setter
    decl: |-
      class A {
        protected _val: int = 0
        protected set val(i: int) {
          this._val = i
        }
      }
      class B extends A {
        foo(i: int): int {
          this.val = i
          return this._val
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(4), 4)

  - doc: access protected static setter
    decl: |-
      class A {
        protected static _val: int = 0
        protected static set val(i: int) {
          A._val = i
        }
      }
      class B extends A {
        foo(i: int): int {
          A.val = i
          return A._val
        }
      }
    check: |-
      arktest.assertEQ(new B().foo(6), 6)
