# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - desc: |-
      >-
        A compile-time error occurs if name of a field declared
        in the body of a class declaration is also used for a method
        of this class with the same static or non-static status.
    check_variants:
      - {member1: "x: int", member2: "x(): int { return 1 }"}
      - {member1: "static x: int", member2: "static x(): int { return 1 }"}
    decl_variants:
      - |-
        class A {
          [member1]
          [member2]
        }
      - |-
        class A {
          [member2]
          [member1]
        }

  - desc: |-
      >-
        A compile-time error occurs if name of a field declared
        in the body of a class declaration is also used for a method
        of this class with the same static or non-static status.
    check_variants:
      - {member1: "x: int", member2: "x(): int { return 1 }"}
      - {member1: "static x: int", member2: "static x(): int { return 1 }"}
    decl_variants:
      - |-
        class A {
          [member1]
        }
        class B extends A {
          [member2]
        }
      - |-
        class A {
          [member2]
        }
        class B extends A {
          [member1]
        }

  - desc: |-
      >-
        A compile-time error occurs if name of a field declared
        in the body of a class declaration is also used for another field
        in the same declaration with the same static or non-static status.
    check_variants:
      - {member1: "x: int", member2: "x: number"}
      - {member1: "static x: int", member2: "static x: number"}
    decl_variants:
      - |-
        class A {
          [member1]
          [member2]
        }
      - |-
        class A {
          [member2]
          [member1]
        }
