# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - desc: |-
      >-
        Checking for implementation interface field by
        field with late initialization and with nullish type.
    check_variants:
      - {type: "Object | null"}
      - {type: "Object | undefined"}
      - {type: "Object | undefined | null"}
      - {type: "Any"}
    decl_variants:
      - |-
        interface I {
          readonly field: [type]
        }
        class A implements I {
          field!: [type]
        }

  - desc: |-
      >-
        Checking for implementation interface field that
        require implementation by field or getter and setter.
    check_variants:
      - {type: "int", check_value: "5"}
      - {type: "double", check_value: "7.3"}
      - {type: "Object | undefined", check_value: "undefined"}
      - {type: "Any", check_value: "5"}
    decl_variants:
      - |-
        interface I {
          field: [type]
        }
        class A implements I {
          readonly field: [type] = [check_value]
        }
      - |-
        interface I {
          field: [type]
        }
        class A implements I {
          readonly field: [type]
          constructor () {
            this.field = [check_value]
          }
        }
