# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # class extension clause negative tests
extension_negative:
  - decl: |- 
      interface I {}
    use: |-
      I
  - decl: |- 
      enum MyEnum { One = 1, Two, Three}
    use: |-
      MyEnum
  - decl: |- 
      enum MyEnum { One = 1, Two, Three}
      type MyEnumType = MyEnum
    use: |-
      MyEnumType
  - decl: |- 
      type MyUnion = string|number|undefined
    use: |-
      MyUnion
  - decl: |- 
      type Foo = () => void
    use: |-
      Foo
  - decl: |- 
      type MyRecord = Record<number,string>
    use: |-
      MyRecord
  - decl: |- 
      type MyAwaited = Awaited<Object>
    use: |-
      MyAwaited
  - decl: |-
      type X = Object | null | undefined  
      type NN = NonNullable<X>
    use: |-
      NN
  - decl: |-
      class A {
        a: int = 1
        b: string = 'a'
      }
      type MyPartial = Partial<A>
    use: |-
      MyPartial
  - decl: |-
      class A {
        a?: int = 1
        b?: string = 'a'
      }
      type MyRequired = Required<A>
    use: |-
      MyRequired
  - decl: |-
      class A {
        a: int = 1
        b: string = 'a'
      }
      type MyReadonly = Readonly<A>
    use: |-
      MyReadonly
  - decl: |- 
      class A<T> {}
    use: |-
      A<T>
  - decl: |- 
      class A<T> {}
    use: |-
      A<?>
  - decl: |- 
      class A<T> {}
    use: |-
      A<_>
  - use: |-
      D
  - decl: |- 
      namespace N {
        export class ND {}
      }
    use: |-
      ND
  - use: |-
      B
