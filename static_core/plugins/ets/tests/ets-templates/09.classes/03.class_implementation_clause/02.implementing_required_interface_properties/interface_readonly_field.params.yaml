# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        readonly f: int = 1
      }
    tags: compile-only
    doc: use readonly parameter form

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        f: int = 1
      }
    tags: compile-only
    doc: extend readonly parameter to writable

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        get f(): int { return 1 }
      }
    tags: compile-only
    doc: utilize parameter by implementing get method

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        set f(i: int) {}
      }
    tags: compile-only, negative
    doc: utilize readonly parameter by implementing set method is not allowed

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        get f(): int { return 1 }
        set f(i: int) {}
      }
    tags: compile-only
    doc: extend readonly parameter to writable by implementing getter and setter

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {
        f: boolean = false
      }
    tags: compile-only, negative
    doc: incorrect field type

  - decl: |-
      interface I {
        readonly f: int
      }
      class C implements I {}
    tags: compile-only, negative
    doc: required property is not initialized
