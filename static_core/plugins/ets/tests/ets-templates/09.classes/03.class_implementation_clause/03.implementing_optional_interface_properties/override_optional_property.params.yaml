# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
interface_props:
  - "n?: number"
  - "n: number|undefined"

cases:
  - decl: |-
     n = 42
    tags: compile-only, negative
    doc: optional property is implemented as non-optional

  - decl: |-
     readonly n = 42
    tags: compile-only, negative
    doc: optional property is implemented as readonly

  - decl: |-
     n: number|undefined = 42
    check: |-
      function main() {
        arktest.assertEQ(new C().n, 42)
      }
    doc: optional property is implemented as union

  - decl: |-
     n: int|number|undefined = 42
    tags: compile-only, negative
    doc: optional property is implemented as extended union

  - decl: |-
     get n(): number|undefined {
       return undefined
     }
    check: |-
      function main() {
        let a: C = new C().n
        arktest.assertEQ(a.n, undefined)
        a.n = 41
        arktest.assertEQ(a.n, 41)
      }
    doc: optional property is implemented as getter

  - decl: |-
     set n(i: number|undefined) {}
    tags: compile-only, negative
    doc: optional property is implemented as setter

  - decl: |-
     get n(): number|undefined {
       return 1
     }
     set n(i: number|undefined) {}
    check: |-
      function main() {
        let a: C = new C().n
        arktest.assertEQ(a.n, 1)
        a.n = 41
        arktest.assertEQ(a.n, 1)
      }
    tags: compile-only
    doc: optional property is implemented as getter and setter
