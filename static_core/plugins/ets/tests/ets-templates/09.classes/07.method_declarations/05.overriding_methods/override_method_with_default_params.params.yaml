# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # form: identifier ':' type '=' expression
  - base_params: "a: int = 2"
    overridden_params: "a: int"
    return_type: int
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should have the same default value */

  - base_params: "a: int = 2"
    overridden_params: "a: int = 2"
    return_type: int
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(), 2)

  - base_params: "a: int = 2"
    overridden_params: "a: int = 2"
    return_type: int
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(5), 5)

  - base_params: "a: int = 2"
    overridden_params: "a: int = 3"
    return_type: int
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should have the same default value */

  - base_params: "a: int"
    overridden_params: "a: int = 3"
    return_type: int
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should not have default value */

  # form: identifier '?' ':' type
  - base_params: "a?: int"
    overridden_params: "a: int | undefined"
    return_type: int | undefined
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should have the same default value */

  - base_params: "a?: int"
    overridden_params: "a?: int"
    return_type: int | undefined
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(), undefined)

  - base_params: "a?: int"
    overridden_params: "a?: int"
    return_type: int | undefined
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(5), 5)

  - base_params: "a: int | undefined"
    overridden_params: "a?: int"
    return_type: int | undefined
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should not have default value */

  # mixed forms
  - base_params: "a?: int"
    overridden_params: "a: int | undefined = undefined"
    return_type: int | undefined
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(), undefined)

  - base_params: "a: int | undefined = undefined"
    overridden_params: "a?: int"
    return_type: int | undefined
    main: |-
      let b: A = new B()
      arktest.assertEQ(b.foo(), undefined)

  - base_params: "a?: int"
    overridden_params: "a: int | undefined = 5"
    return_type: int | undefined
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should have the same default value */

  - base_params: "a: int | undefined = 5"
    overridden_params: "a?: int"
    return_type: int | undefined
    tags: "compile-only, negative"
    main: ""
    expected_error: |-
      /* @@@ label Error TypeError: Method foo(a: Int): Int in B should have the same default value */
