# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
          let a: Long[] = [1, 2, 3, 4,]
          assertTrue( a[0] instanceof Long && a[0] == 1 )

    - use: |-
          let a: Long[] = []
          a = [1, 2, 3,]
          assertTrue( a[0] instanceof Long && a[0] == 1 )

    - use: |-
          let a = [1, 2, 3,] as Long[]
          assertTrue( a[0] instanceof Long && a[0] == 1 )

    - use: |-
          let a: string[][] = [["a"]]
          let b: Object[][] = a
          assertEQ( b[0][0] as string,  "a" )

    - decl: |-
          class A {}
      use: |-
          let a: A[] = [{}]
          assertTrue( a[0] instanceof A )

    - decl: |-
          function sum(p: number[]): number {
              let s: number = 0
              for (let v of p)
                  s += v
              return s
          }
      use: |-
          let a: number[] = [0]
          a = [1, 2, 3]
          assertTrue( a.length == 3 && sum(a) == 6.0 )
          a = [1.1, 2.2, 3.3, 4.4]
          assertTrue( a.length == 4 && sum(a) == 11.0 )
          a = [0, 0]
          assertTrue( a.length == 2 && sum(a) == 0.0 )

    - decl: |-
          function sum(p: Long[]): long {
              let s: long = 0
              for (let v of p)
                  s += v
              return s
          }
      use: |-
          assertEQ( sum([1, 2, 3]),  6 )
          assertEQ( sum([]),  0 )
          assertEQ( sum([0x0f0f0f0f, 0b10110011001, 42, 8 as byte]),  252646618 )

    - decl: |-
          class A {
              foo(p: Object[]): int {
                  let s = 0
                  for (let v of p) {
                      s += v instanceof A ? 1 : 0
                  }
                  return s
              }
          }
      use: |-
          assertEQ( new A().foo([new Object(), new Long(), new Int()]),  0 )
          assertEQ( new A().foo([new A(), new A(), new Object()]),  2 )
          assertEQ( new A().foo(["aaa", new A(), new Object()]),  1 )

