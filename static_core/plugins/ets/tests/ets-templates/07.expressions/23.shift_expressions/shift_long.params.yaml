# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of shift operator on long operands test cases
cases:
  - {
      desc: "Left shift operator",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b1",
      result_value: "0b1010"
    }
  - {
      desc: "Signed right shift operator",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: ">>", 
      ro_type: "long",
      ro_value: "0b1",
      result_value: "0b10"
    }
  - {
      desc: "Unsigned right shift operator",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: ">>>", 
      ro_type: "long",
      ro_value: "0b1",
      result_value: "0b10"
    }
  - {
      desc: "Left shift operator by 0 positions",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b0",
      result_value: "0b101"
    }
  - {
      desc: "Signed right shift operator by 0 positions",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: ">>", 
      ro_type: "long",
      ro_value: "0b0",
      result_value: "0b101"
    }
  - {
      desc: "Unsigned right shift operator by 0 positions",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: ">>>", 
      ro_type: "long",
      ro_value: "0b0",
      result_value: "0b101"
    }
  - {
      desc: "6 bits left shift operator",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b10_0011",
      result_value: "0b0010_1000_0000_0000_0000_0000_0000_0000_0000_0000"
    }
  - {
      desc: "6 bits signed right shift operator",
      lo_type: "long",
      lo_value: "0b0010_1000_0000_0000_0000_0000_0000_0000_0000_0000",
      shift_op: ">>", 
      ro_type: "long",
      ro_value: "0b10_0011",
      result_value: "0b101"
    }
  - {
      desc: "6 bits unsigned right shift operator",
      lo_type: "long",
      lo_value: "0b0010_1000_0000_0000_0000_0000_0000_0000_0000_0000",
      shift_op: ">>>", 
      ro_type: "long",
      ro_value: "0b10_0011",
      result_value: "0b101"
    }
  - {
      desc: "7 bits left shift operator",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b100_0011",
      result_value: "0b0010_1000"
    }
  - {
      desc: "7 bits signed right shift operator",
      lo_type: "long",
      lo_value: "0b0010_1000",
      shift_op: ">>", 
      ro_type: "long",
      ro_value: "0b100_0011",
      result_value: "0b101"
    }
  - {
      desc: "7 bits unsigned right shift operator",
      lo_type: "long",
      lo_value: "0b0010_1000",
      shift_op: ">>>", 
      ro_type: "long",
      ro_value: "0b100_0011",
      result_value: "0b101"
    }
  - {
      desc: "7 bits left shift operator, 0 in 6 lower bits",
      lo_type: "long",
      lo_value: "0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b100_0000",
      result_value: "0b101"
    }
  - {
      desc: "Left shift operator, negative left operand",
      lo_type: "long",
      lo_value: "-0b101",
      shift_op: "<<", 
      ro_type: "long",
      ro_value: "0b1",
      result_value: "-0b1010"
    }
  - {
      desc: "Signed right shift operator, negative left operand",
      lo_type: "long",
      lo_value: "-0b101",
      shift_op: ">>", 
      ro_type: "long",
      ro_value: "0b1",
      result_value: "-0b11"
    }
  - {
      desc: "Unsigned right shift operator, negative left operand",
      lo_type: "long",
      lo_value: "-0b1001",
      shift_op: ">>>", 
      ro_type: "long",
      ro_value: "0b10",
      result_value: "0b0011_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1101"
    }
