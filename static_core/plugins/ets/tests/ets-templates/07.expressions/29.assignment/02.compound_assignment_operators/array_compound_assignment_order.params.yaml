# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - desc: 'Positive case for array'
    array: ''
    index: ''
    value: ''
    main: |-
      getArray()[getIndex(1)] *= getValue(-21)
      arktest.assertEQ(test_array[1], -42)
    assert_result: '"getArray getIndex getValue "'

  - desc: 'Negative case for array. Array reference failed'
    array: |-
      throw new Error("Any error to break assignment")
    index: ''
    value: ''
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getArray()[getIndex(1)] *= getValue(-21) }, expectedException)
      arktest.assertEQ(test_array[1], 2)
    assert_result: '"getArray "'

  - desc: 'Negative case for array. Index reference failed'
    array: ''
    index: |-
      throw new Error("Any error to break assignment")
    value: ''
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getArray()[getIndex(1)] *= getValue(-21) }, expectedException)
      arktest.assertEQ(test_array[1], 2)
    assert_result: '"getArray getIndex "'

  - desc: 'Negative case for array. RHS reference failed'
    array: ''
    index: ''
    value: |-
      throw new Error("Any error to break assignment")
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getArray()[getIndex(1)] *= getValue(-21) }, expectedException)
      arktest.assertEQ(test_array[1], 2)
    assert_result: '"getArray getIndex getValue "'

  - desc: 'Negative case for array. Binary operation failed'
    array: ''
    index: ''
    value: ''
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getArray()[getIndex(1)] /= (2 - getValue(2)) }, expectedException)
      arktest.assertEQ(test_array[1], 2)
    assert_result: '"getArray getIndex getValue "'