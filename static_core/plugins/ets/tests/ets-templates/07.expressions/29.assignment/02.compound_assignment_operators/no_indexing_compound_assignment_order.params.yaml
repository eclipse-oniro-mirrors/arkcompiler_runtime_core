# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - desc: 'Positive case for non-indexing assignment'
    get_object: ''
    value: 'return -2147483648'
    main: |-
      getObj().fld *= getValue()
      arktest.assertEQ(test_object.fld, -2147483648)
    assert_result: '"getObj getValue "'

  - desc: 'Negative case, lhs evaluation completes abruptely'
    get_object: |-
      throw new Error("Any error to break assignment")
    value: 'return -2147483648'
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getObj().fld *= getValue() }, expectedException)
      arktest.assertEQ(test_object.fld, -1)
    assert_result: '"getObj "'

  - desc: 'Negative case, rhs evaluation completes abruptely'
    get_object: ''
    value: |-
      throw new Error("Any error to break assignment")      
      return -2147483648
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof Error) }
      arktest.expectThrow(() => { getObj().fld *= getValue() }, expectedException)
      arktest.assertEQ(test_object.fld, -1)
    assert_result: '"getObj getValue "'

  - desc: 'Negative case, binary operation completes abruptely'
    get_object: ''
    value: |-
      return 2
    main: |-
      let expectedException = (e: Error): boolean => { return (e instanceof ArithmeticError) }
      arktest.expectThrow(() => { getObj().fld /= (2 - getValue()) }, expectedException)
      arktest.assertEQ(test_object.fld, -1)
    assert_result: '"getObj getValue "'