/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{% from "16.concurrency/03.asynchronous_api/async_api_helper.jinja" import generate_async, call_async %}

{% macro generate_complete_test(declaration_type='function') %}

{% set literal_name = '"Hello"' %}

 /*---
 desc: The return type of an async {{declaration_type}} must be Promise<{{literal_name}}>.
 ---*/

{% set async_body %}
    const value: {{literal_name}} = {{literal_name}}
    return value
{% endset %}

{% set params = {
    'name': 'noParams',
    'body': async_body,
    'return_type': ': Promise<' + literal_name + '>',
    'class_name': 'AsyncMethodReturnClass'
} %}

{{ generate_async(declaration_type, params) }}

async function startTest(){
    let result = {{ call_async(declaration_type, params) }}
    arktest.assertTrue(result instanceof Promise)
    let awaited_result = await result
    arktest.assertTrue(awaited_result instanceof {{literal_name}})
    arktest.assertEQ(awaited_result, {{literal_name}})
}

function main(){
    waitForCompletion(startTest)
}

{% endmacro %}