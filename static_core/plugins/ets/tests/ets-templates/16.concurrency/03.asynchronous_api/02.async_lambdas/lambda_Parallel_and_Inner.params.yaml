# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - decl: |-
          async function ethalonAsyncFunc(): Promise<string> {
              return "test"
          }
      use: |-
          //check concurrent lambda with classic async function
          const lambdaFunc = async (): Promise<string> => Promise.resolve('result')
          const promises: Promise<String> [] = [ethalonAsyncFunc(), lambdaFunc()]
                
          const result: string = (await Promise.all(promises)).join(' ')
          arktest.assertEQ("test result", result)
          
          //check inner lambda 
          const lambdaFunc2 = async (data: string): Promise<string> => {
                return new Promise<String>((resolve) => {
                    resolve(`${data}`);
            });
          };

          arktest.assertEQ("test result", await lambdaFunc2("test result"))