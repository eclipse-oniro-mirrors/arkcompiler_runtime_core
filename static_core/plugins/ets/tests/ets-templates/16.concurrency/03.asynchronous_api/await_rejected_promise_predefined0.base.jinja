/**
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{% macro generate_complete_test(cases) %}
{% for c in cases %}
{% for type_name in [c.type, c.alias] | select %}

/*---
desc: Test to wait for already rejected Promise<{{type_name}}>.
---*/

const value: {{type_name}} = {{c.value}}
const errorText = `Early fail promise with value ${value}`

async function startTest() {
    const rejectedPromise = Promise.reject<{{type_name}}>(new Error(errorText));
    try {
        await rejectedPromise;
        arktest.assertTrue(false, "Should have thrown");
    } catch (e) {
        arktest.assertEQ(e.message, errorText, "Incorrect promise.reject error message");
    }
}

function main() {
    waitForCompletion(startTest); 
}
{% endfor %}
{% endfor %}
{% endmacro %}