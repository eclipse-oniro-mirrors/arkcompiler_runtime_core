# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of valid break statements
break_statements:
  - use: |
        let i = 2;
        while (i > 0) {
          break;
        }
        arktest.assertEQ(i, 2)
  - use: |
        let i = 2;
        for (;;) {
          break;
        }
        arktest.assertEQ(i, 2)
  - use: |
        let i = 0
        for (let ch of "string") {
          i++
          break;
        }
        arktest.assertEQ(i, 1)
  - use: |
        let i = 2;
        for (;;) {
          if (true) { break; }
        }
        arktest.assertEQ(i, 2)
  - use: |
        let i = 2;
          while (i > 0) {
            break;
            i--;
          }
        arktest.assertEQ(i, 2)

  - use: |
      let flowCounter: int = 0
      outer: do {
          do {
            break
          } while(true)
          flowCounter++
          do {
            break outer
          } while(true)
          flowCounter++
          break outer
      } while(true)
  
      arktest.assertEQ(1, flowCounter)

  - use: |
      let flowCounter: int = 0
      outer: do {
          do {
            break
          } while(true)
          flowCounter++
          do {
            break
          } while(true)
          flowCounter++
          break outer
      } while(true)
      
      arktest.assertEQ(2, flowCounter)

  - use: |
      let i = 0
      for (let ch of "string") {
        i++
        if(ch == 'i' ) break
      }
      arktest.assertEQ(i, 4)


  - use: |
      let i = 0
      breakToMe: for (let ch of "string") {
        i++
        if(ch == 'i' ) break breakToMe
      }
      arktest.assertEQ(i, 4)

  - use: |
      let flowCounter: int = 0
      outer: do {
          do {
            break
          } while(true)
          flowCounter++
          do {
            break outer
          } while(true)
          flowCounter++
          break outer
      } while(true)
  
      arktest.assertEQ(1, flowCounter)

  - use: |
      let flowCounter: int = 0
      outer: do {
          do {
            break
          } while(true)
          flowCounter++
          do {
            break
          } while(true)
          flowCounter++
          break outer
      } while(true)
      
      arktest.assertEQ(2, flowCounter)
