# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # nothing to catch
  - defs: |-
      class Er extends Error {}

    use: |-
      let err: Er = new Er();
      try {
          if (1 == 2) throw err;
          return;
      } catch (e) {
          arktest.assertTrue(false, 'Error not expected')
      }

  # catch Error
  - defs: |-
      class Er extends Error {}

    use: |-
      let err: Er = new Er();
      try {
          if (1 != 2) throw err;
          arktest.assertTrue(false, 'Error expected')
      } catch (e) {
          arktest.assertEQ(e, err)
      }

  # check passed value for error
  - defs: |-
      class BaseError extends Error {}

      class Er extends Error {
        constructor(message?: String, options?: ErrorOptions) {
            super("Er", message, options)
        }
      }

    use: |-
      let cause = new BaseError();
      let err: Er = new Er('msg', new ErrorOptions(cause));
      try {
          if (1 != 2) throw err;
      } catch (e) {
          arktest.assertEQ(e, err)
          arktest.assertEQ(e.cause, cause)
          arktest.assertEQ(e.message, 'msg')
          return
      }
      arktest.assertTrue(false, 'Error err expected')
