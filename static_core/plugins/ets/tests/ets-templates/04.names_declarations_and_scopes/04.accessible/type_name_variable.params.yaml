# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # Primitives
  - decl: |-
        type T = byte
    check: |-
        function main() {
            let a: T = 0x80 as byte; // -128
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 1);
=======
            arktest.assertEQ(foo(a), 1);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = short
    check: |-
        function main() {
            let a: T = 0x7FFF as short; // 32767
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 2);
=======
            arktest.assertEQ(foo(a), 2);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = int
    check: |-
        function main() {
            let a: T = 127 as int;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 3);
=======
            arktest.assertEQ(foo(a), 3);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = long
    check: |-
        function main() {
            let a: T = 127 as long;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 4);
=======
            arktest.assertEQ(foo(a), 4);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = float
    check: |-
        function main() {
            let a: T = -0.0 as float;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 5);
=======
            arktest.assertEQ(foo(a), 5);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = double
    check: |-
        function main() {
            let a: T = -0.0 as double;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 6); // double is an alias to number
=======
            arktest.assertEQ(foo(a), 6); // double is an alias to number
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = number
    check: |-
        function main() {
            let a: T = -0.0 as number;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 6);
=======
            arktest.assertEQ(foo(a), 6);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = char
    check: |-
        function main() {
            let a: T = c'a';
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 7);
=======
            arktest.assertEQ(foo(a), 7);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = boolean
    check: |-
        function main() {
            let a: T = true;
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 8);
=======
            arktest.assertEQ(foo(a), 9);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  # Boxed
  - decl: |-
        type T = Byte
    check: |-
        function main() {
            let a: T = new Byte(0x7F as byte);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 11);
=======
            arktest.assertEQ(foo(a), 1);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Short
    check: |-
        function main() {
            let a: T = new Short(2 as short);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 12);
=======
            arktest.assertEQ(foo(a), 2);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Int
    check: |-
        function main() {
            let a: T = new Int(3 as int);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 13);
=======
            arktest.assertEQ(foo(a), 3);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Long
    check: |-
        function main() {
            let a: T = new Long(4 as long);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 14);
=======
            arktest.assertEQ(foo(a), 4);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Float
    check: |-
        function main() {
            let a: T = new Float(0.1 as float);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 15);
=======
            arktest.assertEQ(foo(a), 5);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Double
    check: |-
        function main() {
            let a: T = new Double(0.1 as double);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 16); // Double is an alias to Number
=======
            arktest.assertEQ(foo(a), 6); // Double is an alias to Number
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Number
    check: |-
        function main() {
            let a: T = new Number(0.1 as number);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 16);
=======
            arktest.assertEQ(foo(a), 6);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Char
    check: |-
        function main() {
            let a: T = new Char(c'b');
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 17);
=======
            arktest.assertEQ(foo(a), 7);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = string
    check: |-
        function main() {
            let a: T = "some string";
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 18); // string is an alias to String
=======
            arktest.assertEQ(foo(a), 8); // string is an alias to String
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = String
    check: |-
        function main() {
            let a: T = new String("some string");
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 18);
=======
            arktest.assertEQ(foo(a), 8);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = Boolean
    check: |-
        function main() {
            let a: T = new Boolean(false);
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 19);
=======
            arktest.assertEQ(foo(a), 9);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

    # Custom
  - decl: |-
        type T = FixedArray<int>
    check: |-
        function main() {
            let a: T = [1, -2];
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 21);
=======
            arktest.assertEQ(foo(a), 21);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - decl: |-
        type T = FixedArray<FixedArray<Int>>
    check: |-
        function main() {
            let a: T = [[new Int(1)], [new Int(-2)]];
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 22);
=======
            arktest.assertEQ(foo(a), 22);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }

  - check: |-
        function main() {
            let a: TPL = [1.4, "str"];
<<<<<<< HEAD:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/05.accessible/type_name_variable.params.yaml
            assertEQ(foo(a), 24);
=======
            arktest.assertEQ(foo(a), 24);
>>>>>>> OpenHarmony_feature_20250328:static_core/plugins/ets/tests/ets-templates/04.names_declarations_and_scopes/04.accessible/type_name_variable.params.yaml
        }
