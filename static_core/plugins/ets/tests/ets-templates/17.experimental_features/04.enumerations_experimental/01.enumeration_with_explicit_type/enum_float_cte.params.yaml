# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - desc: |-
      Not a constant expression
    decl_variants:
      - |-
        const a: float = 1.5f
        const b: float = 6.7f
        let c: float = 8.9f
        enum Enum: float { first = a, second = b, third = c }
      - |-
        const a: float = 1.5f
        const b: float = 6.7f
        let c: float = 8.9f
        const enum Enum: float { first = a, second = b, third = c }
      - |-
        enum Enum1: float { first = 42.32f, second = 1.7f }
        enum Enum2: float { first = Enum1.first.valueOf(), second = 1.7f }
      - |-
        const enum Enum1: float { first = 42.32f, second = 1.7f }
        const enum Enum2: float { first = Enum1.first.valueOf(), second = 1.7f }

  - desc: |-
      >-
        Enumeration constant has no value and explicit type
        is not an integer type.
    decl_variants:
      - |-
        enum Enum: float { first = 1.2f, second = 3.4f, third }
      - |-
        const enum Enum: float { first = 1.2f, second = 3.4f, third }

  - desc: |-
      Wrong init type
    decl_variants:
      - |-
        enum Enum: float { first = "A" }
      - |-
        const enum Enum: float { first = "A" }
      - |-
        enum Enum: float { first = 1.5f, second = "A" }
      - |-
        const enum Enum: float { first = 1.5f, second = "A" }
      - |-
        enum Enum: float { first = false }
      - |-
        const enum Enum: float { first = false }
      - |-
        enum Enum: float { first = 1.7f, second = false }
      - |-
        const enum Enum: float { first = 1.7f, second = false }

  - desc: |-
      >-
        The target type is float, the evaluated result type
        is double and the value of the expression doesn't fits into
        the range of type float.
    decl_variants:
      - |-
        enum Enum: float { first = 1.7976931348623157e+308 }
      - |-
        const enum Enum: float { first = 1.7976931348623157e+308 }
      - |-
        enum Enum: float { first = 1.5f,
          second = 1.7976931348623157e+308 }
      - |-
        const enum Enum: float { first = 1.5f,
          second = 1.7976931348623157e+308 }

  - desc: |-
      Wrong type
    decl_variants:
      - |-
        enum Enum1: float { first = 42.32f, second = 3.4f }
        enum Enum2: float { first = 42.32f, second = 3.4f }
      - |-
        const enum Enum1: float { first = 42.32f, second = 3.4f }
        const enum Enum2: float { first = 42.32f, second = 3.4f }
    logic: |-
      let v: Enum2 = Enum1.first

  - desc: |-
      Not allowed conversion
    decl_variants:
      - |-
        enum Enum1: float { first = -1.4f, second = -42.32f }
        enum Enum2: float { first = -1.4f, second = -42.32f }
      - |-
        const enum Enum1: float { first = -1.4f, second = -42.32f }
        const enum Enum2: float { first = -1.4f, second = -42.32f }
    logic: |-
      let v: Enum1 = Enum1.first
      let q: Enum2 = v as Enum2
