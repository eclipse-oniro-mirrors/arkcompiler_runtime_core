# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - desc: |-
      A double value for enumeration constants must be set explicitly
    decl_variants:
      - |-
        enum Enum: double { first = 1.1, second = 1.2,
          third = 1.3 }
      - |-
        const enum Enum: double { first = 1.1, second = 1.2,
          third = 1.3 }
    sub_cases_logic:
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ(Enum.first.valueOf(), 1.1)
        arktest.assertEQ(Enum.second.valueOf(), 1.2)
        arktest.assertEQ(Enum.third.valueOf(), 1.3)

  - desc: |-
      A double value for enumeration constants must be set explicitly
    decl_variants:
      - |-
        enum Enum: double { first = 10e1, second = 1.2,
          third = 1.1 }
      - |-
        const enum Enum: double { first = 10e1, second = 1.2,
          third = 1.1 }
    sub_cases_logic:
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ(Enum.first.valueOf(), 100)
        arktest.assertEQ(Enum.second.valueOf(), 1.2)
        arktest.assertEQ(Enum.third.valueOf(), 1.1)

  - desc: |-
      A double value for enumeration constants must be set explicitly
    decl_variants:
      - |-
        enum Enum: double { first = 1.7976931348623155e+308,
          second = 1.7976931348623157e+308 }
      - |-
        const enum Enum: double { first = 1.7976931348623155e+308,
          second = 1.7976931348623157e+308 }
    sub_cases_logic:
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertEQ(Enum.first.valueOf(), 1.7976931348623155e+308)
        arktest.assertEQ(Enum.second.valueOf(), 1.7976931348623157e+308)

  - desc: |-
      A double value for enumeration constants must be set explicitly
    decl_variants:
      - |-
        const a: double = 1.23
        const b: double = 1.234
        enum Enum: double { first = a, second = b, third = b - 1.1 }
      - |-
        const a: double = 1.23
        const b: double = 1.234
        const enum Enum: double { first = a, second = b, third = b - 1.1 }
    sub_cases_logic:
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ(Enum.first.valueOf(), a)
        arktest.assertEQ(Enum.second.valueOf(), b)
        arktest.assertEQ(Enum.third.valueOf(), b - 1.1)

  - desc: |-
      Using in string operator contexts
    decl_variants:
      - |-
        enum Enum: double { first = -1.1, second = -1.2, third = -42.43 }
      - |-
        const enum Enum: double { first = -1.1, second = -1.2, third = -42.43 }
    sub_cases_logic:
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ("_" + Enum.first, "_-1.1")
        arktest.assertEQ("_" + Enum.second, "_-1.2")
        arktest.assertEQ("_" + Enum.third, "_-42.43")
      - |-
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ(Enum.first + "_", "-1.1_")
        arktest.assertEQ(Enum.second + "_", "-1.2_")
        arktest.assertEQ(Enum.third + "_", "-42.43_")

  - desc: |-
      >-
        A value of enumeration type with an explicitly declared
        type of constants is converted to the declared type.
        This conversion never causes a runtime error.
    decl_variants:
      - |-
        enum Enum: double { first = -1.1, second = -1.2,
          third = -42.43 }
      - |-
        const enum Enum: double { first = -1.1, second = -1.2,
          third = -42.43 }
    sub_cases_logic:
      - |-
        let v1: double = Enum.first
        let v2: double = Enum.second
        let v3: double = Enum.third
        arktest.assertTrue(Enum.first instanceof Enum)
        arktest.assertTrue(Enum.second instanceof Enum)
        arktest.assertTrue(Enum.third instanceof Enum)
        arktest.assertTrue(Enum.first.valueOf() instanceof double)
        arktest.assertTrue(Enum.second.valueOf() instanceof double)
        arktest.assertTrue(Enum.third.valueOf() instanceof double)
        arktest.assertEQ(Enum.first.valueOf(), -1.1)
        arktest.assertEQ(Enum.second.valueOf(), -1.2)
        arktest.assertEQ(Enum.third.valueOf(), -42.43)
        arktest.assertEQ(v1, -1.1)
        arktest.assertEQ(v2, -1.2)
        arktest.assertEQ(v3, -42.43)
