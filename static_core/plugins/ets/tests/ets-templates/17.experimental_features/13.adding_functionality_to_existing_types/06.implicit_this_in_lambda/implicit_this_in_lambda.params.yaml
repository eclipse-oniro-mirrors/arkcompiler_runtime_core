# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |
      class A {
        foo(): int { return 0 }
      }
      function f(context: (this: A) => void) { context(new A()) }
      f((this: A): void => {
        arktest.assertEQ(this.foo(), 0)
      })
  - decl: |
      class A {
        foo(): int { return 0 }
      }
      function f(context: (this: A) => void) { context(new A()) }
      f((this: A): void => {
        arktest.assertEQ(foo(), 0)
      })
  - decl: |
      class A {
        m: int = 0
      }
      function f(context: (this: A) => void) { context(new A()) }
      f((this: A): void => {
        arktest.assertEQ(this.m, 0)
      })
  - decl: |
      class A {
        m: int = 0
      }
      function f(context: (this: A) => void) { context(new A()) }
      f((this: A): void => {
        arktest.assertEQ(m, 0)
      })
  - decl: |
      class A {
        m: int = 0
      }
      function f(context: (this: A) => void) { context(new A()) }
      f() {
        arktest.assertEQ(m, 0)
      }
  - decl: |
      class A {
        m: int = 0
      }
      function f(context: (this: A) => void) { context(new A()) }
      f() {
        arktest.assertEQ(this.m, 0)
      }
  - decl: |
      class A {
        foo(): int { return 0 }
      }
      function f(context: (this: A) => void) { context(new A()) }
      f() {
        arktest.assertEQ(foo(), 0)
      }
  - decl: |
      class A {
        foo(): int { return 0 }
      }
      function f(context: (this: A) => void) { context(new A()) }
      f() {
        arktest.assertEQ(this.foo(), 0)
      }