# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
          let v: number[] = new number[false]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[] = new number[true]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[] = new number[new Object()]   // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[] = new number[new Error()]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[][] = new number[null][undefined]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[][] = new number[new Boolean(false)][1]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[][] = new number["abc"]["def"]   // CTE: dimension is not assignable to int type

    - decl: |-
          let size: int|short = 42 as short
      use: |-
          let v = new Object[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: BigInt = new BigInt(1n)
      use: |-
          let v: number[] = new number[size]   // CTE: dimension is not assignable to int type

    - decl: |-
          let size: bigint = 1n
      use: |-
          let v: number[] = new number[size]  // CTE: dimension is not assignable to int type

    - use: |-
          let v: number[][][] = new number[2][2][-1]  // CTE: constant expression, negative value

    - decl: |-
          const size: int = -10
      use: |-
          let v: number[][] = new number[size][-size]  // CTE: constant expression, negative value

    - decl: |-
          let size: Long = new Long(1 as long)
      use: |-
          let v: Byte[] = new Byte[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: long = 1
      use: |-
          let v: byte[] = new byte[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: Number = new Number(1.0)
      use: |-
          let v: Byte[] = new Byte[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: number = 1.0
      use: |-
          let v: string[] = new string[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: Float = new Float(1.0f)
      use: |-
          let v: Byte[] = new Byte[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          let size: float = 1.0f
      use: |-
          let v: Object[] = new Object[size]  // CTE: dimension is not assignable to int type

    - decl: |-
          // enum constants of string type
          enum Color { Red = 'r', Green = 'g', Blue = 'b' }
      use: |-
          let v: string[][] = new string[Color.Green][Color.Blue]  // CTE: dimension is not assignable to int type

    - decl: |-
          // enum constants of long type
          enum Color { Red = 9223372036854775807, Green = 9223372036854775806, Blue = 9223372036854775805 }
      use: |-
          let v: string[][] = new string[Color.Green][Color.Blue]  // CTE: dimension is not assignable to int type

    - decl: |-
          // enum constants of float type
          enum Color: float { Red = 1.0f, Green = 2.0f, Blue = 3.0f }
      use: |-
          let v: string[][] = new string[Color.Green][Color.Blue]  // CTE: dimension is not assignable to int type

    - decl: |-
          // enum constants of double type
          enum Color: double { Red = 1.0, Green = 2.0, Blue = 3.0 }
      use: |-
          let v: string[][] = new string[Color.Green][Color.Blue]  // CTE: dimension is not assignable to int type
