# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |-
      interface I<F, G> {
          foo1(i: F) {}
          foo2(j: G) {}
          overload foo { foo1, foo2 }
      }
      class A<F,G> implements I<F,G> {}
    call: |-
      new A<String, Number>();

  - decl: |-
      interface I<F> {
          foo1(i: F) {}
          foo2(j: Number) {}
          overload foo { foo1, foo2 }
      }
      class A<F> implements I<F> {}
    call: |-
      new A<Byte>();

  - decl: |-
      class G<T> {}
      interface I<T> {
          foo1(i: G<T>) {}
          foo2(j: G<Number>) {}
          overload foo { foo1, foo2 }
      }
      class A<T> implements I<T> {}
    call: |-
      new A<Boolean>();

  - decl: |-
      interface I {
          foo1(j: String) {}
          foo2(i: string) {}
          overload foo { foo1, foo2 }
      }
      class A implements I {}
    call: |-
      new A();

  - decl: |-
      interface I {
          foo1(j: number) {}
          foo2(i: double) {}
          overload foo { foo1, foo2 }
      }
      class A implements I {}
    call: |-
      new A();

  - decl: |-
      interface I {
          foo1(j: Number) {}
          foo2(i: Double) {}
          overload foo { foo1, foo2 }
      }
      class A implements I {}
    call: |-
      new A();
