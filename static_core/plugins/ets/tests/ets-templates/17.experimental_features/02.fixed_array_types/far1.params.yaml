# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - decl: |-
          let x: FixedArray<byte>
      use: |-
          x = [0x80.toByte(), 0x7f.toByte()]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<byte>
          let v: byte = arr[0]
          arr[1] = (arr[1] + v).toByte()
          arktest.assertEQ(arr[1], -1)

    - decl: |-
          let x: FixedArray<short>
      use: |-
          x = [0x8000.toShort(), 0x7fff.toShort()]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<short>
          let v: short = arr[0]
          arr[1] = (arr[1] + v).toShort()
          arktest.assertEQ(arr[1], -1)

    - decl: |-
          let x: FixedArray<int>
      use: |-
          x = [0x80000000, 0x7fffffff]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<int>
          let v: int = arr[0]
          arr[1] = arr[1] + v
          arktest.assertEQ(arr[1], -1)

    - decl: |-
          let x: FixedArray<long>
      use: |-
          x = [0x8000000000000000, 0x7fffffffffffffff]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<long>
          let v: long = arr[0]
          arr[1] = (arr[1] + v).toLong()
          arktest.assertEQ(arr[1], -1)

    - decl: |-
          let x: FixedArray<float>
      use: |-
          x = [1.0f, 2.0f]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<float>
          let v: float = arr[0]
          arr[1] = (arr[1] + v).toFloat()
          arktest.assertEQ(arr[1], 3.0f)

    - decl: |-
          let x: FixedArray<number>
      use: |-
          x = [1.0, 2.0]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<number>
          let v: number = arr[0]
          arr[1] = arr[1] + v
          arktest.assertEQ(arr[1], 3.0)

    - decl: |-
          let x: FixedArray<string>
      use: |-
          x = ['a', 'b']
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<string>
          let v: string = arr[0]
          arr[1] = arr[1] + v
          arktest.assertEQ(arr[1], 'ba')

    - decl: |-
          let x: FixedArray<char>
      use: |-
          x = [c'a', c'b']
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<char>
          let v: char = arr[0]
          arr[1] = (arr[1].toInt() + v.toInt()).toChar()
          arktest.assertEQ(arr[1], 195)

    - decl: |-
          let x: FixedArray<boolean>
      use: |-
          x = [true, false]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<boolean>
          let v: boolean = arr[0]
          arr[1] = arr[1] & v
          arktest.assertEQ(arr[1], false)

    - decl: |-
          let x: FixedArray<bigint>
      use: |-
          x = [1n, 2n]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<bigint>
          let v: bigint = arr[0]
          arr[1] = arr[1] + v
          arktest.assertEQ(arr[1], 3n)

    - decl: |-
          let x: FixedArray<FixedArray<bigint>>
      use: |-
          x = [[1n, 2n], [3n, 4n]]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<Object>
          let arr0: FixedArray<bigint> = arr[0] as FixedArray<bigint>
          let arr1: FixedArray<bigint> = arr[1] as FixedArray<bigint>
          arktest.assertEQ(arr0[0] + arr0[1] + arr1[0] + arr1[1], 10n)
          arr0[0] = 11n
          arktest.assertEQ(arr0[0] + arr0[1] + arr1[0] + arr1[1], 20n)

    - decl: |-
          let x: FixedArray<FixedArray<boolean>>
      use: |-
          x = [[true, false], [false, true]]
          let obj: Object = toObj(x)
          let arr = obj as FixedArray<FixedArray<boolean>>
          arktest.assertEQ((arr[0][0] & arr[0][1] | arr[1][0] & arr[1][1]), false)
          arr[0][1] = true
          arktest.assertEQ((arr[0][0] & arr[0][1] | arr[1][0] & arr[1][1]), true)
