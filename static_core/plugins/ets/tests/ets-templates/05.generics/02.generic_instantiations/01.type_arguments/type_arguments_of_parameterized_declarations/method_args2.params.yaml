# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # type argument is class
  - use: |-
      let v = new X()
      arktest.assertEQ(a.meth <X> (new X(), v), v)

  - use: |-
      let v = new Y<X>()
      arktest.assertEQ(a.meth <X> (new X(), v), v)
    bound: ' extends X'

  - use: |-
      arktest.assertEQ(a.meth <X|null> (new X(), null), null)

  - use: |-
      arktest.assertEQ(a.meth <Y<X>|null> (new X(), null), null)
    bound: ' extends Object|null'

  # type argument is interface
  - use: |-
      let v: I = new X()
      arktest.assertEQ(a.meth <I> (v, v), v)

  - use: |-
      let v: I = new Y<X>()
      arktest.assertEQ(a.meth <I> (new X(), v), v)
    bound: ' extends Object'

  # type argument is array of classes, interfaces, enums
  - use: |-
      let v = new X[0]
      arktest.assertEQ(a.meth <X[]> (new X(), v), v)

  - use: |-
      let v: Color[] = [Color.Red]
      arktest.assertEQ(a.meth <Color[]> (new X(), v), v)
    bound: ' extends Object'

  # type argument is alias
  - use: |-
      let v = new X()
      arktest.assertEQ(a.meth <B> (new X(), v), v)
    decl: |-
      type B = X

  - use: |-
      let v: B = null as B
      arktest.assertEQ(a.meth <B> (new X(), v), v)
    decl: |-
      type B = X|null
    bound: ' extends I|null'

  - use: |-
      let v: I = new X()
      arktest.assertEQ(a.meth <B> (v, v), v)
    decl: |-
      type B = I

  - use: |-
      let v = new X[0]
      arktest.assertEQ(a.meth <B> (new X(), v), v)
    decl: |-
      type B = X[]|null

  - use: |-
      let v: X|null = null
      arktest.assertEQ(a.meth <B> (new X(), v), v)  // X|null is not Y|null
    decl: |-
      type B = string|null
    bound: ' extends Object|null'
