# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # predefined value types: double, float, long, int, short, byte, boolean, char
  # new object
  - decl: |-
      let v = new A<double>
      function foo (p: A<int>) {}

  - decl: |-
      let v = new A<float>

  - decl: |-
      let v = new A<long>

  - decl: |-
      let v = new A<int>

  - decl: |-
      let v = new A<short>

  - decl: |-
      let v = new A<byte>

  - decl: |-
      let v = new A<boolean>

  - decl: |-
      let v = new A<char>

  # declare object
  - decl: |-
        let a: A<double>|undefined

  - decl: |-
      let a: A<float>|undefined

  - decl: |-
      let a: A<long>|undefined

  - decl: |-
      let a: A<int>|undefined

  - decl: |-
      let a: A<short>|undefined

  - decl: |-
      let a: A<byte>|undefined

  - decl: |-
      let a: A<boolean>|undefined

  - decl: |-
      let a: A<char>|undefined

  # declare function
  - decl: |-
      function foo (p: A<double>) {}

  - decl: |-
      function foo (p: A<float>) {}

  - decl: |-
      function foo (p: A<long>) {}

  - decl: |-
      function foo (p: A<int>) {}

  - decl: |-
      function foo (p: A<short>) {}

  - decl: |-
      function foo (p: A<byte>) {}

  - decl: |-
      function foo (p: A<boolean>) {}

  - decl: |-
      function foo (p: A<char>) {}

  # Class method with return value of interest
  # new object
  - decl: |-
      let v = new B<double>
      function foo (p: B<int>) {}

  - decl: |-
      let v = new B<float>

  - decl: |-
      let v = new B<long>

  - decl: |-
      let v = new B<int>

  - decl: |-
      let v = new B<short>

  - decl: |-
      let v = new B<byte>

  - decl: |-
      let v = new B<boolean>

  - decl: |-
      let v = new B<char>

  # declare object
  - decl: |-
      let a: B<double>|undefined

  - decl: |-
      let a: B<float>|undefined

  - decl: |-
      let a: B<long>|undefined

  - decl: |-
      let a: B<int>|undefined

  - decl: |-
      let a: B<short>|undefined

  - decl: |-
      let a: B<byte>|undefined

  - decl: |-
      let a: B<boolean>|undefined

  - decl: |-
      let a: B<char>|undefined

  # declare function
  - decl: |-
      function foo (p: B<double>) {}

  - decl: |-
      function foo (p: B<float>) {}

  - decl: |-
      function foo (p: B<long>) {}

  - decl: |-
      function foo (p: B<int>) {}

  - decl: |-
      function foo (p: B<short>) {}

  - decl: |-
      function foo (p: B<byte>) {}

  - decl: |-
      function foo (p: B<boolean>) {}

  - decl: |-
      function foo (p: B<char>) {}
