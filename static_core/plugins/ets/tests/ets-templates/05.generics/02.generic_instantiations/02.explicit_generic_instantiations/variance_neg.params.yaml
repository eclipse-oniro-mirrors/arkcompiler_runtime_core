# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # covariant/contravariant cases, subtyping of functions
    - use: |-
        let cls = new Cls<Derived>(new Base())
    - use: |-
        let cls = new Cls<fooSubtype>(fooBase)
    - use: |-
        let cls = new Cls<[Derived, fooBaseType]>([new Base(), fooBase])
    - use: |-
        let cls = new Cls<[Derived, fooSubtypeType]>([new Derived(), fooBase])
    - use: |-
        let cls = new Cls<FixedArray<Derived>>([new Base()])
    - use: |-
          let cls = new Cls<Derived | fooBaseType>(new Base())
    - use: |-
          let cls = new Cls<Base | fooSubtypeType>(fooBase)
    - use: |-
          let cls = new Cls<Array<Derived>>([new Base()])
    - use: |-
          let cls = new Cls<Array<fooSubtypeType>>([fooBase])
    - use: |-
          let cls = new Cls<Derived[]>([new Base()])
    - use: |-
          let cls = new Cls<fooSubtypeType[]>([fooBase])
