/**
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class ChainCalculator {
  private result: number;

  constructor(initialValue: number) {
    this.result = initialValue;
  }

  add(value: number): ChainCalculator {
    this.result += value;
    return this;
  }

  subtract(value: number): ChainCalculator {
    this.result -= value;
    return this;
  }

  multiply(value: number): ChainCalculator {
    this.result *= value;
    return this;
  }

  divide(value: number): ChainCalculator {
    EtsStepArkTest();
    if (value === 0) {
      throw new Error("Division by zero is not allowed.");
    }
    this.result /= value;
    return this;
  }

  getResult(): number {
    return this.result;
  }

  geFinalResult(addValue: number, subtractValue: number, multiplyValue: number, divideValue: number): number {
    return chainCalc.add(addValue).subtract(subtractValue).multiply(multiplyValue).divide(divideValue).getResult()
  }
}

const chainCalc = new ChainCalculator(10);
chainCalc.geFinalResult(2, 4, 6, 3);
