/*
 * Copyright (c) 2023-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { launch } from "std/concurrency"

type L = StdDebug.Logger

function body(): Object {
    return new Object();
}

function testLaunchOOM(): void {
    try {
        const veryBigNumberOfCoroutines: int = 500000000;
        for (let i = 0; i < veryBigNumberOfCoroutines; ++i) {
            launch<Object, () => Object>(body);
        }
    } catch (e) {
        if (e instanceof CoroutinesLimitExceedError) {
            L.log('Successfully caught: ' + e);
            return;
        } else {
            arktest.assertTrue(false, 'Wrong exception thrown: ' + e);
            return;
        }
    }
    arktest.assertTrue(false, 'No exception thrown but should be!');
}

function main(): int {
    let testSuite = new arktest.ArkTestsuite('coroutines.launch_oom');
    testSuite.addTest('testLaunchOOM', testLaunchOOM);
    let res = testSuite.run();
    return res;
}