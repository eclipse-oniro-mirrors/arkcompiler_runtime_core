# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.language eTS

.record std.core.Object <external>
.record E <ets.extends=std.core.Object, access.record=public> {}
.record D <ets.extends=std.core.Object, access.record=public> {}
.record C <ets.extends=D, access.record=public> {}
.record I <ets.abstract, ets.interface, ets.extends=std.core.Object, access.record=public> {}
.record A <ets.implements=I, ets.extends=std.core.Object, access.record=public> {}
.record {UC,E} <external>
.record {UD,E} <external>

.function void A._ctor_(A a0) <ctor, access.function=public> {
	return.void
}
.function void D._ctor_(D a0) <ctor, access.function=public> {
	return.void
}

.record std.core.Console <external>
.record std.core.String <external>
.record std.core.ETSGLOBAL <external> {
	std.core.Console console <static, external, access.field=public>
}
.function void std.core.Console.log(std.core.Console a0, std.core.String a1) <external, access.function=public>
.function void I.bar(I a0, {UC,E} a1) <ets.abstract, noimpl, access.function=public>

.function void A.bar(A a0, {UD,E} a1) <access.function=public> {
	ldstatic.obj std.core.ETSGLOBAL.console
	sta.obj v0
	lda.str "bar"
	sta.obj v1
	call.short std.core.Console.log:(std.core.Console,std.core.String), v0, v1
	return.void
}

.function i32 main() <static, access.function=public> {
	initobj.short A._ctor_:(A)
	sta.obj v0
	initobj.short D._ctor_:(D)
	sta.obj v1
	call.virt.short A.bar, v0, v1
	ldai 0
	return
}
