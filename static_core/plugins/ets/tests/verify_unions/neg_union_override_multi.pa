# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.language eTS

.record A <ets.extends=AA, access.record=public> {}
.record AA <ets.extends=std.core.Object, access.record=public> {}
.record B <ets.extends=BB, access.record=public> {}
.record BB <ets.extends=std.core.Object, access.record=public> {}
.record C <ets.extends=CC, access.record=public> {}
.record CC <ets.extends=BB, access.record=public> {}
.record D <ets.extends=std.core.Object, access.record=public> {}
.record E <ets.extends=D, access.record=public> {}
.record std.core.Object <external>
.record {UA,C} <external>
.record {UAA,BB} <external>
.record {UB,C} <external>
.record ETSGLOBAL <ets.abstract, ets.extends=std.core.Object, access.record=public> {}

.function void BB._ctor_(BB a0) <ctor, access.function=public> {
	return.void
}
.function void E._ctor_(E a0) <ctor, access.function=public> {
	return.void
}
.function void D.foo(D a0, {UA,C} a1) <access.function=public> {
	return.void
}
.function void D.foo(D a0, {UB,C} a1) <access.function=public> {
	return.void
}
.function void E.foo(E a0, {UBB,AA} a1) <access.function=public> {
	return.void
}
.function void E.foo(E a0, {UB,C} a1) <access.function=public> {
	return.void
}

.function i32 ETSGLOBAL.main() <static, access.function=public> {
	initobj.short E._ctor_:(E)
	sta.obj v0
	initobj.short BB._ctor_:(BB)
	sta.obj v1
	call.virt.short E.foo:(E,{UBB,AA}), v0, v1
	ldai 1
	return
}
