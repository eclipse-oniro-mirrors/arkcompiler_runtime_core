# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # signature identical to the implementation signature
    - decl: |-
          class X {
              len: int = -1

              constructor(...p: Any[]) // identical to implementation signature
              constructor(...p: Any[]) {
                  this.len = p.length
              }
          }
      call: |-
          arktest.assertEQ(new X().len, 0)
          arktest.assertEQ(new X(1, 2, 3, 4, 5).len, 5)
          arktest.assertEQ(new X("", 0, [1, 2], new Object, null, () => {}, new X(), new X("")).len, 8)

    - decl: |-
          class X {
              len: int = -1

              constructor(...p: Any[]) // identical to implementation signature
              constructor(...p: Any[]) // Duplicate signatures not disallowed
              constructor(...p: Any[]) {
                  this.len = p.length
              }
          }
      call: |-
          arktest.assertEQ(new X().len, 0)
          arktest.assertEQ(new X(1, 2, 3, 4, 5).len, 5)
          arktest.assertEQ(new X("", 0, [1, 2], new Object, null, () => {}, new X(), new X("")).len, 8)

    - decl: |-
          class X {
              len: int = -1

              constructor()
              constructor(...p: Any[]) // identical to implementation signature
              constructor(...p: Any[]) {
                  this.len = p.length
              }
          }
      call: |-
          arktest.assertEQ(new X().len, 0)
          arktest.assertEQ(new X(1, 2, 3, 4, 5).len, 5)
          arktest.assertEQ(new X("", 0, [1, 2], new Object, null, () => {}, new X(), new X("")).len, 8)

    - decl: |-
          class X {
              len: int = -1

              constructor(...p: Any[]) // identical to implementation signature
              constructor()
              constructor(p: string)
              constructor(...p: Any[]) {
                  this.len = p.length
              }
          }
      call: |-
          arktest.assertEQ(new X().len, 0)
          arktest.assertEQ(new X(1, 2, 3, 4, 5).len, 5)
          arktest.assertEQ(new X("", 0, [1, 2], new Object, null, () => {}, new X(), new X("")).len, 8)
