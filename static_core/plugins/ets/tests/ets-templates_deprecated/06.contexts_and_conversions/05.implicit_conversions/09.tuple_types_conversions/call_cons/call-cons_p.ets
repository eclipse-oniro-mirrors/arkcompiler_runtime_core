/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*---
desc: Tuple types conversion is the conversion of one tuple type to another. Call
  context, constructor, tuple type conversion, implicit
name: call-cons_p
tags:
- compile-only
---*/

let s: [number] = [Double.POSITIVE_INFINITY];
type TUP = [Number]

class Z {
    fld: TUP
    constructor(p: TUP) {
        this.fld = p
    }
}

function main() {
    let z1: Z = new Z(s)
    let z2: Z = new Z([Double.POSITIVE_INFINITY])
}
