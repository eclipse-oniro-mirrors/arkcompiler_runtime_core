/*
 * Copyright (c) 2021-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class AHAH {
    constructor() {}
    constructor(a: int) {}

    meth(): int {
        return this.hoho
    }

    // TODO(kprokopenko): add test with reading this field jsut after resolve
    static fld: int = 30
    hoho: int = 3
}

function main() {
    const iType = Type.resolve("LTypeResolve/AHAH;") as ClassType
    const ctorsN = iType.getConstructorsNum()

    assertEQ( iType.getConstructorsNum() ,  2)
    iType.getConstructor(1).getName()

    let ok = false
    for (let i = 0; i < iType.getMethodsNum(); i++) {
        const m = iType.getMethod(i)
        if (m.getName() == "meth") {
            assertTrue( m.getType().getResultType() instanceof IntType)
            ok = true
            break
        }
    }
    assertTrue( ok)
    assertEQ( (iType.make() as AHAH).meth() ,  3)
}
