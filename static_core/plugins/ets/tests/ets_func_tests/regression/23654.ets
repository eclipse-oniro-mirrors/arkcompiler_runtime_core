/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*---
desc: Issue 23654. Object type matching error
tags: []
---*/

type TCallback = (args?: Array<Object>) => void
type CBA = TCallback[];

let callC = 0;

class Provider {
    public provide() {
        return (args?: Array<Object>) => {}
    }
}

class Consumer {
    public run(event: string, callback: Object) {
        callC++
    }
}

function provide() {
    return (args?: Array<Object>) => {}
}

function main() {
    callC = 0;
    let a: Consumer = new Consumer
    a.run('Test', (args?: Array<Object>) => {})
    arktest.assertEQ(1, callC)

    const tc0 = (args?: Array<Object>) => {}
    const tc1: TCallback = (args?: Array<Object>) => {}
    const ta: CBA = [(args?: Array<Object>) => {}]

    a.run('Test', tc0)
    a.run('Test', tc1)
    a.run('Test', ta[0])
    a.run('Test', provide())
    a.run('Test', new Provider().provide())

    arktest.assertEQ(6, callC)
}
