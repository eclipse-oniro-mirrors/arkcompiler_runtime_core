# plugin ets_map
# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include_relative 'map_set_common.irt'

def GenerateMapGet(cgmode)
  prefix = (cgmode == :NativePlus ? 'NativePlus' : '')
  function("MapGet#{prefix}".to_sym,
          params: {map: 'ref', key: 'ref'},
          regmap: $full_regmap,
          regalloc_set: $panda_mask,
          mode: [cgmode]) {

    if Options.arch == :arm32
      Intrinsic(:UNREACHABLE).Terminator.void
      next
    end

    processMapGet(map, key, cgmode)
}
end

def GenerateMapDelete(cgmode)
  prefix = (cgmode == :NativePlus ? 'NativePlus': '')
  function("MapDelete#{prefix}".to_sym,
          params: {map: 'ref', key: 'ref'},
          regmap: $full_regmap,
          regalloc_set: $panda_mask,
          mode: [cgmode]) {

    if Options.arch == :arm32
      Intrinsic(:UNREACHABLE).Terminator.void
      next
    end

    processMapDelete(map, key, cgmode)
}
end

def GenerateMapHas(cgmode)
  prefix = (cgmode == :NativePlus ? 'NativePlus': '')
  function("MapHas#{prefix}".to_sym,
          params: {map: 'ref', key: 'ref'},
          regmap: $full_regmap,
          regalloc_set: $panda_mask,
          mode: [cgmode]) {

    if Options.arch == :arm32
      Intrinsic(:UNREACHABLE).Terminator.void
      next
    end

    processMapHas(map, key, cgmode)
}
end
GenerateMapGet(:FastPath)
GenerateMapGet(:NativePlus)
GenerateMapDelete(:FastPath)
GenerateMapDelete(:NativePlus)
GenerateMapHas(:FastPath)
GenerateMapHas(:NativePlus)
