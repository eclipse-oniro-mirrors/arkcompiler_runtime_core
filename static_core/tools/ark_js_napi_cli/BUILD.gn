# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_runtime/js_runtime_config.gni")
import("test_config.gni")
if (!ark_standalone_build) {
  import("//build/ohos.gni")
}

ark_js_napi_cli_sources = [
  "ark_hz/ark_js_runtime.cpp",
  "js_runtime.cpp",
  "main.cpp",
  "utils/utils.cpp",
]

config("ark_js_napi_cli_config") {
  cflags_cc = [
    "-Wall",
    "-Wshadow",
    "-Werror",
    "-Wextra",
    "-pedantic",
    "-Wno-invalid-offsetof",
    "-Wno-gnu-statement-expression",
    "-pipe",
    "-Wdate-time",
    "-funwind-tables",
    "-fasynchronous-unwind-tables",
    "-Wformat=2",
    "-Wno-unused-parameter",
  ]

  defines = [
    "PANDA_ENABLE_LTO",
    "PANDA_TARGET_UNIX",
    "PANDA_TARGET_LINUX",
    "PANDA_USE_FUTEX",
  ]
}

ohos_source_set("ark_js_napi_cli_source_set") {
  sources = ark_js_napi_cli_sources

  public_configs = [
    "$js_root:ark_jsruntime_common_config",
    "$js_root:ark_jsruntime_public_config",
  ]

  external_deps = []
  deps = []

  public_configs += [ ":ark_js_napi_cli_config" ]

  include_dirs = [
    ".",
    "$ark_root/static_core/plugins/ets/tests/interop_js/test_helper",
  ]

  if (defined(ark_hybrid) && ark_hybrid) {
    defines = [ "ARK_HYBRID" ]
  }

  deps += [
    "$ark_root/static_core/libpandabase:libarktsbase",
    "$ark_root/static_core/plugins/ets/tests/interop_js/test_helper:interop_test_helper",
  ]

  # ace_napi should be before libark_jsruntime
  # because there are ace_napi weak symbols in libark_jsruntime
  # and ace_napi should be loaded before their resolution
  external_deps += [
    "libuv:uv",
    "napi:ace_napi",
  ]

  if (defined(ark_hybrid) && ark_hybrid) {
    deps += [ "$ark_root/static_core/runtime:libarkruntime" ]
  } else {
    external_deps += [ "ets_runtime:libark_jsruntime" ]
  }
}

ohos_executable("ark_js_napi_cli") {
  deps = [ ":ark_js_napi_cli_source_set" ]

  install_enable = false

  part_name = "runtime_core"
  subsystem_name = "arkcompiler"
}

template("host_hybridtest_action") {
  _target_name_ = "${target_name}"
  forward_variables_from(invoker, "*")
  action("${_target_name_}") {
    testonly = true
    script = "tests/test_runner.py"
    args = [
      "--tests-list=" + rebase_path("tests/test_list.txt"),
      "--build-dir=" + rebase_path("$root_out_dir"),
      "--tests-dir=" + rebase_path("tests"),
    ]
    outputs = [ "$target_out_dir/${_target_name_}/" ]
  }
}

if (ark_standalone_build) {
  host_hybridtest_action("HybridXGCTests") {
    deps = [ "$toolchain_root/build/core/gn:hybrid" ]
  }
}
