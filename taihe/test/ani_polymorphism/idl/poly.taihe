/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
interface Animal {
    Speak(): void;
    Move(): void;
}

@class
interface Dog: Animal {
    Fetch(): void;
}

@class
interface Cat: Animal {
    Fetch(): void;
}

function MakeAnimal(): Animal;
function MakeDog(): Dog;
function MakeCat(): Cat;

enum AnimalTag: i32 {
    ANIMAL = 0,
    DOG = 1,
    CAT = 2,
}

union AnimalType {
    dog: Dog;
    cat: Cat;
    animal: Animal;
}

function GetAnimal(tag: AnimalTag): AnimalType;
function InteractAnimal(a: AnimalType): String;

struct Person {
    name: String;
    age: i32;
}

struct Worker {
    @extends person: Person;
    serviceLen: i32;
}

struct Student {
    @extends person: Person;
    rank: i32;
}

enum PersonTag: i32 {
    PERSON = 0,
    WORKER = 1,
    STUDENT = 2,
}

union PersonType {
    worker: Worker;
    student: Student;
    person: Person;
}

function GetPerson(tag: PersonTag, name: String, age: i32): PersonType;
function IntroduceYourself(p: PersonType): String;