/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
enum Color: i32 {
    red = 1,
    yellow = 2,
    blue = 3,
}

struct Mystruct {
  testNum: i32;
  testStr: String;
}

interface overloadInterface {
    @overload("overloadFunc")
    overloadFunc_i8(a: i8, b: i8): i8;

    @overload("overloadFunc")
    overloadFunc_i16(a: i16, b: i16): i16;

    @overload("overloadFunc")
    overloadFunc_i32(a: i32, b: i32): i32;

    @overload("overloadFunc")
    overloadFunc_f32(a: f32, b: f32): f32;

    @overload("overloadFunc")
    overloadFunc_f64(a: f64, b: f64): f64;

    @overload("overloadFunc")
    overloadFunc_bool(a: bool, b: bool): bool;

    @overload("overloadFunc")
    overloadFunc_String(a: String, b: String): String;

    @overload("overloadFunc")
    overloadFunc_i8_i16(a: i8, b: i16): i8;

    @overload("overloadFunc")
    overloadFunc_i8_f32(a: i8, b: f32): i8;

    @overload("overloadFunc")
    overloadFunc_i8_String(a: i8, b: String): i8;

    @overload("overloadFunc")
    overloadFunc_enum(p0: Color): i32;

    @overload("overloadFunc")
    overloadFunc_mystruct(p0: Mystruct): String;

    @overload("overloadFunc")
    overloadFunc_point(a: Array<i32>): i32;
    @overload("overloadFunc")
    overloadFunc_point1(a: Array<f32>): f32;
    @overload("overloadFunc")
    overloadFunc_ArrayBuffer(a: Array<u8>): u8;

    @overload("overloadFunc")
    overloadFunc_5param_1(p0: i8, p1: i16, p2: i32, p3: f32, p4: f64): void;

    @overload("overloadFunc")
    overloadFunc_5param_primitive_2(
        p0: bool,
        p1: String,
        p2: i8,
        p3: i16,
        p4: i32
    ): bool;

    @overload("overloadFunc")
    overloadFunc_5param_primitive_3(
        p0: f32,
        p1: f64,
        p2: bool,
        p3: String,
        p4: i8
    ): f32;

    @overload("overloadFunc")
    overloadFunc_5param_primitive_4(
        p0: String,
        p1: i16,
        p2: i32,
        p3: f32,
        p4: bool
    ): String;

    @overload("overloadFunc")
    overloadFunc_5param_primitive_5(
        p0: String,
        p1: String,
        p2: String,
        p3: bool,
        p4: bool
    ): String;
    
   
    @overload("overloadFunc")
    overloadFunc_5param_primitive_6(
        p0: i16,
        p1: i32,
        p2: f32,
        p3: f64,
        p4: bool
    ): i16;


    @overload("overloadFunc")
    overloadFunc_5param_primitive_7(
        p0: String,
        p1: i8,
        p2: i16,
        p3: f32,
        p4: bool
    ): String;


    @overload("overloadFunc")
    overloadFunc_5param_primitive_8(
        p0: bool,
        p1: i8,
        p2: i32,
        p3: f64,
        p4: String
    ): bool;


    @overload("overloadFunc")
    overloadFunc_5param_primitive_9(
        p0: f64,
        p1: bool,
        p2: String,
        p3: i16,
        p4: i32
    ): f64;


    @overload("overloadFunc")
    overloadFunc_5param_primitive_10(
        p0: i8,
        p1: f32,
        p2: bool,
        p3: String,
        p4: i32
    ): i8;

    @overload("overloadFunc")
    overloadFunc_10param(p0: i8, p1: i16, p2: i32, p3: f32, p4: f64, p5: bool, p6: String, p7: Array<i8>, p8:Array<i16>, p9:Array<i32>): void;

    @overload("overloadFunc")
    overloadFunc_10param1(p0: i8, p1: i16, p2: i32, p3: f32, p4: f64, p5: bool, p6: String, p7: Array<i8>, p8:Mystruct, p9:Color): void;

    @overload("overloadFunc")
    overloadFunc_10param2(p0: i8, p1: Mystruct, p2: Color, p3: Array<f32>, p4: Array<f64>, p5: Array<bool>, p6: Array<String>, p7: Array<i8>, p8:Array<i16>, p9:Array<i32>): void;

    @overload("overloadFunc")
    overloadFunc_10param3(p0: i8, p1: i16, p2: i32, p3: f32, p4: f64, p5: bool, p6: String, p7: Array<u8>, p8:Mystruct, p9:Color): void;
    @overload("overloadFunc")
    overloadFunc_10param4(p0: i8, p1: i16, p2: i32, p3: f32, p4: f64, p5: bool, p6: String, p7: Array<i8>, p8:Array<u8>, p9:Color): void;

    @overload("overloadFunc")
    overloadFunc_enum_record( p1:Color, p2:Map<String, i16>): void;

    @overload("overloadFunc")
    overloadFunc_array_record( p1:Array<i32>, p2:Map<String, i16>): void;


  
}

function get_interface(): overloadInterface;
